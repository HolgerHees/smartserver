- name: prepare needed folder
  file:
    path: "{{global_build}}{{item}}"
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - openhab_zwave/
    - openhab_zwave/ESH-INF
    - openhab_zwave/ESH-INF/thing/
    - openhab_zwave/ESH-INF/thing/zwaveme/

- name: detect openhab version
  shell: "docker ps -aq -f name=openhab --format \'{{ '{{' }}.Image{{ '}}' }}\'"
  register: openhab_version_string
  changed_when: no
  
- name: set openhab version
  set_fact:
    openhab_version: "{{openhab_version_string.stdout.split(':')[1]}}"
    openhab_branch: "{{openhab_version_string.stdout.split(':')[1].split('.')[0]}}.{{openhab_version_string.stdout.split(':')[1].split('.')[1]}}"
 
- name: copy zuno_weatherstation config
  copy:
    src: "{{projects_path}}openhab2/zuno_weatherstation.xml"
    dest: "{{global_build}}openhab_zwave/ESH-INF/thing/zwaveme/zuno_weatherstation.xml"
    remote_src: yes
  register: copy_result

- name: download jar files
  unarchive:
    src: "https://ci.openhab.org/view/Integration%20Builds%20({{openhab_branch}}.x)/job/openHAB{{openhab_branch}}.x-ZWave/lastSuccessfulBuild/artifact/target/*zip*/target.zip"
    dest: "{{global_build}}openhab_zwave/"
    creates: "{{global_build}}openhab_zwave/org.openhab.binding.zwave-{{openhab_version}}.jar"
    remote_src: yes
  register: download_result

- name: extract jar file
  shell: "mv {{global_build}}openhab_zwave/target/org.openhab.binding.zwave-*-SNAPSHOT.jar {{global_build}}openhab_zwave/org.openhab.binding.zwave-{{openhab_version}}.jar"
  when: "download_result.changed"

- name: clean jar files
  file:
    path: "{{global_build}}openhab_zwave/target/"
    state: absent
  when: "download_result.changed"
  
- name: prepare jar
  copy:
    src: "{{global_build}}openhab_zwave/org.openhab.binding.zwave-{{openhab_version}}.jar"
    dest: "{{global_build}}openhab_zwave/org.openhab.binding.zwave.jar"
    remote_src: yes
  when: "download_result.changed or copy_result.changed"
    
- name: copy zuno_weatherstation config into jar
  shell: "cd {{global_build}}openhab_zwave/ && zip org.openhab.binding.zwave.jar ./ESH-INF/thing/zwaveme/zuno_weatherstation.xml"
  when: "download_result.changed or copy_result.changed"

- name: copy jar
  copy:
    src: "{{global_build}}openhab_zwave/org.openhab.binding.zwave.jar"
    dest: "{{global_etc}}openhab/addons/org.openhab.binding.zwave.jar"
    remote_src: yes
    mode: 0644
  when: "download_result.changed or copy_result.changed"
