- name: check if raid exists
  stat:
    path: "/etc/mdadm.conf"
  register: mdraid

- name: install required packages => is_fedora
  yum:
    name: "mdadm"
    state: present
  notify: "restart mdmonitor"
  when: mdraid.stat.exists and is_fedora|bool
  
- name: install required packages => is_suse
  zypper:
    name: "mdadm"
    state: present
  notify: "restart mdmonitor"
  when: mdraid.stat.exists and is_suse|bool
  
- name: set config
  lineinfile:
    path: "/etc/sysconfig/{{ 'mdadm' if is_suse|bool else 'mdmonitor' }}"
    regexp: '^{{item.field}}\s*='
    line: '{{item.field}}="{{item.value}}"'
    create: true
    owner: root
    group: root
    mode: 0640
  with_items:
    - { field: 'MDADM_DELAY', value: '60' }
    - { field: 'MDADM_MAIL', value: 'root' }
    - { field: 'MDADM_RAIDDEVICES', value: '/dev/md0' }
    - { field: 'MDADM_SCAN', value: 'yes' }
    - { field: 'MDADM_SEND_MAIL_ON_START', value: 'yes' }
    - { field: 'MDADM_DEVICE_TIMEOUT', value: '60' }
  notify: "restart mdmonitor"
  when: mdraid.stat.exists

- name: disable default check cron jobs
  file: 
    path: "/etc/{{ 'cron.d/mdadm' if is_suse|bool else 'cron.weekly/raid-check' }}"
    state: absent
  when: mdraid.stat.exists

- name: set cron job env
  cron:
    name: PATH
    env: yes
    value: /sbin:/usr/sbin:/bin:/usr/bin
    cron_file: ansible_mdadm
    user: root
  tags: cron
  when: mdraid.stat.exists
    
- name: create cron 'start' job
  vars:
    name: "RAID Check (Start)"
    cmd: "/usr/share/mdadm/mdcheck --duration 4 hours"
    file: "ansible_mdadm"
    weekday: "7"
    hour: "1"
    minute: "0"
  import_tasks: roles/cron/tasks/add_cronjob.yml
  when: mdraid.stat.exists

- name: create cron 'continue' job
  vars:
    name: "RAID Check (Continue)"
    cmd: "/usr/share/mdadm/mdcheck --continue --duration 4 hours"
    file: "ansible_mdadm"
    weekday: "1-6"
    hour: "1"
    minute: "0"
  import_tasks: roles/cron/tasks/add_cronjob.yml
  when: mdraid.stat.exists

# ***** FINALIZE *****
- name: register systemd service watcher
  vars:
    name: "mdmonitor"
  import_tasks: roles/systemd_watcher/tasks/add_watcher.yml
  when: mdraid.stat.exists

- name: trigger service check handler
  vars:
    notify: "restart mdmonitor"
    service: "mdmonitor.service"
  import_tasks: roles/base/tasks/service_check.yml
  when: mdraid.stat.exists
