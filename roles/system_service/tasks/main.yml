- name: set version
  set_fact:
    speedtest_version: "1.2.0"
  tags: [ 'update_notifier_config' ]

- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{global_opt}}system_service/" }
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{global_opt}}system_service/config" }
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{global_lib}}system_service/" }
  include_tasks: roles/_shared/create_directories.yml

- name: synchronize service
  synchronize:
    src: "templates/opt/{{item.path}}"
    dest: "{{global_opt}}system_service/"
    archive: no
    checksum: yes
    group: yes
    owner: yes
    perms: yes
    recursive: yes
    rsync_opts:
      - "--chown=root:root"
      - "--chmod={{item.chmod}}"
  with_items:
    - { "chmod": "D750,F640", "path": "system_service/lib" }
    - { "chmod": "D750,F750", "path": "system_service/system_service" }
  notify: "restart system_service"

- name: copy service config
  template:
    src: "templates/config.py"
    dest: "{{global_opt}}system_service/config/config.py"
    owner: root
    group: root
    mode: 0750
  notify: "restart system_service"

- name: build podman image
  vars:
    container_name: "system_service"
    image_name: "custom_system_service:{{alpine_version}}"
    image_files:
      - roles/system_service/templates/container/Dockerfile
    entrypoint_services:
      - "/opt/shared/python/install.py"
      - "/opt/system_service/system_service &"
  include_tasks: roles/container/shared/build_podman_image.yml
  tags: ['container_entrypoint_config']

- name: create podman container
  containers.podman.podman_container:
    name: system_service
    image: "custom_system_service:{{alpine_version}}"
    state: present
    security_opt:
      - label=disable
    capabilities:
      - NET_ADMIN
      - NET_RAW
    env:
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: system_service
    network: "host"
    exposed_ports:
      - "8507"
      - "2055/udp"
    volumes:
#      - '{{global_build}}system_service/entrypoint.sh:/entrypoint.sh:rw'
      - '{{global_opt}}shared/python:/opt/shared/python:ro'
      - '{{global_opt}}system_service/:/opt/system_service:ro'
      - "{{global_lib}}system_service/:/var/lib/system_service:rw"
  notify: "restart system_service"

# ***** SERVICE CONFIGS *****
- name: handle systemd service
  vars:
    container_name: "system_service"
    container_readyness: { "type": "port_check", "ip": "127.0.0.1", "port": "8507" }
    container_after: [ "network-online.target", "mosquitto", "influxdb" ]
  include_tasks: roles/container/shared/handle_podman_service.yml
  tags: ['systemd_watcher_config','systemd_service_config']
  
- name: add container name
  vars:
    host_name: "system_service"
    host_ip_address: "{{default_server_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

# ***** INFLUXDB DATABASE ****
- name: create database
  vars:
    database: "system_info"
    retentions: 
      - { retention: "14d" }
#      - { retention: "90d", name: "090d", interval: "5m", every: "6h" }
#      - { retention: "360d", name: "360d", interval: "15m", every: "12h" }
#      - { retention: "0", name: "999d", interval: "1h", every: "1d" }
    backup: yes
  include_tasks: roles/influxdb/shared/add_bucket.yml
  tags: ["cron_job", "backup_restore"]
  when: "influxdb_enabled"

# ***** DEPENDENCY CONFIGS *****
- name: register prometheus rules & metrics
  vars:
    name: "system_service"
    rules_file: "templates/prometheus/rules.yml"
    scrape_file: "templates/prometheus/scrape.yml"
  include_tasks: roles/prometheus/shared/add_config.yml
  tags: ['prometheus_config']
  when: "monitoring_enabled"

- name: register grafana configs
  vars:
    name: "system_service"
    datasources: 
      - "templates/grafana/datasources/system_info_influxdb.yaml"
    dashboards:
      - "templates/grafana/dashboards/System Service Scanner.json"
      - "templates/grafana/dashboards/System Service WAN.json"
  include_tasks: roles/grafana/shared/add_datasource.yml
  tags: ['grafana_config']
  when: "grafana_enabled"

- name: register grafana configs
  vars:
    name: "system_service"
    dashboards:
      - "templates/grafana/dashboards/System Service Netflow Detailed Traffic Events.json"
      - "templates/grafana/dashboards/System Service Netflow Grouped Traffic Events.json"
      - "templates/grafana/dashboards/System Service Netflow Observed IPs.json"
      - "templates/grafana/dashboards/System Service Netflow Overview.json"
      - "templates/grafana/dashboards/System Service Netflow World Map.json"
  include_tasks: roles/grafana/shared/add_datasource.yml
  tags: ['grafana_config']
  when: "grafana_enabled and system_service_netflow_collector"

- name: synchronize webui
  synchronize:
    src: "templates/htdocs/system_service"
    dest: "{{htdocs_path}}"
    archive: no
    checksum: yes
    group: yes
    owner: yes
    perms: yes
    recursive: yes
    rsync_opts:
      - "--chown={{system_users['www'].name}}:{{system_groups['www'].name}}"
      - "--chmod=D750,F640"
  tags: ['apache_webui_page']

- name: register webui
  vars:
    name: "system_service"
    js_file: "templates/webui/system_service.js"
    i18n_files: [ { language: "de", file: "templates/webui/system_service.de.json" } ]
    icons: [ 'templates/webui/icons/system_service_logo.svg' ]
  include_tasks: roles/apache_webui/shared/add_webui.yml
  tags: ['apache_webui_config']

- name: copy service apache config
  vars:
    service_name: "system_service"
    service_host: "127.0.0.1:8507"
    service_additional_config: |
        <Location /system_service/metrics/>
          ProxyPass http://127.0.0.1:8507/metrics/
          ProxyPassReverse http://127.0.0.1:8507/metrics/
        </Location>
  include_tasks: roles/shared_libs/shared/add_apache_service_config.yml
  tags: ['apache_config']

- name: copy service fluentd config
  vars:
    service_name: "system_service"
    service_is_container: yes
  include_tasks: roles/shared_libs/shared/add_fluentd_service_config.yml
  tags: ['fluentd_config']
  when: "monitoring_enabled"
