# ***** CHECK *****

- name: check mysql service
  import_tasks: roles/mysql/tasks/wait_until_ready.yml
    
- name: check redis service
  import_tasks: roles/redis/tasks/wait_until_ready.yml

- name: check apache service
  import_tasks: roles/apache/tasks/wait_until_ready.yml

# ***** OCC *****
- name: install apps
  shell: "docker exec apache2 sh -c \"sudo -u {{system_users['www'].name}} php {{htdocs_path}}nextcloud/occ app:install {{item}}\""
  register: command_result
  failed_when: "'installed' not in command_result.stdout and 'enabled' not in command_result.stdout and 'already exists' not in command_result.stdout"
  changed_when: "'enabled' in command_result.stdout"
  with_items:
    - user_saml # must always be the first one
    - bookmarks
    - contacts
    - calendar
    - notes
    - tasks

- name: enable environment based authentication through user_saml app
  shell: "docker exec mysql sh -c \"mysql -u root -h 127.0.0.1 nextcloud -e \\\"INSERT INTO oc_appconfig (appid, configkey, configvalue) VALUES ('user_saml', 'type', 'environment-variable') ON DUPLICATE KEY UPDATE configvalue='environment-variable';\\\"\""
  when: "command_result.results[0].changed" # index 0 is app 'user_saml'

- name: set environment variable used by user_saml app
  shell: "docker exec mysql sh -c \"mysql -u root -h 127.0.0.1 nextcloud -e \\\"INSERT INTO oc_appconfig (appid, configkey, configvalue) VALUES ('user_saml', 'general-uid_mapping', 'REMOTE_USERNAME') ON DUPLICATE KEY UPDATE configvalue='REMOTE_USERNAME';\\\"\""
  when: "command_result.results[0].changed" # index 0 is app 'user_saml'

#- name: set environment variable used by user_saml app
#  shell: "docker exec mysql sh -c \"mysql -u root -h 127.0.0.1 nextcloud -e \\\"INSERT INTO oc_appconfig (appid, configkey, configvalue) VALUES ('user_saml', 'types', 'authentication') ON DUPLICATE KEY UPDATE #configvalue='REMOTE_USERNAME';\\\"\""
#  when: "command_result.results[0].changed" # index 0 is app 'user_saml'

# ***** KEEWEB *****
- name: install keeweb app => app does not exists
  unarchive:
    src: "https://github.com/jhass/nextcloud-keeweb/releases/download/v0.5.1/keeweb-0.5.1.tar.gz"
    dest: "{{htdocs_path}}nextcloud/apps/"
    remote_src: yes
    creates: "{{htdocs_path}}nextcloud/apps/keeweb/"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
  register: keeweb_installation
  
- name: copy patched script.js
  template:
    src: "templates/apps/script.js"
    dest: "{{htdocs_path}}nextcloud/apps/keeweb/js/script.js"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
  when: keeweb_installation.changed

- name: check keeweb max version
  lineinfile:
    path: "{{htdocs_path}}nextcloud/apps/keeweb/appinfo/info.xml"
    regexp: '(.*max-version)="[0-9]+"(.*)'
    line: '\1="20"\2'
    backrefs: yes
  when: keeweb_installation.changed
  
- name: enable keeweb app => app does not exists
  shell: "docker exec apache2 sh -c \"sudo -u {{system_users['www'].name}} php {{htdocs_path}}nextcloud/occ app:enable keeweb\""
  when: keeweb_installation.changed

# ***** NEWS *****
- name: install news app
  unarchive:
    src: "https://github.com/nextcloud/news/releases/download/14.0.1/news.tar.gz"
    dest: "{{htdocs_path}}nextcloud/apps/"
    remote_src: yes
    creates: "{{htdocs_path}}nextcloud/apps/news/"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
  register: news_installed
  
#- name: patch news app min required version => app installation changed
#  lineinfile:
#    path: "{{htdocs_path}}nextcloud/apps/news/appinfo/info.xml"
#    regexp: '<nextcloud min-version='
#    line: '<nextcloud min-version="14" max-version="20"/>'
#  when: news_installed.changed
  
- name: prepare news config folder
  file:
    path: "{{item}}"
    state: directory
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0750
  with_items:
    - "{{nextcloud_data_path}}news"
    - "{{nextcloud_data_path}}news/config"
    
- name: copy news config
  template:
    src: "templates/apps/news.ini"
    dest: "{{nextcloud_data_path}}news/config/config.ini"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0640
  
- name: enable news app => app installation changed
  shell: "docker exec apache2 sh -c \"sudo -u {{system_users['www'].name}} php {{htdocs_path}}nextcloud/occ app:enable news\""
  when: news_installed.changed

 
