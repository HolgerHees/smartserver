- name: set version
  set_fact:
    nextcloud_news_version: '21.1.0'
    nextcloud_keeweb_version: '0.6.12'
  
# ***** CHECK *****
- name: check mysql service
  import_tasks: roles/mysql/shared/wait_until_ready.yml
    
- name: check redis service
  import_tasks: roles/redis/shared/wait_until_ready.yml

- name: check apache service
  import_tasks: roles/apache/shared/wait_until_ready.yml

# ***** DISABLE APPS *****
- name: disable apps
  shell: "docker exec php sh -c \"php {{htdocs_path}}nextcloud/occ app:disable {{item}}\""
  register: app_disable_result
  changed_when: "'disabled' in app_disable_result.stdout"
#  failed_when: "'disabled' not in app_disable_result.stdout and 'such app enabled' not in app_disable_result.stdout"
  with_items:
    - dashboard
    - collectives
#    - tasks
#    - notes

# ***** INSTALL APPS *****
- name: check installed apps
  shell: "docker exec php sh -c \"php {{htdocs_path}}nextcloud/occ app:list\""
  changed_when: no
  register: app_list_result

- name: install core apps
  shell: "docker exec php sh -c \"php {{htdocs_path}}nextcloud/occ app:install {{item}}\""
  register: app_install_result
  failed_when: "'installed' not in app_install_result.stdout and 'enabled' not in app_install_result.stdout and 'already exists' not in app_install_result.stdout"
  changed_when: "'enabled' in app_install_result.stdout"
  when: "'- ' + item + ':' not in app_list_result.stdout"
  with_items:
    - user_saml
#    - onlyoffice
    - richdocuments
    - jsloader
    - previewgenerator
    - bookmarks
    - contacts
    - calendar
    - notes
#    - collectives
    - deck
    - tasks
    
- name: install additional_apps
  shell: "docker exec php sh -c \"php {{htdocs_path}}nextcloud/occ app:install {{item.app}}\""
  register: app_install_result
  failed_when: "'installed' not in app_install_result.stdout and 'enabled' not in app_install_result.stdout and 'already exists' not in app_install_result.stdout"
  changed_when: "'enabled' in app_install_result.stdout"
  when: "'- ' + item.app + ':' not in app_list_result.stdout"
  with_items: "{{nextcloud_additional_apps}}"

#docker exec php sh -c "php -f /dataDisk/htdocs/nextcloud/occ update:check"
- name: check available app updates
  shell: "docker exec php sh -c \"php {{htdocs_path}}nextcloud/occ app:update --showonly\""
  changed_when: no
  register: app_update_available_result
  
#- name: show available app updates
#  debug:
#    msg: "docker exec php sh -c \"php {{htdocs_path}}nextcloud/occ app:update {{item.split()[0]}}\""
#  with_items: "{{app_update_available_result.stdout_lines}}"

- name: update apps
  shell: "docker exec php sh -c \"php {{htdocs_path}}nextcloud/occ app:update {{item.split()[0]}}\""
  register: app_update_process_result
  changed_when: "'updated' in app_update_process_result.stdout"
  with_items: "{{app_update_available_result.stdout_lines}}"

#- name: show available app updates
#  debug:
#    msg: "{{app_update_process_result}}"

# ***** CONFIGURE apps *****
- name: read app configs
  shell: "docker exec mysql sh -c \"mysql -u root -h 127.0.0.1 nextcloud -e \\\"SELECT appid,configkey,configvalue FROM oc_appconfig;\\\"\""
  changed_when: no
  register: app_config_result

- name: set app configs
  set_fact:
    app_configs:
      - { app: "user_saml", name: "type", value: "environment-variable" }
      - { app: "user_saml", name: "general-uid_mapping", value: "REMOTE_USERNAME" }
      - { app: "user_saml", name: "saml-attribute-mapping-displayName_mapping", value: "REMOTE_USERFULLNAME" }

      - { app: "richdocuments", name: "disable_certificate_verification", value: "" }
      - { app: "richdocuments", name: "enabled", value: "yes" }
#      - { app: "richdocuments", name: "installed_version", value: "" }
#      - { app: "richdocuments", name: "public_wopi_url", value: "" }
      - { app: "richdocuments", name: "types", value: "prevent_group_restriction" }
      - { app: "richdocuments", name: "wopi_allowlist", value: "{{docker_libreoffice_ip}}" }
      - { app: "richdocuments", name: "wopi_url", value: "https://libreoffice.{{server_domain}}" }
      - { app: "richdocuments", name: "uiDefaults-UIMode", value: "tabbed" }

#      - { app: "onlyoffice", name: "DocumentServerInternalUrl", value: "" }
#      - { app: "onlyoffice", name: "DocumentServerUrl", value: "https://onlyoffice.{{server_domain}}/" }
#      - { app: "onlyoffice", name: "StorageUrl", value: "" }
#      - { app: "onlyoffice", name: "customizationChat", value: "false" }
#      - { app: "onlyoffice", name: "customizationCompactHeader", value: "true" }
#      - { app: "onlyoffice", name: "customizationForcesave", value: "true" }
#      - { app: "onlyoffice", name: "customizationFeedback", value: "false" }
#      - { app: "onlyoffice", name: "customizationHelp", value: "true" }
#      - { app: "onlyoffice", name: "customizationReviewDisplay", value: "original" }
#      - { app: "onlyoffice", name: "customizationToolbarNoTabs", value: "true" }
#      - { app: "onlyoffice", name: "defFormats", value: '{"csv":"true","doc":"true","docm":"false","docx":"true","dotx":"true","epub":"false","html":"false","odp":"true","ods":"true","odt":"true","otp":"false","ots":"false","ott":"false","pdf":"false","potm":"false","potx":"false","ppsm":"false","ppsx":"true","ppt":"false","pptm":"false","pptx":"false","rtf":"true","txt":"true","xls":"true","xlsm":"false","xlsx":"true","xltm":"false","xltx":"false"}' }
#      - { app: "onlyoffice", name: "editFormats", value: '{"csv":"true","odp":"false","ods":"false","odt":"false","rtf":"false","txt":"true"}' }
#      - { app: "onlyoffice", name: "enabled", value: "yes" }
#      - { app: "onlyoffice", name: "groups", value: "[]" }
#      - { app: "onlyoffice", name: "preview", value: "false" }
#      - { app: "onlyoffice", name: "sameTab", value: "false" }
#      - { app: "onlyoffice", name: "settings_error", value: "" }
#      - { app: "onlyoffice", name: "types", value: "prevent_group_restriction" }
#      - { app: "onlyoffice", name: "verify_peer_off", value: "false" }
#      - { app: "onlyoffice", name: "versionHistory", value: "true" }

      - { app: "jsloader", name: "snippet", value: "document.domain='{{server_domain}}'; if( window.parent != window && window.parent == window.top && ['','fa.','ba.'].indexOf(window.top.location.host.replace('{{server_domain}}','')) != -1){ var script = document.createElement('script'); script.src = 'https://' + window.top.location.host + '/main/listener/frame.js'; document.head.appendChild(script); }" }

      - { app: "previewgenerator", name: "squareSizes", value: "256" }
      - { app: "previewgenerator", name: "widthSizes", value: "256" }
      - { app: "previewgenerator", name: "heightSizes", value: "256" }

      - { app: "notes", name: "fileSuffix", value: ".md" }

      - { app: "text", name: "workspace_available", value: "0" }
      
- name: prepare app configs
  set_fact:
    prepared_app_configs: "{{ prepared_app_configs | default([]) + [ { 'app': item.app, 'name': item.name, 'value': item.value | replace(\"'\", \"\\'\" ) | replace('\"', '\\\\\\\"') } ] }}"
  when: "item.app + \"\\t\" + item.name + \"\\t\" + item.value not in app_config_result.stdout "
  with_items: "{{app_configs}}"
      
- name: set app config
  shell: "docker exec mysql sh -c \"mysql -u root -h 127.0.0.1 nextcloud -e \\\"INSERT INTO oc_appconfig (appid, configkey, configvalue) VALUES ('{{item.app}}', '{{item.name}}', '{{item.value}}') ON DUPLICATE KEY UPDATE configvalue='{{item.value}}';\\\"\""
  register: change_app_config_result
  failed_when: change_app_config_result.rc != 0
  with_items: "{{prepared_app_configs}}"
  when: "prepared_app_configs is defined"

#- name: set onlyoffice shared key # must be separate to avoid visibile shared key in console log
#  shell: "docker exec mysql sh -c \"mysql -u root -h 127.0.0.1 nextcloud -e \\\"INSERT INTO oc_appconfig (appid, configkey, configvalue) VALUES ('onlyoffice', 'jwt_secret', '{{vault_onlyoffice_shared_key}}') ON DUPLICATE KEY UPDATE configvalue='{{vault_onlyoffice_shared_key}}';\\\"\""
#  register: set_shared_key_result
#  changed_when: no
#  failed_when: set_shared_key_result.rc != 0

# ***** PREVIEW GENERATOR CRON JOB *****
- name: create previewgenerator incremental cron job
  vars:
    name: "Nextcloud Previewupdates"
    cmd: "docker exec php sh -c \"php -f {{htdocs_path}}nextcloud/occ preview:pre-generate > /dev/null\""
    file: "ansible_nextcloud"
    minute: "*/15"
  import_tasks: roles/cron/shared/add_cronjob.yml

# ***** INSTALL KEEWEB *****
- name: check for outdated keeweb version
  shell: "grep --invert \"<version>{{nextcloud_keeweb_version}}<\\/version>\" {{htdocs_path}}nextcloud/apps/keeweb/appinfo/info.xml | grep \"<version>.*<\\/version>\""
  register: keeweb_result
  changed_when: "keeweb_result.rc == 0"
  failed_when: False
  
- name: uninstall outdated keeweb version => old version was detected
  file:
    state: absent
    path: "{{htdocs_path}}nextcloud/apps/keeweb/"
  when: "keeweb_result.rc == 0"
  
- name: install keeweb app => app does not exists
  unarchive:
    src: "https://github.com/jhass/nextcloud-keeweb/releases/download/v{{nextcloud_keeweb_version}}/keeweb-{{nextcloud_keeweb_version}}.tar.gz"
    dest: "{{htdocs_path}}nextcloud/apps/"
    remote_src: yes
    creates: "{{htdocs_path}}nextcloud/apps/keeweb/"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
  register: keeweb_installation
  
- name: synchronize patched service-worker.js
  synchronize:
    src: "templates/apps/service-worker.js"
    dest: "{{htdocs_path}}nextcloud/apps/keeweb/templates/"
    archive: no
    checksum: yes
    group: yes
    owner: yes
    perms: yes
    recursive: yes
    rsync_opts:
      - "--chown={{system_users['www'].name}}:{{system_groups['www'].name}}"
      - "--chmod=F644"

#- name: check keeweb max version
#  lineinfile:
#    path: "{{htdocs_path}}nextcloud/apps/keeweb/appinfo/info.xml"
#    regexp: '(.*max-version)="[0-9]+"(.*)'
#    line: '\1="21"\2'
#    backrefs: yes
#  when: keeweb_installation.changed
  
# ***** INSTALL NEWS *****
- name: check for outdated news version
  shell: "grep --invert \"<version>{{nextcloud_news_version}}<\\/version>\" {{htdocs_path}}nextcloud/apps/news/appinfo/info.xml | grep \"<version>.*<\\/version>\""
  register: news_result
  changed_when: "news_result.rc == 0"
  failed_when: False
  
- name: uninstall outdated news version => old version was detected
  file:
    state: absent
    path: "{{htdocs_path}}nextcloud/apps/news/"
  when: "news_result.rc == 0"

- name: install news app
  unarchive:
    src: "https://github.com/nextcloud/news/releases/download/{{nextcloud_news_version}}/news.tar.gz"
    dest: "{{htdocs_path}}nextcloud/apps/"
    remote_src: yes
    creates: "{{htdocs_path}}nextcloud/apps/news/"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
  register: news_installation
  
#- name: patch news app min required version => app installation changed
#  lineinfile:
#    path: "{{htdocs_path}}nextcloud/apps/news/appinfo/info.xml"
#    regexp: '<nextcloud min-version='
#    line: '<nextcloud min-version="14" max-version="20"/>'
#  when: news_installation.changed
  
- name: prepare news config folder
  file:
    path: "{{item}}"
    state: directory
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0750
  with_items:
    - "{{nextcloud_data_path}}news"
    - "{{nextcloud_data_path}}news/config"
    
- name: synchronize news config
  synchronize:
    src: "templates/apps/news.ini"
    dest: "{{nextcloud_data_path}}news/config/config.ini"
    archive: no
    checksum: yes
    group: yes
    owner: yes
    perms: yes
    recursive: yes
    rsync_opts:
      - "--chown={{system_users['www'].name}}:{{system_groups['www'].name}}"
      - "--chmod=F640"

# maybe cleanup 
# UPDATE `oc_jobs` SET `reserved_at` = 0 WHERE `class` = 'OCA\\News\\Cron\\Updater'
    
# ***** UPGRADE AFTER keeweb or news installatioin *****
- name: upgrade existing database => keeweb or news version changed
  shell: "docker exec php sh -c \"php {{htdocs_path}}nextcloud/occ upgrade\""
  when: "keeweb_installation.changed or news_installation.changed"
  
# ***** CHECK FOR DISABLED APPS *****
- name: get final app status
  shell: "docker exec php sh -c \"php {{htdocs_path}}nextcloud/occ app:list\""
  register: app_status
  changed_when: no

- name: enable disabled core apps
  shell: "docker exec php sh -c \"php {{htdocs_path}}nextcloud/occ app:enable {{item}} --force\""
  register: app_enable_result
  failed_when: "'enabled' not in app_enable_result.stdout"
  when: "item not in app_status.stdout.split('Disabled')[0]"
  with_items:
    - user_saml
#    - onlyoffice
    - richdocuments
#    - collectives
    - jsloader
    - previewgenerator
    - keeweb
    - news
    - notes
    - tasks

- name: enable disabled additional_apps apps
  shell: "docker exec php sh -c \"php {{htdocs_path}}nextcloud/occ app:enable {{item.app}} --force\""
  register: app_enable_result
  failed_when: "'enabled' not in app_enable_result.stdout"
  when: "item.app not in app_status.stdout.split('Disabled')[0]"
  with_items: "{{nextcloud_additional_apps}}"

- name: collect additional app icons
  set_fact:
    nextcloud_additional_icons: |
      [
        {% for entry in nextcloud_additional_apps %}
          {% if entry.icon %}
            '{{entry.icon}}',
          {% endif %}
        {% endfor %}
      ]
  when: "nextcloud_additional_apps | length > 0"
  tags: ['apache_webui_config']

- name: register additional app webui
  vars:
    name: "nextcloud_additional_apps"
    js_file: "templates/nextcloud_additional_apps.js"
    i18n_files: []
    icons: "{{nextcloud_additional_icons}}"
  import_tasks: roles/apache_webui/shared/add_webui.yml
  when: "nextcloud_additional_apps | length > 0"

- name: register news update notifier
  vars:
    name: "nextcloud_news"
    type: "github"
    url: "https://github.com/nextcloud/news/releases"
    config: { 
      project: "nextcloud/news", 
      pattern: "^([0-9\\.]+)$",
      version: "{{nextcloud_news_version}}" 
    }
  import_tasks: roles/update_service/shared/add_software.yml

- name: register keeweb update notifier
  vars:
    name: "nextcloud_keeweb"
    type: "github"
    url: "https://github.com/jhass/nextcloud-keeweb/releases"
    config: { 
      project: "jhass/nextcloud-keeweb", 
      pattern: "^v([0-9\\.]+)$",
      version: "v{{nextcloud_keeweb_version}}" 
    }
  import_tasks: roles/update_service/shared/add_software.yml

- name: apply patches
  copy:
    src: "templates/patches/{{item}}"
    dest: "{{htdocs_path}}nextcloud/{{item}}"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0640
  with_items:
    - "lib/private/Authentication/Token/PublicKeyTokenProvider.php"
    - "apps/notes/lib/Controller/SettingsController.php"

