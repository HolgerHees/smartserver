- name: check started docker
  systemd:
    name: docker
    state: started

- name: create docker container
  docker_container:
    name: kibana
#    image: amazon/opendistro-for-elasticsearch-kibana:1.2.1
    image: docker.elastic.co/kibana/kibana:7.4.2
    state: present
    network_mode: "host"
#    recreate: true
    env:
      SERVER_BASEPATH: "/kibana"
      SERVER_REWRITEBASEPATH: "true"
      ELASTICSEARCH_HOSTS: "http://localhost:9200"
#      OPENDISTRO_SECURITY_DISABLED: "true"
#      OPENDISTRO_SECURITY_AUTH_TYPE: ""
#      OPENDISTRO_SECURITY_AUTH_ANONYMOUS_AUTH_ENABLED: "true"
    log_driver: journald
    log_options:
      tag: kibana
  register: docker_status
  notify: "restart kibana"
    
- name: create systemd service
  vars:
    container_name: "kibana"
  import_tasks: roles/container/tasks/add_docker_service.yml
  
- name: copy fluentd config
  vars:
    config_file: "roles/kibana/templates/etc/fluent/_.ansible.d/kibana.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml
    
- name: copy apache config
  vars:
    config_file: "roles/kibana/templates/etc/apache2/_.ansible.d/kibana.conf"
  import_tasks: roles/apache/tasks/add_config.yml

# **** IMPORT DASHBOARD ****
- name: check elasticsearch service => docker status changed
  import_tasks: roles/elasticsearch/tasks/wait_until_ready.yml
  when: docker_status.changed

- name: check if kibana indices exists => docker status changed
  uri:
    url: "http://localhost:9200/_cat/indices"
    return_content: yes
  register: kibana_status
  changed_when: "'kibana' not in kibana_status.content"
  when: docker_status.changed

- name: check kibana service => kibana status changed
  import_tasks: roles/kibana/tasks/wait_until_ready.yml
  when: kibana_status.changed

- name: "Import kibana's dashboard"
  shell: "curl -X POST \"http://localhost:5601/kibana/api/saved_objects/_import?overwrite=true\" -H \"kbn-xsrf: true\" --form file=@roles/kibana/templates/dashboard.ndjson"
  args:
    warn: false
#  uri:
#    url: "http://localhost:5601/kibana/api/saved_objects/_import?overwrite=true"
#    method: POST
#    #user: "{{ kibana_user }}"
#    #password: "{{ kibana_password }}"
#    #force_basic_auth: yes
#    body: |
#      -----------------------------5406095041351429227476882197
#      Content-Disposition: form-data; name="file"; filename="dashboard.ndjson"
#      Content-Type: application/octet-stream
#
#      {{ lookup('file','roles/kibana/templates/dashboard.ndjson') }}
#      -----------------------------5406095041351429227476882197--
#    body_format: raw
#    headers:
#      User-Agent: "curl/7.66.0"
#      Accept: "*/*"
#      Expect: "100-continue"
#      Content-Type: "multipart/form-data; boundary=---------------------------5406095041351429227476882197"
#      Kbn-xsrf: true
  when: kibana_status.changed
