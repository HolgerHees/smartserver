- name: check started docker
  systemd:
    name: docker
    state: started

- name: check docker image exists
  shell: "docker images custom_kibana:1.2.1"
  register: image_exists
  changed_when: "'custom_kibana' not in image_exists.stdout"
  
- name: compose docker image => image does not exists
  shell: "docker build -t custom_kibana:1.2.1 roles/kibana/templates/container/"
  register: output
  when: "'custom_kibana' not in image_exists.stdout"
  
- name: create docker container
  docker_container:
    name: kibana
    image: custom_kibana:1.2.1
    state: present
#    recreate: true
    env:
      SERVER_BASEPATH: "/kibana"
      SERVER_REWRITEBASEPATH: "true"
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: kibana
    ports:
      - "127.0.0.1:5601:5601"
  notify: "restart kibana"

- name: connect elasticsearch and kibana
  docker_network:
    name: elasticsearch_kibana
    connected:
      - kibana
      - elasticsearch

#- name: create docker container
#  docker_container:
#    name: kibana
##    image: amazon/opendistro-for-elasticsearch-kibana:1.2.1
#    image: docker.elastic.co/kibana/kibana:7.4.2
#    state: present
#    network_mode: "host"
##    recreate: true
#    env:
#      SERVER_BASEPATH: "/kibana"
#      SERVER_REWRITEBASEPATH: "true"
#      ELASTICSEARCH_HOSTS: "http://localhost:9200"
##      OPENDISTRO_SECURITY_DISABLED: "true"
##      OPENDISTRO_SECURITY_AUTH_TYPE: ""
##      OPENDISTRO_SECURITY_AUTH_ANONYMOUS_AUTH_ENABLED: "true"
#    log_driver: journald
#    log_options:
#      tag: kibana
#  register: docker_status
#  notify: "restart kibana"
    
- name: create systemd service
  vars:
    container_name: "kibana"
  import_tasks: roles/container/tasks/add_docker_service.yml
  
- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/kibana.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml
    
- name: copy apache config
  vars:
    config_file: "templates/etc/apache2/_.ansible.d/kibana.conf"
  import_tasks: roles/apache/tasks/add_config.yml

