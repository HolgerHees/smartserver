- name: set version
  set_fact:
    kibana_version: "1.7.0"
  tags: [ 'update_notifier_configs' ]
  
- name: build docker image
  vars:
    name: "kibana"
    image_name: "custom_kibana"
    image_version: "{{kibana_version}}"
    files:
      - roles/kibana/templates/container/Dockerfile
      - roles/kibana/templates/container/kibana.yml
  import_tasks: roles/container/tasks/build_docker_image.yml
  
- name: connect elasticsearch and kibana
  docker_network:
    name: kibana_databases
    connected:
      - elasticsearch
    appends: yes
  tags: ['elasticsearch']

- name: create docker container
  docker_container:
    name: kibana
    image: "custom_kibana:{{kibana_version}}"
    state: present
#    recreate: true
    env:
#      SERVER_BASEPATH: "/"
#      SERVER_REWRITEBASEPATH: "true"
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: kibana
    networks:
      - name: kibana_databases
    networks_cli_compatible: yes
    ports:
      - "127.0.0.1:5601:5601"
  notify: "restart kibana"

#- name: create docker container
#  docker_container:
#    name: kibana
##    image: amazon/opendistro-for-elasticsearch-kibana:1.2.1
#    image: docker.elastic.co/kibana/kibana:7.4.2
#    state: present
#    network_mode: "host"
##    recreate: true
#    env:
#      SERVER_BASEPATH: "/kibana"
#      SERVER_REWRITEBASEPATH: "true"
#      ELASTICSEARCH_HOSTS: "http://localhost:9200"
##      OPENDISTRO_SECURITY_DISABLED: "true"
##      OPENDISTRO_SECURITY_AUTH_TYPE: ""
##      OPENDISTRO_SECURITY_AUTH_ANONYMOUS_AUTH_ENABLED: "true"
#    log_driver: journald
#    log_options:
#      tag: kibana
#  register: docker_status
#  notify: "restart kibana"
    
# ***** FINALIZE *****
- name: register webui
  vars:
    name: "kibana"
    js_file: "templates/webui/kibana.js"
    i18n_files: [ { language: "de", file: "templates/webui/kibana.de.json" } ]
  import_tasks: roles/apache_webui/tasks/add_webui.yml

- name: copy apache vhost
  vars:
    sub_domain: "kibana"
    include: "templates/etc/apache2/_.ansible.vhost.d/kibana.inc"
  import_tasks: roles/apache/tasks/add_vhost.yml

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/kibana.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml
    
- name: create systemd service
  vars:
    container_name: "kibana"
  import_tasks: roles/container/tasks/add_docker_service.yml
  
- name: register update notifier
  vars:
    name: "kibana"
    type: "docker"
    url: "https://opendistro.github.io/for-elasticsearch-docs/version-history/"
    config: {
      repository: "amazon/opendistro-for-elasticsearch-kibana",
      pattern: "^([0-9\\.]+)$"
    }
  import_tasks: roles/update_notifier/tasks/add_notifier.yml

- name: trigger service check handler
  vars:
    notify: "restart kibana"
    service: "kibana.service"
  import_tasks: roles/base/tasks/service_check.yml
