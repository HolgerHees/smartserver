- name: prepare needed folder
  file:
    path:  "{{item.path}}"
    state: directory
    owner: "{{item.owner}}"
    group: "{{item.group}}"
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rwx,g=rx,o=rx", owner: "root", group: "root", path: "{{global_etc}}ssh_vpn" }
    - { mode: "u=rwx,g=rx,o=rx", owner: "root", group: "root", path: "{{global_etc}}ssh_vpn/util" }
    - { mode: "u=rwx,g=,o=", owner: "10002", group: "10002", path: "{{global_etc}}ssh_vpn/run" }

- name: build docker image
  vars:
    name: "ssh_vpn"
    image_name: "custom_ssh_vpn"
    image_version: "{{alpine_version}}"
    files:
      - roles/ssh_vpn/templates/container/Dockerfile
  import_tasks: roles/container/shared/build_docker_image.yml
  
- name: copy config
  template:
    src: "roles/ssh_vpn/templates/etc/ssh/{{item}}"
    dest: "{{global_etc}}ssh_vpn/{{item}}"
    owner: "root"
    group: "root"
    mode: 0700
  with_items:
    - sshd_config
    - util/entrypoint.sh
  notify: "restart ssh_vpn"
  
- name: create docker network
  docker_network:
    name: mobile_vpn
#    driver: bridge
#    driver_options:
#       com.docker.network.bridge.name: mobile_vpn
#      com.docker.network.bridge.enable_ip_masquerade: 'false'
#      com.docker.network.bridge.host_binding_ipv4: ""
    ipam_config:
      - subnet: "{{vpn_mobile_subnet}}.200/29"
        gateway: "{{vpn_mobile_subnet}}.201"
    
- name: create docker container
  docker_container:
    name: "ssh_vpn"
    image: "custom_ssh_vpn:{{alpine_version}}"
    state: present
#    recreate: true
    env:
      SSH_GID: "10002"
      SSH_UID: "10002"
      SSH_USERNAME: "{{vault_ssh_vpn_username}}"
      SSH_PASSWORD: "{{vault_ssh_vpn_password}}"
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: "ssh_vpn"
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "mobile_vpn"
    networks_cli_compatible: yes
    volumes:
      - '{{global_etc}}ssh_vpn/sshd_config:/etc/ssh/sshd_config:z'
      - '{{global_etc}}ssh_vpn/util:/etc/ssh/util:z'
      - '{{global_etc}}ssh_vpn/run:/home/{{vault_ssh_vpn_username}}/.ssh:z'
    published_ports:
     - "{{vault_ssh_vpn_internal_port}}:{{vault_ssh_vpn_internal_port}}/tcp"
  notify: "restart ssh_vpn"
  
# ***** FINALIZE *****
- name: prepare iptables rules
  set_fact:
    ssh_vpn_rules: "{{ (ssh_vpn_rules | default([])) + [ 'proto tcp saddr ' + item + ' dport ' + vault_ssh_vpn_internal_port ] }}"
  with_items: "{{ vault_ssh_vpn_allowed_ips }}"
  tags: [ 'firewall_config' ]
        
- name: allow ssh_vpn service
  vars:
    name: "ssh_vpn"
    rules: "{{ssh_vpn_rules}}"
  import_tasks: roles/firewall/shared/allow_service.yml
  tags: [ 'firewall_config' ]

- name: create systemd service
  vars:
    container_name: "ssh_vpn"
  import_tasks: roles/container/shared/add_docker_service.yml
  
- name: trigger ssh_vpn handler
  vars:
    notify: "restart ssh_vpn"
    service: "ssh_vpn.service"
  import_tasks: roles/_shared/service_check.yml
          
    
    
