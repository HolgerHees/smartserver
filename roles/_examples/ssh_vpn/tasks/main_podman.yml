- name: prepare needed folder
  file:
    path:  "{{item.path}}"
    state: directory
    owner: "{{item.owner}}"
    group: "{{item.group}}"
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rwx,g=rx,o=rx", owner: "root", group: "root", path: "{{global_etc}}ssh_vpn" }
    - { mode: "u=rwx,g=rx,o=rx", owner: "root", group: "root", path: "{{global_etc}}ssh_vpn/util" }
    - { mode: "u=rwx,g=,o=", owner: "10002", group: "10002", path: "{{global_etc}}ssh_vpn/run" }

- name: build podman image
  vars:
    name: "ssh_vpn"
    image_name: "custom_ssh_vpn"
    image_version: "{{alpine_version}}"
    files:
      - roles/ssh_vpn/templates/container/Dockerfile
  import_tasks: roles/container/shared/build_podman_image.yml
  
- name: copy config
  template:
    src: "roles/ssh_vpn/templates/etc/ssh/{{item}}"
    dest: "{{global_etc}}ssh_vpn/{{item}}"
    owner: "root"
    group: "root"
    mode: 0700
  with_items:
    - sshd_config
    - util/entrypoint.sh
  notify: "restart ssh_vpn_podman"
  
- name: create mobile_vpn network
  containers.podman.podman_network:
    name: "mobile_vpn"
    subnet: "{{vpn_mobile_subnet}}.208/29"
    gateway: "{{vpn_mobile_subnet}}.209"
  notify: "restart ssh_vpn_podman"

- name: create podman image
  containers.podman.podman_container:
    name: "ssh_vpn_podman"
    image: "custom_ssh_vpn:{{alpine_version}}"
    state: present
#    recreate: yes
    env:
      SSH_GID: "10002"
      SSH_UID: "10002"
      SSH_USERNAME: "{{vault_ssh_vpn_username}}"
      SSH_PASSWORD: "{{vault_ssh_vpn_password}}"
      TZ: "{{timezone}}"
    network: "mobile_vpn"
    published_ports:
      - "4444:{{vault_ssh_vpn_internal_port}}/tcp"
    volumes:
      - "{{global_etc}}ssh_vpn/sshd_config:/etc/ssh/sshd_config:z"
      - "{{global_etc}}ssh_vpn/util:/etc/ssh/util:z"
      - '{{global_etc}}ssh_vpn/run:/home/vpn/.ssh:z'
  notify: "restart ssh_vpn_podman"

# ***** FINALIZE *****
- name: create systemd service
  vars:
    container_name: "ssh_vpn_podman"
    service_name: "ssh_vpn_podman"
    trigger_name: "ssh_vpn_podman"
  import_tasks: roles/container/shared/add_podman_service.yml
  
- name: trigger ssh_vpn_podman handler
  vars:
    notify: "restart ssh_vpn_podman"
    service: "ssh_vpn_podman.service"
  import_tasks: roles/_shared/service_check.yml
          
    
    
