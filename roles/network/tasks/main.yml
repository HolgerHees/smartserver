- name: install required packages => is_fedora
  yum:
    name: hostname
    state: present
  when: is_fedora|bool

- name: install required packages => is_ubuntu
  apt:
    name: hostname
    state: present
  when: is_ubuntu|bool

- name: install required packages => is_suse
  zypper:
    name: hostname
    state: present
  when: is_suse|bool
  
- name: set hostname
  shell: 'hostname {{server_name}}'
  changed_when: "ansible_hostname != server_name"

- name: set hostname file
  copy:
    content: "{{server_name}}"
    dest: /etc/hostname
    force: yes
    owner: root
    group: root
    mode: 0644

- name: add server name
  vars:
    host_name: "{{server_name}}"
    host_ip_address: "{{server_ip}}"
  import_tasks: roles/network/tasks/add_to_hosts.yml

#https://cromwell-intl.com/open-source/performance-tuning/ethernet.html
#ethtool -K eth0 tx-checksum-ipv4 off tx-checksum-ipv6 off

- name: set sysctl network related values
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^{{item.regex}}\s*='
    line: '{{item.line}}'
  with_items:
    # IPV6 not needed yet
    - { regex: "net\\.ipv6\\.conf\\.all\\.disable_ipv6", line: "net.ipv6.conf.all.disable_ipv6 = 0" }
    
    # needed to fix "netdev budget ran outs" on a atom cpu
    # https://github.com/netdata/netdata/issues/4624
    - { regex: "net\\.core\\.netdev_budget_usecs", line: "net.core.netdev_budget_usecs = 20000" }

    # Increase number of incoming connections backlog
    # 8333 should be enough for 1GBit => https://cromwell-intl.com/open-source/performance-tuning/ethernet.html
    - { regex: "net\\.core\\.netdev_max_backlog", line: "net.core.netdev_max_backlog = 8333" }

    - { regex: "net\\.core\\.optmem_max", line: "net.core.optmem_max = 65536" }

    # redhat 7.2 defaults
    #net.core.rmem_default=262144
    #net.core.rmem_max=4194304
    - { regex: "net\\.core\\.rmem_default", line: "net.core.rmem_default = 65536" }
    - { regex: "net\\.core\\.rmem_max", line: "net.core.rmem_max = 2097152" }
    - { regex: "net\\.ipv4\\.tcp_rmem", line: "net.ipv4.tcp_rmem = 4096 87380 2097152" }
    - { regex: "net\\.ipv4\\.udp_rmem_min", line: "net.ipv4.udp_rmem_min = 4096" }

    # https://www.ibm.com/support/knowledgecenter/en/SSQPD3_2.6.0/com.ibm.wllm.doc/UDPSocketBuffers.html
    # On the Linux platform Tx ring buffer overruns can occur when transmission rates approach 1Gbps and the default send socket buffer is greater than 65536.
    # It is recommended to set the net.core.wmem_default kernel parameter to no larger than 65536 bytes.
    # Transmitting applications can configure the send socket buffer size for InfiniBand, UDP, or TCP protocols independently in a transmit instance.
    - { regex: "net\\.core\\.wmem_default", line: "net.core.wmem_default = 65536" }
    - { regex: "net\\.core\\.wmem_max", line: "net.core.wmem_max = 2097152" }
    - { regex: "net\\.ipv4\\.tcp_wmem", line: "net.ipv4.tcp_wmem = 4096 65536 2097152" }
    - { regex: "net\\.ipv4\\.udp_wmem_min", line: "net.ipv4.udp_wmem_min = 4096" }

    - { regex: "net\\.ipv4\\.tcp_slow_start_after_idle", line: "net.ipv4.tcp_slow_start_after_idle = 0" }
  register: sysctlchanged
  
- name: refresh sysctl to activate sysctl changes => sysctl changed
  shell: sysctl -p
  when: sysctlchanged.changed
  
- name: prepare needed folder
  file:
    path: "/opt/macvlan_helper"
    state: directory
    owner: root
    group: root
    mode: 0750
  when: "macvlan_range | length > 0"

- name: copy macvlan_bridge cmd
  template:
    src: "templates/create_macvlan_bridge.sh"
    dest: "/opt/macvlan_helper/create_macvlan_bridge.sh"
    owner: root
    group: root
    mode: 0750
  notify: "restart macvlan_bridge"
  when: "macvlan_range | length > 0"
    
- name: "create systemd service for 'macvlan_bridge'"
  template:
    src: "templates/macvlan_bridge.service"
    dest: "/etc/systemd/system/macvlan_bridge.service"
    owner: root
    group: root
    mode: 0644
  notify: "restart macvlan_bridge"
  when: "macvlan_range | length > 0"
 
- name: register systemd service watcher
  vars:
    name: "macvlan_bridge"
  import_tasks: roles/systemd_watcher/tasks/add_watcher.yml
  when: "macvlan_range | length > 0"
  
- name: trigger macvlan_bridge handler
  vars:
    notify: "restart macvlan_bridge"
    service: "macvlan_bridge.service"
  import_tasks: roles/_shared/tasks/service_check.yml
  when: "macvlan_range | length > 0"

