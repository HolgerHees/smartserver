- name: install required packages => is_fedora
  yum:
    name: [
        httpd 
      , mod_proxy_html
    ]
    state: present
  when: is_fedora|bool
  notify: "restart apache"
  
- name: install required packages => is_suse
  zypper:
    name: [
        apache2 
      , apache2-mod_php7
    ]
    state: present
  when: is_suse|bool
  notify: "restart apache"
  
- name: prepare needed folder
  file:
    path: "{{item.dir}}"
    state: directory
    owner: "{{item.owner}}"
    group: "{{item.group}}"
    mode: 0755
  with_items:
    - { owner: "{{www_username}}", group: "{{www_group}}", dir: "{{htdocs_path}}" }
    - { owner: "{{ 'root' if is_suse|bool else www_username }}", group: "{{ 'root' if is_suse|bool else www_group }}", dir: "{{global_log}}apache2/" }



  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
- name: enable modules => is_fedora
  lineinfile:
    path: "{{www_etc}}conf.modules.d/{{item.file}}"
    regexp: '^[#\s]*LoadModule\s*{{item.name}}_module\s*modules/{{item.prefix}}{{item.name}}.so\s*'
    line: '{{ "" if item.enabled else "#" }}LoadModule {{item.name}}_module modules/{{item.prefix}}{{item.name}}.so'
  with_items:
    - { enabled: true, file: "00-base.conf", name: "auth_digest", prefix: "mod_" }
    - { enabled: true, file: "00-base.conf", name: "headers", prefix: "mod_" }
    - { enabled: true, file: "00-mpm.conf", name: "mpm_prefork", prefix: "mod_" }
    - { enabled: false, file: "00-mpm.conf", name: "mpm_worker", prefix: "mod_" }
    - { enabled: false, file: "00-mpm.conf", name: "mpm_event", prefix: "mod_" }
    - { enabled: true, file: "00-proxy.conf", name: "proxy", prefix: "mod_" }
    - { enabled: true, file: "00-proxyhtml.conf", name: "proxy_html", prefix: "mod_" } 
    - { enabled: true, file: "00-proxy.conf", name: "proxy_http", prefix: "mod_" } 
    - { enabled: true, file: "00-proxy.conf", name: "proxy_balancer", prefix: "mod_" }
    - { enabled: true, file: "00-proxy.conf", name: "lbmethod_bytraffic", prefix: "mod_" } # used by proxy_balancer
    - { enabled: true, file: "00-base.conf", name: "slotmem_shm", prefix: "mod_" } # used by proxy_balancer
    - { enabled: true, file: "00-proxyhtml.conf", name: "xml2enc", prefix: "mod_" }
    - { enabled: true, file: "00-base.conf", name: "deflate", prefix: "mod_" } 
    - { enabled: true, file: "00-base.conf", name: "filter", prefix: "mod_" } 
    - { enabled: true, file: "00-proxy.conf", name: "proxy_wstunnel", prefix: "mod_" } 
    - { enabled: true, file: "00-base.conf", name: "rewrite", prefix: "mod_" } 
    - { enabled: true, file: "15-php.conf", name: "php7", prefix: "lib" }
    - { enabled: true, file: "00-base.conf", name: "substitute", prefix: "mod_" } # needed for instar camera webui
  notify: "restart apache"
  when: is_fedora|bool

# **** SELINUX MODULE COMPILATION ****
# sudo grep 'redis.sock' /var/log/audit/audit.log | audit2allow -m httpd_to_redis > httpd_to_redis.te
# needed e.g. for redis sockets to allow httpd connecting sockets
- name: check for selinux socket module => is_fedora
  shell: "semodule -l | grep \"httpd_can_socket_connect\""
  register: semodule_result 
  changed_when: semodule_result.rc == 1
  failed_when: no
  when: is_fedora|bool

- name: compile selinux socket module => is_fedora and semodule does not exists
  shell: "{{item}}" 
  with_items:
    - "checkmodule -M -m -o {{global_tmp}}httpd_can_socket_connect.mod roles/apache/templates/selinux/httpd_can_socket_connect.te"
    - "semodule_package -o {{global_tmp}}httpd_can_socket_connect.pp -m {{global_tmp}}httpd_can_socket_connect.mod"
    - "semodule -i {{global_tmp}}httpd_can_socket_connect.pp"
  when: "is_fedora|bool and semodule_result.rc == 1"

- name: cleanup selinux module build => is_fedora and semodule does not exists
  file: 
    path: "{{item}}"
    state: absent
  with_items:
    - "{{global_tmp}}httpd_can_socket_connect.mod"
    - "{{global_tmp}}httpd_can_socket_connect.pp"
  when: "is_fedora|bool and semodule_result.rc == 1"
# **********************************************

- name: set selinux port configuration => is_fedora
  seport:
    ports: 10114
    proto: tcp
    setype: http_port_t
    state: present
  when: is_fedora|bool

- name: set selinux proxy configuration => is_fedora
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes
  when: is_fedora|bool

- name: set selinux configuration => is_fedora
  sefcontext:
    target: "{{item.target}}"
    ftype: "{{item.ftype}}"
    setype: "{{item.setype}}"
    seuser: "system_u"
    state: present
  register: sefcontext_result
  with_items:
    - { ftype: "d", setype: "httpd_log_t", target: "{{global_log}}apache2" }
    - { ftype: "d", setype: "httpd_config_t", target: "{{www_etc | regex_replace('\\/$', '')}}(/.*)?" }
    - { ftype: "d", setype: "httpd_sys_content_t", target: "{{htdocs_path | regex_replace('\\/$', '')}}(/.*)?" }
  when: is_fedora|bool

- name: reload selinux configuration => is_fedora and selinux configuration changed
  shell: "restorecon {{item}}"
  with_items:
    - "{{global_log}}apache2"
    - "-irv {{www_etc}}"
    - "-irv {{htdocs_path}}"
  when: is_fedora|bool and sefcontext_result.changed
 
- name: disable obsolete configs => is_fedora
  lineinfile:
    path: "{{www_etc}}conf/httpd.conf"
    regexp: '^{{item.regexp}}'
    line: '{{item.line}}'
    backrefs: yes
  with_items:
    - { regexp: "(Listen.*)", line: "#\\1" }
    - { regexp: "(IncludeOptional conf.d/\\*\\.conf)", line: "#\\1" }
  notify: "restart apache"
  when: is_fedora|bool


  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
- name: enable modules => is_suse
  apache2_module:
    name: "{{item}}"
    state: present
  with_items:
    - auth_digest
    - headers 
    - proxy 
    - proxy_html 
    - proxy_http 
    - proxy_balancer
    - lbmethod_bytraffic # used by proxy_balancer
    - slotmem_shm # used by proxy_balancer
    - xml2enc
    - deflate 
    - filter 
    #- apcu 
    - proxy_wstunnel 
    #- enable 
    - rewrite 
    - php7
    - substitute # needed for instar camera webui
  notify: "restart apache"
  when: is_suse|bool
    
# fedora is using a shared one (cli & web)
- name: set web config => is_suse
  import_tasks: roles/php/tasks/php_ini.yml
  vars:
    php_ini_file: "/etc/php7/apache2/php.ini"
  notify: "restart apache"
  when: is_suse|bool
  
- name: disable obsolete configs => is_suse
  lineinfile:
    path: "{{www_etc}}httpd.conf"
    regexp: '^{{item.regex}}'
    line: '{{item.line}}'
    backrefs: yes
  with_items:
    - { regex: "(IncludeOptional {{www_etc}}vhosts\\.d/\\*\\.conf)", line: "#\\1" }
    - { regex: "(Include {{www_etc}}default-server\\.conf)", line: "#\\1" }
    - { regex: "(Include {{www_etc}}listen\\.conf)", line: "#\\1" }
  notify: "restart apache"
  when: is_suse|bool















- name: set httpd config
  lineinfile:
    path: "{{www_etc}}{{ '' if is_suse else 'conf/' }}httpd.conf"
    regexp: '^{{item.regex}}'
    line: '{{item.line}}'
  with_items:
    - { regex: "Include {{www_etc}}_.ansible_vhost-ssl.conf", line: "Include {{www_etc}}_.ansible_vhost-ssl.conf" }
    - { regex: 'ErrorLog', line: 'ErrorLog "{{global_log}}apache2/error.log"' }
  notify: "restart apache"

- name: copy config
  template:
    src: "templates/etc/apache2/{{item}}"
    dest: "{{www_etc}}{{item}}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - _.ansible.d/auth.conf
    - _.ansible.d/options.conf
    - _.ansible_vhost-ssl.conf
  notify: "restart apache"

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/apache.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml
  
- name: prepare .htpasswd file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htpasswd"
    force: no
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0640

- name: prepare .htdigest file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htdigest"
    force: no
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0640

- name: prepare .htgroups file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htgroups"
    force: no
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0640

- name: prepare .htdata file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htdata"
    force: no
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0640

- name: set logrotate job
  vars:
    logrotate_path: "{{global_log}}apache2/*.log"
  copy:
    content: "{{ lookup('template', 'roles/apache/templates/logrotate') }}"
    dest: "/etc/logrotate.d/ansible_apache"
    owner: root
    group: root
    mode: 0640

