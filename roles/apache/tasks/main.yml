#https://stackify.com/docker-for-php-a-start-to-finish-guide/

- name: prepare needed folder
  file:
    path: "{{item}}"
    state: directory
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0755
  with_items:
    - "{{htdocs_path}}"
    - "{{global_log}}apache2/"

- name: get id from "{{www_username}}"
  shell: "id -u {{www_username}}"
  register: user_id
  changed_when: no

- name: get id from "{{www_group}}"
  shell: "id -g {{www_username}}"
  register: group_id
  changed_when: no
  
- name: check started docker
  systemd:
    name: docker
    state: started
    
- name: check docker image exists
  shell: "docker images custom_apache2:1.0.0"
  register: image_exists
  changed_when: "'custom_apache2' not in image_exists.stdout"
 
- name: compose docker image => image does not exists
  shell: "docker build -t custom_apache2:1.0.0 roles/apache/templates/container/ --build-arg GLOBAL_LOG={{global_log}}apache2 --build-arg WWW_UID={{user_id.stdout}} --build-arg WWW_GID={{user_id.stdout}}"
  register: output
#  when: "'custom_apache2' not in image_exists.stdout"
  
- name: create docker container
  docker_container:
    name: apache2
    image: custom_apache2:1.0.0
    state: present
    network_mode: "host"
    recreate: true
    env:
      APACHE_RUN_USER: "#{{user_id.stdout}}"
      APACHE_RUN_GROUP: "#{{group_id.stdout}}"
    log_driver: journald
    log_options:
      tag: apache
    volumes:
      #- '{{htdocs_path}}:/var/www/html:z'
      - '{{htdocs_path}}:{{htdocs_path}}:z'
#      - '{{projects_path}}toolbox:{{projects_path}}toolbox:z'
#      - '{{nextcloud_data_path}}:{{nextcloud_data_path}}:z'
#      - '{{global_log}}nextcloud:{{global_log}}nextcloud:z'
      - '{{global_log}}apache2:{{global_log}}apache2:z'
      - '{{redis_socket_path}}:{{redis_socket_path}}:z'
      - '{{www_etc}}_.ansible.d:/etc/apache2/_.ansible.d:z'
      - '{{www_etc}}_.ansible_vhost-ssl.conf:/etc/apache2/_.ansible_vhost-ssl.conf:z'
      - '/etc/certbot:/etc/certbot:z'
#    ports:
#      - "81:80"
#      - "444:443"
#      - "10115:10114"
  notify: "restart apache2"

#- name: clean old docker images
#  shell: "docker rmi -f $(docker images --filter \"dangling=true\" -q)"
#  when: "'custom_vsftpd' not in image_exists.stdout"
  
- name: disable old systemd service
  shell: "if [ -f /usr/lib/systemd/system/{{ 'apache2' if is_suse else 'httpd' }}.service ]; then mv /usr/lib/systemd/system/{{ 'apache2' if is_suse else 'httpd' }}.service /usr/lib/systemd/system/{{ 'apache2' if is_suse else 'httpd' }}.service.org; echo \"1\"; else echo \"0\"; fi"
  register: service_change
  changed_when: "'1' in service_change.stdout"

- name: create systemd service
  vars:
    container_name: "apache2"
  import_tasks: roles/container/tasks/add_docker_service.yml

- name: copy config
  template:
    src: "templates/etc/apache2/{{item}}"
    dest: "{{www_etc}}{{item}}"
    owner: "root"
    group: "root"
    mode: 0644

  with_items:
    - _.ansible.d/auth.conf
    - _.ansible.d/options.conf
    - _.ansible_vhost-ssl.conf
  notify: "restart apache2"

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/apache.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml
  
- name: prepare .htpasswd file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htpasswd"
    force: no
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0640

- name: prepare .htdigest file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htdigest"
    force: no
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0640

- name: prepare .htgroups file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htgroups"
    force: no
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0640

- name: prepare .htdata file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htdata"
    force: no
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0640

- name: set logrotate job
  vars:
    logrotate_path: "{{global_log}}apache2/*.log"
  copy:
    content: "{{ lookup('template', 'roles/apache/templates/logrotate') }}"
    dest: "/etc/logrotate.d/ansible_apache"
    owner: root
    group: root
    mode: 0640
