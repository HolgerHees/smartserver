- name: install required fedora packages
  yum:
    name: [
        httpd 
      , mod_proxy_html
    ]
    state: present
  when: is_fedora|bool
  notify: "restart apache"
  
- name: install required suse packages
  zypper:
    name: [
        apache2 
      , apache2-mod_php7
    ]
    state: present
  when: is_suse|bool
  notify: "restart apache"
  
- name: prepare needed folder
  file:
    path: "{{item.dir}}"
    state: directory
    owner: "{{item.owner}}"
    group: "{{item.group}}"
    mode: 0755
  with_items:
    - { owner: root, group: root, dir: "{{www_etc}}_.ansible.d/" }
    - { owner: "{{www_username}}", group: "{{www_group}}", dir: "{{htdocs_path}}" }
    - { owner: "{{www_username}}", group: "{{www_group}}", dir: "{{htdocs_path}}fallback/" }
    - { owner: "{{ 'root' if is_suse|bool else www_username }}", group: "{{ 'root' if is_suse|bool else www_group }}", dir: "{{global_log}}apache2/" }



  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
- name: enable modules on fedora
  lineinfile:
    path: "{{www_etc}}conf.modules.d/{{item.file}}"
    regexp: '^[#]*LoadModule\s*{{item.name}}_module\s*modules/{{item.prefix}}{{item.name}}.so\s*'
    line: '{{ "" if item.enabled else "#" }}LoadModule {{item.name}}_module modules/{{item.prefix}}{{item.name}}.so'
  with_items:
    - { enabled: true, file: "00-base.conf", name: "auth_digest", prefix: "mod_" }
    - { enabled: true, file: "00-base.conf", name: "headers", prefix: "mod_" }
    - { enabled: true, file: "00-mpm.conf", name: "mpm_prefork", prefix: "mod_" }
    - { enabled: false, file: "00-mpm.conf", name: "mpm_worker", prefix: "mod_" }
    - { enabled: false, file: "00-mpm.conf", name: "mpm_event", prefix: "mod_" }
    - { enabled: true, file: "00-proxy.conf", name: "proxy", prefix: "mod_" }
    - { enabled: true, file: "00-proxyhtml.conf", name: "proxy_html", prefix: "mod_" } 
    - { enabled: true, file: "00-proxy.conf", name: "proxy_http", prefix: "mod_" } 
    - { enabled: true, file: "00-proxy.conf", name: "proxy_balancer", prefix: "mod_" }
    - { enabled: true, file: "00-proxy.conf", name: "lbmethod_bytraffic", prefix: "mod_" } # used by proxy_balancer
    - { enabled: true, file: "00-base.conf", name: "slotmem_shm", prefix: "mod_" } # used by proxy_balancer
    - { enabled: true, file: "00-proxyhtml.conf", name: "xml2enc", prefix: "mod_" }
    - { enabled: true, file: "00-base.conf", name: "deflate", prefix: "mod_" } 
    - { enabled: true, file: "00-base.conf", name: "filter", prefix: "mod_" } 
    - { enabled: true, file: "00-proxy.conf", name: "proxy_wstunnel", prefix: "mod_" } 
    - { enabled: true, file: "00-base.conf", name: "rewrite", prefix: "mod_" } 
    - { enabled: true, file: "15-php.conf", name: "php7", prefix: "lib" }
    - { enabled: true, file: "00-base.conf", name: "substitute", prefix: "mod_" } # needed for instar camera webui
  notify: "restart apache"
  when: is_fedora|bool
  
- name: set selinux port configuration on fedora
  seport:
    ports: 10114
    proto: tcp
    setype: http_port_t
    state: present
  when: is_fedora|bool

- name: set selinux proxy configuration on fedora
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes
  when: is_fedora|bool

- name: set selinux configuration on fedora
  sefcontext:
    target: "{{item.target}}"
    ftype: "{{item.ftype}}"
    setype: "{{item.setype}}"
    seuser: "system_u"
    state: present
  register: sefcontext_result
  with_items:
    - { ftype: "d", setype: "httpd_log_t", target: "{{global_log}}apache2" }
    - { ftype: "d", setype: "httpd_config_t", target: "{{www_etc | regex_replace('\\/$', '')}}(/.*)?" }
    - { ftype: "d", setype: "httpd_sys_content_t", target: "{{htdocs_path | regex_replace('\\/$', '')}}(/.*)?" }
  when: is_fedora|bool

- name: reload selinux configuration on fedora
  shell: "restorecon {{item}}"
  with_items:
    - "{{global_log}}apache2"
    - "-irv {{www_etc}}"
    - "-irv {{htdocs_path}}"
  when: is_fedora|bool and sefcontext_result.changed
 
- name: disable obsolete configs on fedora
  lineinfile:
    path: "{{www_etc}}conf/httpd.conf"
    backrefs: yes
    regexp: '^{{item.regex}}'
    line: '{{item.line}}'
  with_items:
    - { regex: "(Listen.*)", line: "#\\1" }
    - { regex: "(IncludeOptional conf.d/\\*\\.conf)", line: "#\\1" }
  notify: "restart apache"
  when: is_fedora|bool

- name: enable php config on fedora
  lineinfile:
    path: "{{www_etc}}conf/httpd.conf"
    regexp: '^{{item.regex}}'
    line: '{{item.line}}'
  with_items:
    - { regex: "Include conf\\.d/php\\.conf", line: "Include conf.d/php.conf" }
  notify: "restart apache"
  when: is_fedora|bool


  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
- name: enable modules on suse
  apache2_module:
    name: "{{item}}"
    state: present
  with_items:
    - auth_digest
    - headers 
    - proxy 
    - proxy_html 
    - proxy_http 
    - proxy_balancer
    - lbmethod_bytraffic # used by proxy_balancer
    - slotmem_shm # used by proxy_balancer
    - xml2enc
    - deflate 
    - filter 
    #- apcu 
    - proxy_wstunnel 
    #- enable 
    - rewrite 
    - php7
    - substitute # needed for instar camera webui
  notify: "restart apache"
  when: is_suse|bool
    
- name: set web config on suse # fedora is using a shared one (cli & web)
  import_tasks: roles/php/tasks/php_ini.yml
  vars:
    php_ini_file: "/etc/php7/apache2/php.ini"
  notify: "restart apache"
  when: is_suse|bool
  
- name: disable obsolete configs on suse
  lineinfile:
    path: "{{www_etc}}httpd.conf"
    regexp: '^{{item.regex}}'
    line: '{{item.line}}'
  with_items:
    - { regex: "Include {{www_etc}}default-server\\.conf", line: "#Include {{www_etc}}default-server.conf" }
    - { regex: "IncludeOptional {{www_etc}}vhosts.d/\\*\\.conf", line: "#IncludeOptional {{www_etc}}vhosts.d/*.conf" }
    - { regex: "Include {{www_etc}}listen\\.conf", line: "#Include {{www_etc}}listen.conf" }
  notify: "restart apache"
  when: is_suse|bool

- name: enable php config on fedora
  lineinfile:
    path: "{{www_etc}}httpd.conf"
    regexp: '^{{item.regex}}'
    line: '{{item.line}}'
  with_items:
    - { regex: "Include conf\\.d/php7\\.conf", line: "Include conf.d/php7.conf" }
  notify: "restart apache"
  when: is_fedora|bool















- name: set httpd config
  lineinfile:
    path: "{{www_etc}}{{ '' if is_suse else 'conf/' }}httpd.conf"
    regexp: '^{{item.regex}}'
    line: '{{item.line}}'
  with_items:
    - { regex: "Include {{www_etc}}_.ansible_vhost-ssl.conf", line: "Include {{www_etc}}_.ansible_vhost-ssl.conf" }
    - { regex: 'ErrorLog', line: 'ErrorLog "{{global_log}}apache2/error.log"' }
  notify: "restart apache"

- name: copy config
  template:
    src: "roles/apache/templates/etc/apache2/{{item}}"
    dest: "{{www_etc}}{{item}}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - _.ansible.d/auth.conf
    - _.ansible.d/services.conf
    - _.ansible.d/options.conf
    - _.ansible_vhost-ssl.conf
  notify: "restart apache"
  when: "vault_active|bool"

- name: copy balancer fallback files
  copy:
    src: "roles/apache/templates/device404.jpg"
    dest: "{{htdocs_path}}fallback/{{item}}"
    owner: "{{www_username}}"
    group: "{{www_group}}"
  with_items:
    - cam.jpg
    - cam.mjpg
    - snapshot.cgi
    - videostream.cgi

- name: copy fluentd config
  vars:
    config_file: "roles/apache/templates/etc/fluent/_.ansible.d/apache.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml
  
- name: prepare .htpasswd file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htpasswd"
    force: no
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0640

- name: prepare .htdigest file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htdigest"
    force: no
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0640

- name: prepare .htgroups file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htgroups"
    force: no
    owner: "{{www_username}}"
    group: "{{www_group}}"
    mode: 0640

- name: set logrotate job
  vars:
    logrotate_path: "{{global_log}}apache2/*.log"
  copy:
    content: "{{ lookup('template', 'roles/apache/templates/logrotate') }}"
    dest: "/etc/logrotate.d/ansible_apache"
    owner: root
    group: root
    mode: 0640

