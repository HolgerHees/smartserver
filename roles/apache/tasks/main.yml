- name: set version
  set_fact:
    apache_version: '2.4.43'
  tags: [ 'update_notifier_configs' ]
  
- name: prepare needed folder
  file:
    path: "{{item}}"
    state: directory
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0755
  with_items:
    - "{{htdocs_path}}"
    - "{{htdocs_path}}/fallback"
    - "{{htdocs_path}}/fallback/domain"
    - "{{global_log}}apache2/"

- name: check owner and group
  file:
    path: "{{item}}"
    state: directory
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    #recurse: yes
  with_items:
    - "{{htdocs_path}}"
    - "{{global_log}}apache2/"

- name: check certificate chain file
  stat:
    path: /etc/letsencrypt/live/{{server_domain}}/chain.pem
  register: chain_file
  changed_when: no

- name: copy config
  template:
    src: "templates/etc/apache2/{{item}}"
    dest: "{{global_etc}}apache2/{{item}}"
    owner: "root"
    group: "root"
    mode: 0644
  vars:
    enable_stapeling: "{{chain_file.stat.exists}}"
  with_items:
    - _.ansible.conf.d/public.conf
    - _.ansible.conf.d/options.conf
    - _.ansible.conf.d/ssl.conf
    - _.ansible.vhost.d/auth_basic.inc
    - _.ansible.vhost.d/auth_form1.inc
    - _.ansible.vhost.d/auth_form2.inc
    - _.ansible.vhost.d/default-ssl.conf
    - _.ansible.server.conf
    - _.ansible.httpd.conf
  notify: "restart apache2"

- name: copy config
  template:
    src: "templates/etc/apache2/{{item}}"
    dest: "{{global_etc}}apache2/{{item}}"
    owner: "root"
    group: "root"
    mode: 0644
  vars:
    enable_stapeling: "{{chain_file.stat.exists}}"
  with_items:
    - _.ansible.vhost.d/auth_openidc1.inc
    - _.ansible.vhost.d/auth_openidc2.inc
    - _.ansible.vhost.d/auth_openidc_users.txt
  notify: "restart apache2"
  tags: ['user']

- name: copy login form
  copy:
    src: "templates/htdocs/auth"
    dest: "{{htdocs_path}}"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"

- name: copy domain fallback
  template:
    src: "templates/htdocs/fallback/domain/{{item}}"
    dest: "{{htdocs_path}}fallback/domain/{{item}}"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
  with_items:
    - index.html
    - style.css

- name: build docker image
  vars:
    name: "apache"
    image_name: "custom_apache2"
    image_version: "{{apache_version}}"
    files:
      - roles/apache/templates/container/Dockerfile
  import_tasks: roles/container/tasks/build_docker_image.yml
  
- name: create docker container
  docker_container:
    name: apache2
    image: "custom_apache2:{{apache_version}}"
    state: present
    network_mode: "host"
#    recreate: true
    env:
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: apache
    volumes:
      #- '{{htdocs_path}}:/var/www/html:z'
      - '{{htdocs_path}}:{{htdocs_path}}:z'
      - '{{global_log}}:{{global_log}}:z'
      - '{{global_etc}}apache2/_.ansible.conf.d:/etc/apache2/_.ansible.conf.d:z'
      - '{{global_etc}}apache2/_.ansible.vhost.d:/etc/apache2/_.ansible.vhost.d:z'
      - '{{global_etc}}apache2/_.ansible.server.conf:/etc/apache2/_.ansible.server.conf:z'
      - '{{global_etc}}apache2/_.ansible.httpd.conf:/usr/local/apache2/conf/httpd.conf:z'

      - '/etc/certbot:/etc/certbot:z'

      - '{{projects_path}}toolbox:{{projects_path}}toolbox:z'     # needed by openhab_toolbox role
#    ports:
#      - "81:80"
#      - "444:443"
#      - "10115:10114"
  notify: "restart apache2"

#- name: clean old docker images
#  shell: "docker rmi -f $(docker images --filter \"dangling=true\" -q)"
#  when: "'custom_vsftpd' not in image_exists.stdout"
  
- name: disable old systemd service
  shell: "if [ -f /usr/lib/systemd/system/{{ 'apache2' if is_suse else 'httpd' }}.service ]; then mv /usr/lib/systemd/system/{{ 'apache2' if is_suse else 'httpd' }}.service /usr/lib/systemd/system/{{ 'apache2' if is_suse else 'httpd' }}.service.org; echo \"1\"; else echo \"0\"; fi"
  register: service_change
  changed_when: "'1' in service_change.stdout"

- name: prepare .htpasswd file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htpasswd"
    force: no
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0640

- name: prepare .htgroups file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htgroups"
    force: no
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0640

- name: prepare .htdata file
  copy:
    content: ""
    dest: "{{htdocs_path}}.htdata"
    force: no
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0640

- name: set logrotate job
  vars:
    logrotate_path: "{{global_log}}apache2/*.log"
  copy:
    content: "{{ lookup('template', 'roles/apache/templates/logrotate') }}"
    dest: "/etc/logrotate.d/ansible_apache"
    owner: root
    group: root
    mode: 0640

# ***** FINALIZE *****
- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/apache.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml
  
- name: create systemd service
  vars:
    container_name: "apache2"
  import_tasks: roles/container/tasks/add_docker_service.yml

- name: register update notifier
  vars:
    name: "apache"
    type: "docker"
    url: "https://www.apachelounge.com/Changelog-2.4.html"
    config: {
      repository: "httpd", 
      pattern: "^([0-9\\.]+)$"
    }
  import_tasks: roles/update_notifier/tasks/add_notifier.yml

- name: trigger service check handler
  vars:
    notify: "restart apache2"
    service: "apache2.service"
  import_tasks: roles/base/tasks/service_check.yml
