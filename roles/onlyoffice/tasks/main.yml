- name: set version
  set_fact:
    onlyoffice_version: "7.2.1.34"
  tags: [ 'update_notifier_config' ]
  
- name: prepare needed folder
  file:
    path: "{{item.path}}"
    state: directory
    owner: "109" # user id from docker container
    group: "112" # group id from docker container
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_log}}onlyoffice" }
    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_lib}}onlyoffice" }
    - { mode: "u=rwx,g=rx,o=", path: "{{global_etc}}onlyoffice" }
    - { mode: "u=rwx,g=rx,o=", path: "{{global_etc}}onlyoffice/fonts" }

- name: build docker image
  vars:
    name: "onlyoffice"
    image_name: "custom_onlyoffice"
    image_version: "{{onlyoffice_version}}"
    files:
      - roles/onlyoffice/templates/container/Dockerfile
  import_tasks: roles/container/tasks/build_docker_image.yml

- name: create docker network
  vars:
    network_name: "onlyoffice"
    network_ip: "{{docker_onlyoffice_ip}}"
    network_internal: yes
  import_tasks: roles/container/tasks/create_docker_network.yml
  
- name: create docker container
  docker_container:
    name: onlyoffice
    image: "custom_onlyoffice:{{onlyoffice_version}}"
    state: present
#    network_mode: "host"
#    recreate: true
    env:
      TZ: "{{timezone}}"
      JWT_ENABLED: "true"
      JWT_SECRET: "{{vault_onlyoffice_shared_key}}"
      USE_UNAUTHORIZED_STORAGE: "true"
      REDIS_SERVER_HOST: "redis"
      REDIS_SERVER_PORT: "6379"
      DB_TYPE: "mariadb"
      DB_HOST: "mysql"
      DB_PORT: "3306"
      DB_NAME: "onlyoffice"
      DB_USER: "{{vault_onlyoffice_mysql_username}}"
      DB_PWD: "{{vault_onlyoffice_mysql_password}}"
    log_driver: journald
    log_options:
      tag: onlyoffice
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "onlyoffice"
        ipv4_address: "{{docker_onlyoffice_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{global_etc}}networks/onlyoffice:/etc/hosts:z'
      - '{{global_etc}}onlyoffice/fonts:/usr/share/fonts/truetype/custom:z'
      - '{{global_log}}onlyoffice:/var/log/onlyoffice:z'
      - '{{global_lib}}onlyoffice:/var/www/onlyoffice/Data:z'
    exposed_ports:
     - "80"  
     - "443"  
  notify: "restart onlyoffice"
    
- name: connect mysql & redis with onlyoffice network
  vars:
    network_name: "onlyoffice"
    network_container:
      - mysql
      - redis
  import_tasks: roles/container/tasks/connect_docker_network.yml
  tags: [ 'mysql', 'redis' ]

- name: add container name
  vars:
    host_name: "onlyoffice"
    host_ip_address: "{{docker_onlyoffice_ip}}"
  import_tasks: roles/_shared/tasks/add_to_hosts.yml

# ***** DATABASE *****
- name: create database
  vars:
    database: "onlyoffice"
    username: "{{vault_onlyoffice_mysql_username}}"
    password: "{{vault_onlyoffice_mysql_password}}"
    backup: no
  import_tasks: roles/mysql/tasks/add_database.yml
  
# ***** FINALIZE *****
#- name: copy fluentd config
#  vars:
#    config_file: "templates/etc/fluent/_.ansible.d/mosquitto.conf"
#  import_tasks: roles/fluentd/tasks/add_config.yml

- name: allow onlyoffice service
  vars:
    name: "https.onlyoffice"
    rule: "proto tcp dport 443 saddr {{docker_onlyoffice_ip}}"
  import_tasks: roles/firewall/tasks/allow_service.yml
  tags: [ 'firewall_config' ]

- name: copy apache vhost
  vars:
    sub_domain: "onlyoffice"
    usergroup: "user"
    include: "templates/etc/apache2/_.ansible.vhost.d/onlyoffice.inc"
  import_tasks: roles/apache/tasks/add_vhost.yml

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/onlyoffice.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml

- name: create systemd service
  vars:
    container_name: "onlyoffice"
    container_after: [ "mysql", "redis" ]
  import_tasks: roles/container/tasks/add_docker_service.yml

- name: register update notifier
  vars:
    name: "onlyoffice"
    type: "docker"
    url: "https://helpcenter.onlyoffice.com/de/server/document/changelog.aspx"
    config: { 
      repository: "onlyoffice/documentserver", 
      pattern: "^([0-9\\.]+)$" 
    }
  import_tasks: roles/update_service/tasks/add_software.yml

- name: trigger onlyoffice handler
  vars:
    notify: "restart onlyoffice"
    service: "onlyoffice.service"
  import_tasks: roles/_shared/tasks/service_check.yml
