# check if docker exists

# unmount cloud remotes if available

- name: check for docker
  shell:
    cmd: "docker 2> /dev/null"
  changed_when: "cleanup_docker_check.rc == 0"
  failed_when: no
  register: cleanup_docker_check

- name: cleanup docker
  include_tasks: _cleanup_docker.yml
  when: "cleanup_docker_check.rc == 0"

- name: check for iptables
  stat:
    path: "/etc/ferm/"
  register: cleanup_iptables_check

- name: cleanup iptables
  include_tasks: _cleanup_iptables.yml
  when: "cleanup_iptables_check.stat.exists"

- name: check for mysql
  stat:
    path: "{{global_etc}}mysql"
  register: cleanup_mysql_check

- name: cleanup mysql
  include_tasks: _cleanup_mysql.yml
  when: "cleanup_mysql_check.stat.exists"

- name: clean old build folder
  file:
    path: "{{item}}"
    state: absent
  with_items:
    - "{{global_build}}loki"
    #- "{{global_build}}influxdb"
    - "{{global_build}}mysql"
    - "{{global_etc}}wireguard_cloud/util/startup.sh"

- name: "cleanup cron jobs"
  cron:
    name: "{{item.name}}"
    cron_file: "ansible_{{item.group}}"
    state: absent
  with_items:
    - { name: "Nextcloud Fileindex", group: "nextcloud" }
    - { name: "Nextcloud Previewupdates", group: "nextcloud" }
