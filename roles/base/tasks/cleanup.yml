# check if docker exists

# unmount cloud remotes if available

- name: check for docker
  shell:
    cmd: "docker 2> /dev/null"
  changed_when: "cleanup_docker_check.rc == 0"
  failed_when: no
  register: cleanup_docker_check

- name: cleanup docker
  include_tasks: _cleanup_docker.yml
  when: "cleanup_docker_check.rc == 0"

- name: check for iptables
  stat:
    path: "/etc/ferm/"
  register: cleanup_iptables_check

- name: cleanup iptables
  include_tasks: _cleanup_iptables.yml
  when: "cleanup_iptables_check.stat.exists"

- name: check for mysql
  stat:
    path: "{{global_etc}}mysql"
  register: cleanup_mysql_check

- name: cleanup mysql
  include_tasks: _cleanup_mysql.yml
  when: "cleanup_mysql_check.stat.exists"

- name: cleanup camera_service
  include_tasks: _cleanup_camera_service.yml
  when: "camera_devices is not defined"




- name: cleanup cron jobs
  cron:
    name: "{{item.name}}"
    cron_file: "ansible_{{item.group}}"
    state: absent
  failed_when: no
  with_items:
    - { name: "Nextcloud Fileindex", group: "nextcloud" }
    - { name: "Nextcloud Previewupdates", group: "nextcloud" }

- name: stop obsolete services
  systemd:
    name: "{{item}}"
    state: stopped
    enabled: no
    masked: no
  failed_when: no
  register: cleaned_services
  with_items:
    - "nextcloud_inotify.service"
    - "imaginary.service"

- name: clean obsolete files
  file:
    path: "{{item}}"
    state: absent
  with_items:
    - "{{global_build}}loki"
    #- "{{global_build}}influxdb"
    - "{{global_build}}mysql"
    - "{{global_build}}openhab"
    - "{{global_etc}}wireguard_cloud/util/startup.sh"
    - "/etc/systemd/system/nextcloud_inotify.service"
    - "{{global_etc}}systemd_watcher/services/nextcloud_inotify.conf"
    - "/etc/nftables/20_trusted_cloud_vpn.nft"
    - "/etc/nftables/20_trusted_networks.nft"
    - "{{global_etc}}prometheus/rules/camera_service.yml"
    - "{{global_etc}}prometheus/rules/update_service.yml"
    - "/etc/systemd/system/imaginary.service"
    - "{{global_etc}}systemd_watcher/services/imaginary.conf"
    - "/etc/modprobe.d/iptables-blacklist.conf"
    - "{{htdocs_path}}nextcloud/apps/news/css/custom.css"
    - "{{global_etc}}prometheus/prometheus.yml.tpl"
    - "/opt/scripts/prometheus_generator"

- name: Refresh systemd
  shell:
    cmd: "{{item}}"
  failed_when: no
  when: "cleaned_services.changed"
  with_items:
    - "systemctl daemon-reload"
    - "systemctl reset-failed"

- name: Clean wrong created backup cronjob
  file:
    path: "{{item}}"
    state: absent
  with_fileglob:
    - "/etc/cron.d/ansible_backup_sync_*"


