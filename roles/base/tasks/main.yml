- name: prepare global folder
  file:
    path: "{{item.path}}"
    state: directory
    owner: root
    group: root
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rwx,g=rx,o=rx", path: "{{data_path}}" }
    
    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_etc}}" }

    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_log}}" }
    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_lib}}" }
    - { mode: "u=rwx,g=rwx,o=rwx", path: "{{global_tmp}}" }

    - { mode: "u=rwx,g=,o=", path: "{{global_build}}" }
    
    - { mode: "u=rwx,g=rx,o=rx", path: "{{raid_path}}" }

    - { mode: "u=rwx,g=rx,o=rx", path: "{{projects_path}}" }
    - { mode: "u=rwx,g=rx,o=", path: "{{local_backup_path}}" }

- name: install required packages => is_fedora
  yum:
    name: [
        mc
      , subversion
      , git
      , make
      , autoconf
      , automake
      , gcc
      , libxml2-devel
      , lm_sensors
      , ImageMagick
      , htop
      , sysstat
      , iotop
      , zip
      , curl
      , smem 
      #, python2-pip
      , python3-pip
      , bzip2
      #, python2-passlib
      , python3-passlib
      , mailx
      
      , python3-libselinux # used by ansible on fedora
      , policycoreutils-python-utils # needed to modify selinux permission (docker & apache)
      , redhat-rpm-config  # used by ansible gem mobule
    ]
    state: present
  when: is_fedora|bool

- name: install required packages => is_suse
  zypper:
    name: [  
        mc
      , subversion
      , git
      , make
      , autoconf
      , automake
      , gcc
      , libxml2-devel
      , sensors
      , ImageMagick
      , htop
      , sysstat
      , iotop
      , zip
      , curl               # used to send multi part/formdata => kibana
      , smem               # useful tool to debug memory usage (including swap usage)
      , python2-pip        # used for ansible pip module => python2 is used because it installes python2-setuptools and depends on it. python3-pip still needs python2-setuptools
      #, python3-pip
      , bzip2              # used to import databases with bzcat
      , python2-passlib    # used by ansible htpasswd module (user role) => python2 is used because "/usr/lib/python3.6/site-packages/ansible/modules/web_infrastructure/htpasswd.py" is using python2
      #, python3-passlib    # used by ansible htpasswd module (user role)
      , insserv-compat     # used by ansible systemd module
      , mailx              # used by elastalert
    ]
    state: present
  when: is_suse|bool
       
- name: install pexpect
  pip:
    name: pexpect          # needed for ansible expect module (openvpn)
  
#- name: change vagrant user
#  user:
#    name: vagrant
#    uid: 2000
#  when: not is_production
  
- name: prepare vagrant backup folder => not is_production
  file:
    path: "{{item}}"
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{local_backup_path}}archive"
    - "{{local_backup_path}}intranet-der-dinge.de"
  when: not is_production


  
  
  
#https://github.com/netdata/netdata/issues/6527

### TUNING NETWORK PERFORMANCE ###

# https://www.ibm.com/support/knowledgecenter/en/SSQPD3_2.6.0/com.ibm.wllm.doc/UDPSocketBuffers.html
# On the Linux platform Tx ring buffer overruns can occur when transmission rates approach 1Gbps and the default send socket buffer is greater than 65536.
# It is recommended to set the net.core.wmem_default kernel parameter to no larger than 65536 bytes.
# Transmitting applications can configure the send socket buffer size for InfiniBand, UDP, or TCP protocols independently in a transmit instance.

- name: set sysctl values for container environments
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^{{item.regex}}\s*='
    line: '{{item.line}}'
  with_items:
    # Default and Maximum Socket Receive Buffer
    - { regex: "net\\.core\\.rmem_default", line: "net.core.rmem_default = 8388608" }
    - { regex: "net\\.core\\.rmem_max", line: "net.core.rmem_max = 16777216" }
    # Default and Maximum Socket Send Buffer
    - { regex: "net\\.core\\.wmem_default", line: "net.core.wmem_default = 65536" }
    - { regex: "net\\.core\\.wmem_max", line: "net.core.wmem_max = 16777216" }
    # Increase the maximum amount of option memory buffers
    - { regex: "net\\.core\\.optmem_max", line: "net.core.optmem_max = 65536" }
    # Increase number of incoming connections backlog
    - { regex: "net\\.core\\.netdev_max_backlog", line: "net.core.netdev_max_backlog = 100000" }
    # Increase the tcp read and write-buffer-space allocatable
    - { regex: "net\\.ipv4\\.tcp_rmem", line: "net.ipv4.tcp_rmem = 4096 1048576 2097152" }
    - { regex: "net\\.ipv4\\.tcp_wmem", line: "net.ipv4.tcp_wmem = 4096 65536 16777216" }
    # Increase the ucp read and write-buffer-space allocatable
    - { regex: "net\\.ipv4\\.udp_rmem_min", line: "net.ipv4.udp_rmem_min = 4096" }
    - { regex: "net\\.ipv4\\.udp_wmem_min", line: "net.ipv4.udp_wmem_min = 4096" }
    # Maximum number of microseconds in one NAPI polling cycle.
    # Polling will exit when either netdev_budget_usecs have elapsed during
    # the poll cycle or the number of packets processed reaches netdev_budget.
    - { regex: "net\\.core\\.netdev_budget", line: "net.core.netdev_budget = 60000" }
    - { regex: "net\\.core\\.netdev_budget_usecs", line: "net.core.netdev_budget_usecs = 6000" }
    # Disable TCP slow start on idle connections
    - { regex: "net\\.ipv4\\.tcp_slow_start_after_idle", line: "net.ipv4.tcp_slow_start_after_idle = 0" }
  register: sysctlchanged
  
- name: refresh sysctl to activate sysctl changes => sysctl changed
  shell: sysctl -p
  when: sysctlchanged.changed
