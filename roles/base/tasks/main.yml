- name: prepare global folder
  file:
    path: "{{item.path}}"
    state: directory
    owner: root
    group: root
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rwx,g=rx,o=rx", path: "{{base_path}}" }
    - { mode: "u=rwx,g=rx,o=rx", path: "{{data_path}}" }

    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_etc}}" }

    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_log}}" }
    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_lib}}" }
    - { mode: "u=rwx,g=rwx,o=rwx", path: "{{global_tmp}}" }

    - { mode: "u=rwx,g=,o=", path: "{{global_build}}" }
    
    - { mode: "u=rwx,g=rx,o=rx", path: "{{projects_path}}" }
    - { mode: "u=rwx,g=rx,o=", path: "{{backup_path}}" }
    - { mode: "u=rwx,g=rx,o=", path: "{{backup_path}}databases" }

    - { mode: "u=rwx,g=rx,o=", path: "/opt/scripts" }
    - { mode: "u=rwx,g=rwx,o=rwx", path: "/tmp/ansible/" }

- name: enable epel repository => is_rhel
  dnf:
    name: epel-release
    state: latest
  when: is_rhel

- name: cleanup => is_rhel or is_fedora
  yum:
    name: [
        python3-werkzeug
      , python3-flask
      , python3-inotify
    ]
    state: absent
  when: is_rhel or is_fedora

- name: install required packages => is_rhel or is_fedora
  yum:
    name: [
        mc
      , htop
      , sysstat
      , iotop
      , smem 
      
      , wireguard-tools
      
      , netcat
      , wget

      , curl
      , bzip2
      , lsof

      , rsync              
      , zip
      , unzip
      , git

#      , gcc
#      , make

      , sshpass
      
      , python3-setuptools
      , python3-pip
      , python3-passlib
      
      , python3-requests   # used by various system scripts like 'systemd_watcher_service_check'

      , python3-libselinux # used by ansible on fedora
      , policycoreutils-python-utils # needed to modify selinux permission (docker & apache)
#      , redhat-rpm-config  # used by ansible gem mobule
    ]
    state: present
  when: is_rhel or is_fedora

- name: cleanup packages => is_ubuntu
  apt:
    name: [
        python3-werkzeug
      , python3-flask
      , python3-pyinotify
    ]
    state: absent
  when: is_ubuntu

- name: install required packages => is_ubuntu
  apt:
    name: [
        mc
      , htop
      , sysstat
      , iotop
      , smem 

      , wireguard-tools
      
      , netcat-openbsd
      , wget

      , curl
      , bzip2
      , lsof

      , rsync              
      , zip
      , unzip
      , git

#      , gcc
#      , make

      , sshpass

      , python3-setuptools
      , python3-pip
      , python3-passlib

      , python3-requests   # used by various system scripts like 'systemd_watcher_service_check'
    ]
    state: present
  when: is_ubuntu
  
- name: cleanup packages => is_suse
  zypper:
    name: [
        python3-Werkzeug   # used for daemon services like update_service
      , python3-Flask      # used for daemon services like update_service
      , python3-pyinotify  # used for daemon services like update_service
    ]
    state: absent
  when: is_suse

- name: install required packages => is_suse
  zypper:
    name: [  
        mc
      , htop
      , sysstat
      , iotop
      , smem               # useful tool to debug memory usage (including swap usage)
      , arp-scan           # useful for network exploring

      , wireguard-tools

      , netcat-openbsd     # used for readyness checks
      , wget               # used for readyness checks

      , curl               # used to fetch e.g. picture of the day
      , bzip2              # used to import databases with bzcat
      , lsof               # used by container visualizer cli & shared_libs (processlist??)

      , rsync              # used for ansible synchronize
      , zip                # used for ansible unarchive mobule
      , unzip              # used for ansible unarchive mobule
      
      , git                # used for ansible git module

#      , gcc                # used for ansible gem module => to build native extension
#      , make               # used for installing ferm

      , procps             # needed for systl
      
      , sshpass            # used for ssh accessibility checks (e.g. openhab => wait until ready)

      , python3-setuptools
      , python3-pip
      , python3-passlib    # used by ansible htpasswd module (user role), must be added here as the add web user task is a shared task

      , python3-requests   # used by various system scripts like 'systemd_watcher_service_check'
      
      , insserv-compat     # used by ansible systemd module
    ]
    state: present
  when: is_suse

# to avoid service restarts on "apt-get install"
# DPkg::Post-Invoke {"test -x /usr/lib/needrestart/apt-pinvoke && /usr/lib/needrestart/apt-pinvoke -m u || true"; };
- name: disable auto service restart after apg-get (needsrestart) => is_ubuntu
  lineinfile:
    path: /etc/apt/apt.conf.d/99needrestart
    regexp: '^DPkg::Post-Invoke (.*)'
    line: '#DPkg::Post-Invoke \1'
    backrefs: yes
  when: is_ubuntu

- name: set sysctl inotify related values
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^{{item.regex}}\s*='
    line: '{{item.line}}'
  with_items:
    #Each inotify watch uses 540 bytes of kernel memory on 32-bit architectures, and 1080 bytes on 64-bit architectures. Kernel memory is unswappable. So there is a memory cost, certainly.
    #- { regex: "fs\\.inotify\\.max_user_instances", line: "fs.inotify.max_user_instances = 256" }
    #- { regex: "fs\\.inotify\\.max_user_watches", line: "fs.inotify.max_user_watches = 65536" }
    - { regex: "fs\\.inotify\\.max_user_watches", line: "fs.inotify.max_user_watches = 262144" } # => max 270MB
  register: sysctlchanged
   
- name: refresh sysctl to activate sysctl changes => sysctl changed
  shell: sysctl -p
  when: sysctlchanged.changed

- name: copy missing logind.conf # => was missing on opensuse leap15.6
  copy:
    src: templates//etc/systemd/logind.conf
    dest: /etc/systemd/logind.conf
    force: no
  notify: "restart logind"

- name: disable suspend action on logind
  lineinfile:
    path: /etc/systemd/logind.conf
    regexp: '^[#]*{{item.key}}\s*='
    line: '{{item.key}}={{item.value}}'
  with_items:
    - { key: "HandlePowerKey", value: "ignore" }
    - { key: "HandleSuspendKey", value: "ignore" }
    - { key: "HandleHibernateKey", value: "ignore" }
  notify: "restart logind"

# *** NETWORK ***
- name: set hostname
  shell: 'hostnamectl set-hostname {{server_name}}'
  changed_when: "ansible_hostname != server_name"

- name: set hostname file
  copy:
    content: "{{server_name}}"
    dest: /etc/hostname
    force: yes
    owner: root
    group: root
    mode: 0644

- name: add server name
  vars:
    host_name: "{{server_name}}"
    host_ip_address: "{{default_server_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

#https://cromwell-intl.com/open-source/performance-tuning/ethernet.html
#ethtool -K eth0 tx-checksum-ipv4 off tx-checksum-ipv6 off

- name: set sysctl network related values
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^{{item.regex}}\s*='
    line: '{{item.line}}'
  with_items:
    # enable IPV6
    - { regex: "net\\.ipv6\\.conf\\.all\\.disable_ipv6", line: "net.ipv6.conf.all.disable_ipv6 = 0" }

    # needed to fix "netdev budget ran outs" on a atom cpu
    # https://github.com/netdata/netdata/issues/4624
    - { regex: "net\\.core\\.netdev_budget_usecs", line: "net.core.netdev_budget_usecs = 20000" }

    # Increase number of incoming connections backlog
    # 8333 should be enough for 1GBit => https://cromwell-intl.com/open-source/performance-tuning/ethernet.html
    - { regex: "net\\.core\\.netdev_max_backlog", line: "net.core.netdev_max_backlog = 8333" }

    - { regex: "net\\.core\\.optmem_max", line: "net.core.optmem_max = 65536" }

    # redhat 7.2 defaults
    #net.core.rmem_default=262144
    #net.core.rmem_max=4194304
    - { regex: "net\\.core\\.rmem_default", line: "net.core.rmem_default = 65536" }
    - { regex: "net\\.core\\.rmem_max", line: "net.core.rmem_max = 2097152" }
    - { regex: "net\\.ipv4\\.tcp_rmem", line: "net.ipv4.tcp_rmem = 4096 87380 2097152" }
    - { regex: "net\\.ipv4\\.udp_rmem_min", line: "net.ipv4.udp_rmem_min = 4096" }

    # https://www.ibm.com/support/knowledgecenter/en/SSQPD3_2.6.0/com.ibm.wllm.doc/UDPSocketBuffers.html
    # On the Linux platform Tx ring buffer overruns can occur when transmission rates approach 1Gbps and the default send socket buffer is greater than 65536.
    # It is recommended to set the net.core.wmem_default kernel parameter to no larger than 65536 bytes.
    # Transmitting applications can configure the send socket buffer size for InfiniBand, UDP, or TCP protocols independently in a transmit instance.
    - { regex: "net\\.core\\.wmem_default", line: "net.core.wmem_default = 65536" }
    - { regex: "net\\.core\\.wmem_max", line: "net.core.wmem_max = 2097152" }
    - { regex: "net\\.ipv4\\.tcp_wmem", line: "net.ipv4.tcp_wmem = 4096 65536 2097152" }
    - { regex: "net\\.ipv4\\.udp_wmem_min", line: "net.ipv4.udp_wmem_min = 4096" }

    - { regex: "net\\.ipv4\\.tcp_slow_start_after_idle", line: "net.ipv4.tcp_slow_start_after_idle = 0" }

    # https://security.stackexchange.com/questions/43205/nf-conntrack-table-full-dropping-packet
    # fix connection track table full, because of a denial of service

    #https://discuss.aerospike.com/t/how-to-handle-net-netfilter-nf-conntrack-count-max-exceeded/5051

    #net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60
    #net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 60
    #net.netfilter.nf_conntrack_tcp_timeout_time_wait = 60
    #net.netfilter.nf_conntrack_max = 524288
    #- { regex: "net\\.netfilter\\.nf_conntrack_generic_timeout", line: "net.netfilter.nf_conntrack_generic_timeout = 120" }
    #- { regex: "net\\.netfilter\\.nf_conntrack_sctp_timeout_established", line: "net.netfilter.nf_conntrack_sctp_timeout_established = 54000" }

    #sysctl -w net.netfilter.nf_conntrack_generic_timeout=120   => old was 600
    #sysctl -w net.netfilter.nf_conntrack_sctp_timeout_established=54000    => old was 432000
  register: sysctlchanged

- name: refresh sysctl to activate sysctl changes => sysctl changed
  shell: sysctl -p
  when: sysctlchanged.changed

