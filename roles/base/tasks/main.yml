- name: prepare global folder
  file:
    path: "{{item.path}}"
    state: directory
    owner: root
    group: root
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rwx,g=rx,o=rx", path: "{{data_path}}" }
    
    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_etc}}" }

    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_log}}" }
    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_lib}}" }
    - { mode: "u=rwx,g=rwx,o=rwx", path: "{{global_tmp}}" }

    - { mode: "u=rwx,g=,o=", path: "{{global_build}}" }
    
    - { mode: "u=rwx,g=rx,o=rx", path: "{{raid_path}}" }

    - { mode: "u=rwx,g=rx,o=rx", path: "{{projects_path}}" }
    - { mode: "u=rwx,g=rx,o=", path: "{{backup_path}}" }

    - { mode: "u=rwx,g=rx,o=", path: "/opt/backup_restore" }

- name: install required packages => is_fedora
  yum:
    name: [
        mc
      , htop
      , sysstat
      , iotop
      , smem 
      
      , wireguard-tools
      
      , curl
      , bzip2
      , lsof

      , zip
      , unzip
      , git

#      , gcc
      , make

      , sshpass
      
      , python3-flask
      , python3-inotify

      , python3-setuptools
      , python3-pip
      , python3-passlib
      
      , python3-libselinux # used by ansible on fedora
      , policycoreutils-python-utils # needed to modify selinux permission (docker & apache)
#      , redhat-rpm-config  # used by ansible gem mobule
    ]
    state: present
  when: is_fedora|bool

- name: install required packages => is_ubuntu
  apt:
    name: [
        mc
      , htop
      , sysstat
      , iotop
      , smem 

      , wireguard-tools
      
      , curl
      , bzip2
      , lsof

      , rsync              
      , zip
      , unzip
      , git

#      , gcc
      , make

      , sshpass
      
      , python3-flask
      , python3-pyinotify
      
      , python3-setuptools
      , python3-pip
      , python3-passlib
    ]
    state: present
  when: is_ubuntu|bool
  
- name: install required packages => is_suse
  zypper:
    name: [  
        mc
      , htop
      , sysstat
      , iotop
      , smem               # useful tool to debug memory usage (including swap usage)
      , arp-scan           # useful for network exploring

      , wireguard-tools

      , curl               # used to fetch e.g. picture of the day
      , bzip2              # used to import databases with bzcat
      , lsof               # used by container visualizer cli & shared_libs (processlist??)

      , rsync              # used for ansible synchronize
      , zip                # used for ansible unarchive mobule
      , unzip              # used for ansible unarchive mobule
      
      , git                # used for ansible git module

#      , gcc                # used for ansible gem module => to build native extension
      , make               # used for installing ferm
      
      , sshpass            # used for ssh accessibility checks (e.g. openhab => wait until ready)

      , python3-Flask      # used for daemon services like update_service and ci_service
      , python3-pyinotify  # used for daemon services like update_service and ci_service
      
      , python3-setuptools
      , python3-pip
      , python3-passlib    # used by ansible htpasswd module (user role), must be added here as the add web user task is a shared task
      
      , insserv-compat     # used by ansible systemd module
    ]
    state: present
  when: is_suse|bool
       
- name: install pexpect
  pip:
    name: pexpect          # needed for ansible expect module (openvpn)
  
- name: prepare shared backup folder
  file:
    path: "{{item}}"
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{backup_path}}archive"

- name: set sysctl inotify related values
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^{{item.regex}}\s*='
    line: '{{item.line}}'
  with_items:
    #Each inotify watch uses 540 bytes of kernel memory on 32-bit architectures, and 1080 bytes on 64-bit architectures. Kernel memory is unswappable. So there is a memory cost, certainly.
    #- { regex: "fs\\.inotify\\.max_user_instances", line: "fs.inotify.max_user_instances = 256" }
    #- { regex: "fs\\.inotify\\.max_user_watches", line: "fs.inotify.max_user_watches = 65536" }
    - { regex: "fs\\.inotify\\.max_user_watches", line: "fs.inotify.max_user_watches = 262144" } # => max 270MB
  register: sysctlchanged
   
- name: refresh sysctl to activate sysctl changes => sysctl changed
  shell: sysctl -p
  when: sysctlchanged.changed

- name: disable suspend action on logind
  lineinfile:
    path: /etc/systemd/logind.conf
    regexp: '^[#]*{{item.key}}\s*='
    line: '{{item.key}}={{item.value}}'
  with_items:
    - { key: "HandlePowerKey", value: "ignore" }
    - { key: "HandleSuspendKey", value: "ignore" }
    - { key: "HandleHibernateKey", value: "ignore" }
  notify: "restart logind"
