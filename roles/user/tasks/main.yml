# **** (SSH, SMB, WEB) ****
- name: add user with no login
  user:
    name: "{{item}}"
#    uid: 1001
    shell: /bin/false
    home: "/home/{{item}}/"
    #password: "{{ item.password | password_hash('sha512') }}"
    #update_password: on_create
    groups: users
    append: no
  with_items: "{{vault_usernames}}"
  
- name: prepare user folder
  file:
    path: "/home/{{item}}/"
    state: directory
    owner: "{{item}}"
    group: users
    mode: 0750
  with_items: "{{vault_usernames}}"
    
- name: add user to samba
  shell: "( (pdbedit -L | grep {{item}}) && echo 'skipped' ) || ( ( printf '{{ vault_userdata[item].samba_password }}\n{{ vault_userdata[item].samba_password }}\n' | smbpasswd -a {{item}} ) && echo 'created' )"
  register: command_result
  #failed_when: "'command-not-found' in command_result.stderr"
  changed_when: "'created' in command_result.stdout"
  with_items: "{{vault_usernames}}"
  notify: "restart samba"

- name: add user to apache .htpasswd
  htpasswd:
    path: "{{htdocs_path}}.htpasswd"
    name: "{{item}}"
    password: "{{vault_userdata[item].web_password}}"
  with_items: "{{vault_usernames}}"

- name: add user to apache .htdigest
  vars:
    username: "{{item}}"
    password: "{{vault_userdata[item].web_password}}"
    realm: "{{server_name|capitalize}}"
  lineinfile:
    path: "{{htdocs_path}}.htdigest"
    regexp: '^{{item}}:{{server_name}}'
    line: "{{ lookup('template', 'roles/user/templates/htdigest') }}"
  with_items: "{{vault_usernames}}"

- name: add user name to .htdata
  lineinfile:
    path: "{{htdocs_path}}.htdata"
    regexp: '^{{item}}: {{vault_userdata[item].name}}'
    line: '{{item}}: {{vault_userdata[item].name}}'
  with_items: "{{vault_usernames}}"
   
# **** APACHE USERS (WEB) ****
- name: add user "{{vault_admin_username}}" to apache .htpasswd
  htpasswd:
    path: "{{htdocs_path}}.htpasswd"
    name: "{{vault_admin_username}}"
    password: "{{vault_admin_web_password}}"
  
- name: add user "{{vault_admin_username}}" to apache .htdigest
  vars:
    username: "{{vault_admin_username}}"
    password: "{{vault_admin_web_password}}"
    realm: "{{server_name|capitalize}}"
  lineinfile:
    path: "{{htdocs_path}}.htdigest"
    regexp: '^{{vault_admin_username}}:{{server_name}}'
    line: "{{ lookup('template', 'roles/user/templates/htdigest') }}"

- name: add user "{{vault_alexa_username}}" to apache .htpasswd
  htpasswd:
    path: "{{htdocs_path}}.htpasswd"
    name: "{{vault_alexa_username}}"
    password: "{{vault_alexa_web_password}}"

- name: add user "{{vault_alexa_username}}" to apache .htdigest
  vars:
    username: "{{vault_alexa_username}}"
    password: "{{vault_alexa_web_password}}"
    realm: "{{server_name|capitalize}}"
  lineinfile:
    path: "{{htdocs_path}}.htdigest"
    regexp: '^{{vault_alexa_username}}:{{server_name}}'
    line: "{{ lookup('template', 'roles/user/templates/htdigest') }}"
 
- name: check if 'USER' group exists in apache
  shell: "grep \"^USER\" {{htdocs_path}}.htgroups"
  register: user_check
  changed_when: user_check.stdout == ""
  failed_when: no
    
- name: add 'USER' group to apache
  lineinfile:
    path: "{{htdocs_path}}.htgroups"
    regexp: '^USER[\s:]{1}.*'
    line: 'USER:'
  when: user_check.stdout == ""

- name: add admin to apache groups
  lineinfile:
    path: "{{htdocs_path}}.htgroups"
    backrefs: yes
    regexp: '^(USER:(?!.*{{vault_admin_username}}).*)'
    line: '\1 {{vault_admin_username}}'

- name: add user to apache groups
  lineinfile:
    path: "{{htdocs_path}}.htgroups"
    backrefs: yes
    regexp: '^(USER:(?!.*{{item}}).*)'
    line: '\1 {{item}}'
  with_items: "{{vault_usernames}}"
