- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: "999" # 999 is mysql user inside the container
    group: root
    mode: 0750
  with_items:
    - '{{ global_lib }}mysql'
    - '{{local_backup_path}}mysql'

- name: check started docker
  systemd:
    name: docker
    state: started

- name: create docker container
  docker_container:
    name: mysql
    image: mariadb:10.4.10
    state: present
#    recreate: true
    env:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: mysql
    volumes:
      - '{{ global_lib }}mysql:/var/lib/mysql:z'
      - '{{local_backup_path}}mysql:/var/lib/mysql_backup:z'
    ports:
      - "127.0.0.1:3306:3306"  
  notify: "restart mysql"
    
- name: create systemd service
  vars:
    container_name: "mysql"
  import_role:
    name: container
    tasks_from: add_docker_service
  
- name: copy fluentd config
  vars:
    config_file: "roles/mysql/templates/etc/fluent/_.ansible.d/mysql.conf"
  import_role:
    name: fluentd
    tasks_from: add_config
  tags: ['fluentd_conf']
  
- name: create cron job
  vars:
    name: "MySQL Core Backup"
    cmd: "docker exec mysql sh -c \"/usr/bin/mysqldump mysql -h 127.0.0.1 | bzip2 -c > /var/lib/mysql_backup/mysql_$(date +\\%Y-\\%m-\\%d).sql.bz2\""
    file: "ansible_mysql"
    hour: "1"
    minute: "0"
  import_role:
    name: cron
    tasks_from: add_cronjob
  tags: ['cron_job']

- name: create cron job
  vars:
    name: "MySQL Clean Backup"
    cmd: "find {{local_backup_path}}mysql/ -name \"*.sql.bz2\" -mtime +30 -exec rm {} +"
    file: "ansible_mysql"
    hour: "0"
    minute: "45"
  import_role:
    name: cron
    tasks_from: add_cronjob
  tags: ['cron_job']
