- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    #mode: 0770
    recurse: true
  with_items:
    - "{{ global_lib }}grafana/"
    - "{{ global_lib }}grafana/dashboards/"
    - "{{ global_lib }}grafana/provisioning"
    - "{{ global_lib }}grafana/provisioning/dashboards/"
    - "{{ global_lib }}grafana/provisioning/datasources/"
    - "{{ global_lib }}grafana/provisioning/notifiers/"

- name: copy grafana dashboards
  copy:
    src: "{{item}}"
    dest: "{{ global_lib }}grafana/dashboards/{{item|basename}}"
    decrypt: yes
    owner: root
    group: root
    mode: 0640
  notify: "restart grafana"
  with_fileglob:
    - "roles/grafana/templates/dashboards/*"

- name: copy grafana provisioning
  template:
    src: "roles/grafana/templates/{{item}}"
    dest: "{{ global_lib }}grafana/{{item}}"
    decrypt: yes
    owner: root
    group: root
    mode: 0640
  notify: "restart grafana"
  with_items:
    - "provisioning/dashboards/provider.yaml"
    - "provisioning/datasources/openhab.yaml"
    - "provisioning/datasources/opentsdb.yaml"
  when: "vault_active|bool"
  
- name: check started docker
  systemd:
    name: docker
    state: started
    
- name: create docker container
  docker_container:
    name: grafana
    image: grafana/grafana:6.4.4
    state: present
    network_mode: "host"
    user: "root:root"
#    recreate: true
    env:
      GF_SERVER_DOMAIN: "{{server_domain}}"
      GF_SERVER_HTTP_ADDR: "127.0.0.1"
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:/grafana"
#      GF_LOG_MODE: "syslog"
#      GF_LOG_SYSLOG_TAG: "grafana"
      GF_SECURITY_ALLOW_EMBEDDING: "true"
    log_driver: journald
    log_options:
      tag: grafana
    volumes:
      - '{{global_lib}}grafana:/var/lib/grafana:z'
      - '{{global_lib}}grafana/provisioning:/etc/grafana/provisioning:z'
    #ports:
    # - "9000:3000"  
  notify: "restart grafana"
    
- name: create systemd service
  vars:
    container_name: "grafana"
  include_role:
    name: container
    tasks_from: add_docker_service
  
- name: copy fluentd config
  vars:
    config_file: "roles/grafana/templates/etc/fluent/_.ansible.d/grafana.conf"
  include_role:
    name: fluentd
    tasks_from: add_config
  tags: ['fluentd_conf']
      
- name: copy apache config
  vars:
    config_file: "roles/grafana/templates/etc/apache2/_.ansible.d/grafana.conf"
  include_role:
    name: apache
    tasks_from: add_config
  when: "vault_active|bool"
  tags: ['apache_conf']
