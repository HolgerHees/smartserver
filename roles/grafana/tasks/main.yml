- name: set version
  set_fact:
    grafana_version: '10.4.2'
  tags: [ 'update_notifier_config' ]    

- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{ global_lib }}grafana/plugins/" }
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{ global_etc }}grafana/provisioning/dashboards/" }
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{ global_etc }}grafana/provisioning/notifiers/" }
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{ global_etc }}grafana/provisioning/plugins/" }
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{ global_etc }}grafana/provisioning/alerting/" }
  include_tasks: roles/_shared/create_directories.yml

- name: check individual grafana dashboards
  shell: "ls {{config_path}}templates/grafana/dashboards/"
  register: dashboard_config_result
  changed_when: no
  failed_when: no
  tags: ['grafana_config']

- name: synchronize individual grafana dashboards
  synchronize:
    src: "{{config_path}}templates/grafana/dashboards/"
    dest: "{{ global_lib }}grafana/dashboards/"
    archive: no
    checksum: yes
    group: yes
    owner: yes
    perms: yes
    recursive: yes
    rsync_opts:
      - "--chown=root:root"
      - "--chmod=D750,F640"
  when: "dashboard_config_result.rc == 0"
  notify: "restart grafana"
  tags: ['grafana_config']

- name: copy grafana provisioning
  template:
    src: "templates/{{item}}"
    dest: "{{ global_etc }}grafana/{{item}}"
    owner: "root"
    group: "root"
    mode: 0640
  notify: "restart grafana"
  with_items:
    - "provisioning/dashboards/provider.yaml"
    
- name: build docker image
  vars:
    name: "grafana"
    image_name: "custom_grafana"
    image_version: "{{grafana_version}}"
    files:
      - roles/grafana/templates/container/Dockerfile
  include_tasks: roles/container/shared/build_docker_image.yml
    
- name: create docker container
  docker_container:
    name: grafana
    image: "custom_grafana:{{grafana_version}}"
    state: present
#    network_mode: "host"
    user: "root:root"
#    recreate: true
    env:
      GF_SERVER_DOMAIN: "grafana.{{server_domain}}"
#      GF_SERVER_HTTP_ADDR: "127.0.0.1"
      GF_SERVER_ROOT_URL: "https://%(domain)s/"
#      GF_LOG_MODE: "syslog"
#      GF_LOG_SYSLOG_TAG: "grafana"
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: grafana
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "isolated"
        ipv4_address: "{{docker_grafana_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{global_lib}}grafana:/var/lib/grafana:z'
      - '{{global_etc}}grafana/provisioning:/etc/grafana/provisioning:z'
    exposed_ports:
     - "3000"
  notify: "restart grafana"
      
- name: allow grafana service
  vars:
    name: "grafana"
    rules:
      - "saddr {{docker_grafana_ip}} daddr {{docker_mysql_ip}}"
      - "saddr {{docker_grafana_ip}} daddr {{docker_influxdb_ip}}"
      - "saddr {{docker_grafana_ip}} daddr {{docker_loki_ip}}"
      - "saddr {{docker_grafana_ip}} daddr {{docker_prometheus_ip}}"
      - "saddr {{docker_grafana_ip}} daddr {{docker_alertmanager_ip}}"
#      - "saddr {{docker_grafana_ip}} proto tcp dport 443 outerface {{default_network_interface}}" # fetching grafana plugin keys
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: add container name
  vars:
    host_name: "grafana"
    host_ip_address: "{{docker_grafana_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

# ***** FINALIZE *****
- name: register webui
  vars:
    name: "grafana"
    js_file: "templates/webui/grafana.js"
    i18n_files: [ { language: "de", file: "templates/webui/grafana.de.json" } ]
    icons: [ 'templates/webui/icons/grafana_logo.svg', 'templates/webui/icons/grafana_logs.svg' ]
  include_tasks: roles/apache_webui/shared/add_webui.yml
  tags: ['apache_webui_config']

- name: copy apache vhost
  vars:
    sub_domain: "grafana"
    usergroup: "admin"
    include: "templates/etc/apache2/_.ansible.vhost.d/grafana.inc"
  include_tasks: roles/apache/shared/add_vhost.yml
  tags: ['apache_config']

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/grafana.conf"
  include_tasks: roles/fluentd/shared/add_config.yml
  tags: ['fluentd_config']
  when: "monitoring_enabled"
      
- name: create systemd service
  vars:
    container_name: "grafana"
    container_after: [ "mysql", "influxdb", "loki", "prometheus", "alertmanager" ]
  include_tasks: roles/container/shared/add_docker_service.yml
  tags: ['systemd_watcher_config']
  
- name: register update notifier
  vars:
    name: "grafana"
    type: "docker"
    url: "https://github.com/grafana/grafana/blob/main/CHANGELOG.md"
    config: {
      repository: "grafana/grafana",
      pattern: "^([0-9\\.]+)$"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"

- name: trigger grafana handler
  vars:
    notify: "restart grafana"
    service: "grafana.service"
  include_tasks: roles/_shared/service_check.yml
