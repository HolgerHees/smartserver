- name: set version
  set_fact:
    grafana_version: '9.3.1'
    natel_discrete_plugin_version: "0.1.1"
  tags: [ 'update_notifier_config' ]    

- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{ global_lib }}grafana/plugins/"
    - "{{ global_etc }}grafana/"
    - "{{ global_etc }}grafana/provisioning/dashboards/"
    - "{{ global_etc }}grafana/provisioning/notifiers/"
    - "{{ global_etc }}grafana/provisioning/plugins/"
    - "{{ global_etc }}grafana/provisioning/alerting/"

#- name: synchronize shared grafana dashboards
#  synchronize:
#    src: "templates/dashboards/"
#    dest: "{{ global_lib }}grafana/dashboards/"
#    archive: no
#    checksum: yes
#    group: yes
#    owner: yes
#    perms: yes
#    recursive: yes
#    rsync_opts:
#      - "--chown=root:root"
#      - "--chmod=D750,F640"
#  notify: "restart grafana"

- name: check individual grafana dashboards
  shell: "ls {{config_path}}roles/grafana/templates/dashboards/"
  register: dashboard_config_result
  changed_when: no
  failed_when: no
  tags: ['grafana_config']

- name: synchronize individual grafana dashboards
  synchronize:
    src: "{{config_path}}roles/grafana/templates/dashboards/"
    dest: "{{ global_lib }}grafana/dashboards/"
    archive: no
    checksum: yes
    group: yes
    owner: yes
    perms: yes
    recursive: yes
    rsync_opts:
      - "--chown=root:root"
      - "--chmod=D750,F640"
  when: "dashboard_config_result.rc == 0"
  notify: "restart grafana"
  tags: ['grafana_config']

- name: copy grafana provisioning
  template:
    src: "templates/{{item}}"
    dest: "{{ global_etc }}grafana/{{item}}"
    owner: root
    group: root
    mode: 0640
  notify: "restart grafana"
  with_items:
#    - "provisioning/datasources/opentsdb_influxdb.yaml"
#    - "provisioning/datasources/system_info_influxdb.yaml"
#    - "provisioning/datasources/openhab_influxdb.yaml"
#    - "provisioning/datasources/openhab_mysql.yaml"
#    - "provisioning/datasources/prometheus.yaml"
#    - "provisioning/datasources/loki.yaml"
    - "provisioning/dashboards/provider.yaml"
    
- name: install natel-discrete-panel archive
  unarchive:
    src: "https://grafana.com/api/plugins/natel-discrete-panel/versions/{{natel_discrete_plugin_version}}/download"
    dest: "{{ global_lib }}grafana/plugins/"
    creates: "{{ global_lib }}grafana/plugins/natel-discrete-panel/"
    remote_src: yes
    owner: "root"
    group: "root"
  notify: "restart grafana"

- name: build docker image
  vars:
    name: "grafana"
    image_name: "custom_grafana"
    image_version: "{{grafana_version}}"
    files:
      - roles/grafana/templates/container/Dockerfile
  import_tasks: roles/container/tasks/build_docker_image.yml
    
- name: create docker network
  vars:
    network_name: "grafana"
    network_ip: "{{docker_grafana_ip}}"
    network_internal: yes
  import_tasks: roles/container/tasks/create_docker_network.yml

- name: create docker container
  docker_container:
    name: grafana
    image: "custom_grafana:{{grafana_version}}"
    state: present
#    network_mode: "host"
    user: "root:root"
#    recreate: true
    env:
      GF_SERVER_DOMAIN: "grafana.{{server_domain}}"
#      GF_SERVER_HTTP_ADDR: "127.0.0.1"
      GF_SERVER_ROOT_URL: "https://%(domain)s/"
#      GF_LOG_MODE: "syslog"
#      GF_LOG_SYSLOG_TAG: "grafana"
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: grafana
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "grafana"
        ipv4_address: "{{docker_grafana_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{global_etc}}networks/grafana:/etc/hosts:z'
      - '{{global_lib}}grafana:/var/lib/grafana:z'
      - '{{global_etc}}grafana/provisioning:/etc/grafana/provisioning:z'
    exposed_ports:
     - "3000"
  notify: "restart grafana"
      
- name: connect mysql, influxdb, loki, prometheus & alertmanager with grafana network
  vars:
    network_name: "grafana"
    network_container:
      - mysql
      - influxdb
      - loki
      - prometheus
      - alertmanager
  import_tasks: roles/container/tasks/connect_docker_network.yml
  tags: [ 'influxdb', 'loki', 'mysql', 'prometheus', 'alertmanager' ]

- name: add container name
  vars:
    host_name: "grafana"
    host_ip_address: "{{docker_grafana_ip}}"
  import_tasks: roles/_shared/tasks/add_to_hosts.yml

# ***** FINALIZE *****
- name: register webui
  vars:
    name: "grafana"
    js_file: "templates/webui/grafana.js"
    i18n_files: [ { language: "de", file: "templates/webui/grafana.de.json" } ]
    icons: [ 'templates/webui/icons/grafana_logo.svg' ]
  import_tasks: roles/apache_webui/tasks/add_webui.yml

- name: copy apache vhost
  vars:
    sub_domain: "grafana"
    usergroup: "admin"
    include: "templates/etc/apache2/_.ansible.vhost.d/grafana.inc"
  import_tasks: roles/apache/tasks/add_vhost.yml

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/grafana.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml
      
- name: create systemd service
  vars:
    container_name: "grafana"
    container_after: [ "mysql", "influxdb", "loki", "prometheus", "alertmanager" ]
  import_tasks: roles/container/tasks/add_docker_service.yml
  
- name: register update notifier
  vars:
    name: "grafana"
    type: "docker"
    url: "https://github.com/grafana/grafana/blob/main/CHANGELOG.md"
    config: {
      repository: "grafana/grafana",
      pattern: "^([0-9\\.]+)$"
    }
  import_tasks: roles/update_service/tasks/add_software.yml

- name: trigger grafana handler
  vars:
    notify: "restart grafana"
    service: "grafana.service"
  import_tasks: roles/_shared/tasks/service_check.yml
