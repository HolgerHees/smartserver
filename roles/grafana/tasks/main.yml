- name: set version
  set_fact:
    grafana_version: '7.4.3'
  tags: [ 'update_notifier_configs' ]    

- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{ global_lib }}grafana/"
    - "{{ global_lib }}grafana/dashboards/"
    - "{{ global_etc }}grafana/"
    - "{{ global_etc }}grafana/provisioning"
    - "{{ global_etc }}grafana/provisioning/dashboards/"
    - "{{ global_etc }}grafana/provisioning/datasources/"
    - "{{ global_etc }}grafana/provisioning/notifiers/"
    - "{{ global_etc }}grafana/provisioning/plugins/"

- name: copy shared grafana dashboards
  copy:
    src: "{{item}}"
    dest: "{{ global_lib }}grafana/dashboards/{{item|basename}}"
    owner: root
    group: root
    mode: 0640
  notify: "restart grafana"
  with_items:
    - "templates/dashboards/Server Health.json"
    - "templates/dashboards/Logs.json"

- name: copy individual grafana dashboards
  copy:
    src: "{{config_path}}roles/grafana/templates/dashboards/{{item|basename}}"
    dest: "{{ global_lib }}grafana/dashboards/{{item|basename}}"
    owner: root
    group: root
    mode: 0640
  with_fileglob: "{{config_path}}roles/grafana/templates/dashboards/*"
  notify: "restart grafana"

- name: copy grafana provisioning
  template:
    src: "templates/{{item}}"
    dest: "{{ global_etc }}grafana/{{item}}"
    owner: root
    group: root
    mode: 0640
  notify: "restart grafana"
  with_items:
    - "provisioning/dashboards/provider.yaml"
    - "provisioning/datasources/openhab_influxdb.yaml"
    - "provisioning/datasources/openhab_mysql.yaml"
    - "provisioning/datasources/opentsdb.yaml"
    - "provisioning/datasources/loki.yaml"
  
- name: build docker image
  vars:
    name: "grafana"
    image_name: "custom_grafana"
    image_version: "{{grafana_version}}"
    files:
      - roles/grafana/templates/container/Dockerfile
  import_tasks: roles/container/tasks/build_docker_image.yml
    
- name: create docker network
  docker_network:
    name: grafana
    ipam_config:
      - subnet: "{{docker_grafana_ip.split('.')[:3] | join('.')}}.0/24"
        gateway: "{{docker_grafana_ip.split('.')[:3] | join('.')}}.1"
    connected:
      - mysql
      - influxdb
      - loki
    appends: yes
  tags: [ 'influxdb', 'loki', 'mysql' ]

- name: create docker container
  docker_container:
    name: grafana
    image: "custom_grafana:{{grafana_version}}"
    state: present
#    network_mode: "host"
    user: "root:root"
#    recreate: true
    env:
      GF_SERVER_DOMAIN: "{{server_domain}}"
#      GF_SERVER_HTTP_ADDR: "127.0.0.1"
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:/grafana"
#      GF_LOG_MODE: "syslog"
#      GF_LOG_SYSLOG_TAG: "grafana"
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: grafana
    networks:
      - name: "grafana"
        ipv4_address: "{{docker_grafana_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{global_lib}}grafana:/var/lib/grafana:z'
      - '{{global_etc}}grafana/provisioning:/etc/grafana/provisioning:z'
    exposed_ports:
     - "3000"
  notify: "restart grafana"
      
- name: add container name
  vars:
    host_name: "grafana"
    host_ip_address: "{{docker_grafana_ip}}"
  import_tasks: roles/network/tasks/add_to_hosts.yml

# ***** FINALIZE *****
- name: register webui
  vars:
    name: "grafana"
    js_file: "templates/webui/grafana.js"
    i18n_files: [ { language: "de", file: "templates/webui/grafana.de.json" } ]
  import_tasks: roles/apache_webui/tasks/add_webui.yml

- name: copy apache config
  vars:
    config_file: "templates/etc/apache2/_.ansible.conf.d/grafana.conf"
  import_tasks: roles/apache/tasks/add_config.yml

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/grafana.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml
      
- name: create systemd service
  vars:
    container_name: "grafana"
    container_after: [ "mysql", "influxdb", "loki" ]
  import_tasks: roles/container/tasks/add_docker_service.yml
  
- name: register update notifier
  vars:
    name: "grafana"
    type: "docker"
    url: "https://grafana.com/docs/grafana/latest/whatsnew/"
    config: {
      repository: "grafana/grafana",
      pattern: "^([0-9\\.]+)$"
    }
  import_tasks: roles/update_notifier/tasks/add_notifier.yml

- name: trigger grafana handler
  vars:
    notify: "restart grafana"
    service: "grafana.service"
  import_tasks: roles/_shared/tasks/service_check.yml
