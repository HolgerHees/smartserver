- name: set ferm version
  set_fact:
    ferm_version: "2.6"
  tags: [ 'update_notifier_configs' ]

- name: prepare needed folder
  file:
    path:  "{{item}}"
    state: directory
    owner: "root"
    group: "root"
    mode: 0750
  with_items:
    - "/etc/ferm"
    - "/etc/ferm/ferm.d"

- name: install required packages => is_suse
  zypper:
    name: [
      iptables
    ]
    state: present
  when: is_suse|bool

- name: install required packages => is_fedora
  yum:
    name: [
      perl-Pod-Html
      ,iptables
    ]
    state: present
  when: is_fedora|bool

- name: disable firewalld
  systemd:
    name: firewalld
    state: stopped
    daemon_reload: no
    enabled: no
    masked: no
  when: "'firewalld.service' in ansible_facts.services"

- name: "clone ferm git"
  git:
    repo: 'https://github.com/MaxKellermann/ferm'
    dest: '{{global_build}}ferm'
    version: 'v{{ferm_version}}'  
  register: ferm_git
  
- name: "install ferm"
  shell: "make install"
  args:
    chdir: "{{global_build}}ferm"
  when: "ferm_git.changed"

- name: copy ferm config and service
  template:
    src: "templates{{item.src}}"
    dest: "{{item.dest}}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { src: "/etc/systemd/ferm.service", dest: "/usr/lib/systemd/system/ferm.service" }
    - { src: "/etc/ferm/ferm.conf", dest: "/etc/ferm/ferm.conf" }
    - { src: "/etc/ferm/ferm.d/00-docker.ferm", dest: "/etc/ferm/ferm.d/00-docker.ferm" }
    - { src: "/etc/ferm/ferm.d/10-docker.ferm", dest: "/etc/ferm/ferm.d/10-docker.ferm" }
    - { src: "/etc/ferm/ferm.d/20-in.trusted.ferm", dest: "/etc/ferm/ferm.d/20-in.trusted.ferm" }
    - { src: "/etc/ferm/ferm.d/99-docker.ferm", dest: "/etc/ferm/ferm.d/99-docker.ferm" }
  notify: "restart ferm"

# ***** FINALIZE *****
- name: register systemd service watcher
  vars:
    name: "ferm"
  import_tasks: roles/systemd_watcher/tasks/add_watcher.yml

- name: register update notifier
  vars:
    name: "ferm"
    type: "github"
    url: "https://github.com/MaxKellermann/ferm/releases"
    config: { 
      project: "MaxKellermann/ferm", 
      pattern: "^v([0-9\\.]+)$",
      version: "v{{ferm_version}}" 
    }
  import_tasks: roles/update_notifier/tasks/add_notifier.yml

- name: trigger ferm handler
  command: "/bin/true"
  changed_when: "'ferm.service' not in ansible_facts.services or ansible_facts.services['ferm.service'].status == 'disabled'"
  notify: "restart ferm"
 
# nftables rule to filter fritzbox homeplug broadcasts
#table netdev filter {
#    chain ingress {
#        type filter hook ingress device eno1 priority 0; policy accept;
#        meta protocol {0x8912, 0x88e1} drop
#    }
#}

#/sbin/iptables -A INPUT -m mac --mac-source cc:ce:1e:ab:e8:44 -p all -j ACCEPT
#/sbin/iptables -A INPUT -m mac --mac-source cc:ce:1e:ab:e8:44 -j DROP

#- name: trigger ferm handler
#  vars:
#    notify: "restart ferm"
#    service: "ferm.service"
#  import_tasks: roles/_shared/tasks/service_check.yml
