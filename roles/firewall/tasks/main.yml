- name: check firewalld status
  shell: "systemctl is-active --quiet firewalld || systemctl is-enabled --quiet firewalld"
  register: "service_result"
  changed_when: no
  failed_when: no

- name: disable firewalld
  systemd:
    name: firewalld
    state: stopped
    daemon_reload: no
    enabled: no
    masked: yes
#  when: "'firewalld.service' in ansible_facts.services"
  when: "service_result.rc == 0"




# **** NFTABLES ****
- name: install required packages => is_suse
  zypper:
    name: [
      nftables
    ]
    state: present
  notify: "restart nftables"
  when: "is_suse"

- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "/etc/nftables" }
  include_tasks: roles/_shared/create_directories.yml

- name: copy nftables config
  template:
    src: "templates{{item.path}}"
    dest: "{{item.path}}"
    owner: root
    group: root
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rw,g=r,o=", path: "/etc/nftables/00_init.nft" }
    - { mode: "u=rwx,g=rx,o=", path: "/etc/modprobe.d/10-ansible-firewall.conf" } # block iptables
  notify: "restart nftables"

# ***** FINALIZE *****
- name: copy nftables service
  template:
    src: "templates{{item.src}}"
    dest: "{{item.dest}}"
    owner: root
    group: root
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rw,g=r,o=r", src: "/etc/systemd/nftables.service", dest: "/etc/systemd/system/nftables.service" }
  notify: "restart nftables"

- name: register systemd service watcher
  vars:
    watcher_name: "nftables"
  include_tasks: roles/systemd_watcher/shared/add_watcher.yml
  tags: ['systemd_watcher_config']
  when: "monitoring_enabled"

- name: trigger nftables handler
  vars:
    notify: "restart nftables"
    service: "nftables"
  include_tasks: roles/_shared/service_check.yml

- name: set sysctl network related values
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^{{item.regex}}\s*='
    line: '{{item.line}}'
  with_items:
    - { regex: "net\\.netfilter\\.nf_conntrack_max", line: "net.netfilter.nf_conntrack_max = 524288" }

    # https://security.stackexchange.com/questions/43205/nf-conntrack-table-full-dropping-packet
    # fix connection track table full, because of a denial of service

    #https://discuss.aerospike.com/t/how-to-handle-net-netfilter-nf-conntrack-count-max-exceeded/5051

    #net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60
    #net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 60
    #net.netfilter.nf_conntrack_tcp_timeout_time_wait = 60
    #net.netfilter.nf_conntrack_max = 524288
    #- { regex: "net\\.netfilter\\.nf_conntrack_generic_timeout", line: "net.netfilter.nf_conntrack_generic_timeout = 120" }
    #- { regex: "net\\.netfilter\\.nf_conntrack_sctp_timeout_established", line: "net.netfilter.nf_conntrack_sctp_timeout_established = 54000" }

    #sysctl -w net.netfilter.nf_conntrack_generic_timeout=120   => old was 600
    #sysctl -w net.netfilter.nf_conntrack_sctp_timeout_established=54000    => old was 432000
  register: sysctl_state

- name: refresh sysctl to activate netfilter changes => sysctl_state changed
  shell: "modprobe nf_conntrack && sysctl -p"
  when: "sysctl_state.changed"

