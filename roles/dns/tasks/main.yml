- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{ global_etc }}named"

- name: copy config
  template:
    src: "templates/etc/{{item}}"
    dest: "{{ global_etc }}named/{{item}}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "dnsmasq.conf"
    - "dnsmasq-hosts"
    - "resolv.dnsmasq.conf"

- name: build docker image
  vars:
    name: "named"
    image_name: "custom_named"
    image_version: "{{alpine_version}}"
    files:
      - roles/dns/templates/container/Dockerfile
  import_tasks: roles/container/tasks/build_docker_image.yml
  
- name: create docker container
  docker_container:
    name: named
    image: "custom_named:{{alpine_version}}"
    state: present
#    recreate: true
    env:
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: named
    networks:
      - name: "isolated"
        ipv4_address: "{{docker_dns_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{ global_etc }}named/dnsmasq-hosts:/etc/dnsmasq-hosts:z'
      - '{{ global_etc }}named/dnsmasq.conf:/etc/dnsmasq.conf:z'
      - '{{ global_etc }}named/resolv.dnsmasq.conf:/etc/resolv.dnsmasq.conf:z'
    published_ports:
      - "53:53/udp"
      - "53:53/tcp"
  notify: "restart named"

# ***** FINALIZE *****
- name: allow dns service
  vars:
    name: "dns"
    rules: [
      "saddr {{docker_dns_ip}} daddr {{dns1}}",
      "saddr {{docker_dns_ip}} daddr {{dns2}}"
    ]
    is_docker: True
  import_tasks: roles/firewall/tasks/allow_service.yml
  tags: [ 'firewall_config' ]

- name: create systemd service
  vars:
    container_name: "named"
  import_tasks: roles/container/tasks/add_docker_service.yml

- name: trigger named handler
  vars:
    notify: "restart named"
    service: "named.service"
  import_tasks: roles/base/tasks/service_check.yml
