- name: install required fedora packages
  yum:
    name: [
        bind
    ]
    state: present
  notify: "restart named"
  when: ansible_distribution == 'Fedora'

- name: install required suse packages
  zypper:
    name: [
        bind
      , yast2-dns-server
    ]
    state: present
  notify: "restart named"
  when: ansible_distribution == 'openSUSE Leap'
  
- name: copy config
  template:
    src: "roles/dns/templates/etc/named.conf"
    dest: "/etc/named.conf"
    owner: root
    group: named
    mode: 0640
  notify: "restart named"
  
- name: Create a symbolic link on fedora
  file:
    src: /var/named/
    dest: /var/lib/named
    owner: root
    group: named
    state: link
#    setype: "named_zone_t"
  when: ansible_distribution == 'Fedora'
  
- name: prepare master folder on fedora
  file:
    path: "/var/lib/named/{{item}}"
    state: directory
    owner: root
    group: named
    mode: 0770
#    setype: "named_zone_t"
  with_items:
    - master/
    - dyn/
  when: ansible_distribution == 'Fedora'
  
- name: copy var folder
  template:
    src: "roles/dns/templates/var/lib/named/{{item}}"
    dest: "/var/lib/named/{{item}}"
    owner: named
    group: named
    mode: 0640
#    setype: "named_conf_t"
  with_items:
    - "master/server_reverse.in-addr.arpa"
    - "master/server_forward"
    - "127.0.0.zone"
    - "localhost.zone"
    - "root.hint"
  notify: "restart named"
  
#- name: check named selinux configuration on fedora
#  shell: "ls -Z"
  
  
# https://wiki.samba.org/index.php/BIND9_DLZ_AppArmor_and_SELinux_Integration
#chcon -v --type=named_conf_t /etc/named.xxxx.zones
#chcon -v --user=system_u /etc/named.xxxx.zones  
- name: set named selinux configuration on fedora
  #       if [[ $(sudo ls -Z /var/lib/named/127.0.0.zone | grep var_lib_t | wc -c) -gt 0 ]]; then echo "1"; else echo "0"; fi
  shell: "if [[ $(ls -dZ {{item.path}} | grep {{item.type}} | wc -c) -eq 0 ]]; then semanage fcontext -a -t {{item.type}} {{item.path}}; echo \"1\"; else echo \"0\"; fi"
  with_items:
    - { type: "named_zone_t", path: "/var/lib/named" }
    - { type: "named_conf_t", path: "/var/named/127.0.0.zone" }
    - { type: "named_conf_t", path: "/var/named/localhost.zone" }
    - { type: "named_conf_t", path: "/var/named/root.hint" }
    - { type: "named_conf_t", path: "/var/named/master/server_forward" }
    - { type: "named_conf_t", path: "/var/named/master/server_reverse.in-addr.arpa" }
  register: selinux_config_exists
  changed_when: "selinux_config_exists.stdout == '1'"
  failed_when: "selinux_config_exists.stdout != '1' and selinux_config_exists.stdout != '0'"
  when: ansible_distribution == 'Fedora'
 
- name: reload selinux configuration on fedora
  shell: "restorecon {{item}}"
  with_items:
    - "/var/lib/named"
    - "-R -v /var/named"
  when: ansible_distribution == 'Fedora' and selinux_config_exists.changed

- name: set resolv config on fedora
  lineinfile:
    path: /etc/sysconfig/network-scripts/ifcfg-eth0
    regexp: '^[#]*{{item.field}}\s*='
    line: '{{item.field}}="{{item.value}}"'
  with_items:
    - { field: "PEERDNS", value: "no" }
    - { field: "DNS1", value: "127.0.0.1" }
    - { field: "SEARCH", value: "{{server_domain}}" }
  notify: "restart networkmanager"
  when: ansible_distribution == 'Fedora'

- name: set forwarder config on suse
  lineinfile:
    path: /etc/sysconfig/network/config
    regexp: '^[#]*NETCONFIG_DNS_FORWARDER\s*='
    line: 'NETCONFIG_DNS_FORWARDER="bind"'
  notify:
    - "refresh netconfig"
    - "restart named"
  when: ansible_distribution == 'openSUSE Leap'
