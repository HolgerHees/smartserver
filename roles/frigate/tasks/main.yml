- name: set version
  set_fact:
    frigate_version: '0.15.0'
    frigate_config: "{{ lookup('template', '{{config_path}}templates/frigate/config.yml') | from_yaml }}"
  tags: [ 'update_notifier_config' ]

- name: fetch old version
  shell: "cat {{global_etc}}frigate/config.yaml 2> /dev/null | grep -Po 'version:\\s+[0-9\\.-]+' | grep -Po '[0-9\\.-]+'"
  register: "frigate_version_string"
  changed_when: no
  failed_when: no

- name: prepare needed directories
  vars:
    directories: |
      [
        { "mode": "u=rwx,g=rx,o=", "owner": "root", "group": "root", "path": "{{ global_etc }}frigate/" },
        { "mode": "u=rwx,g=rx,o=", "owner": "root", "group": "root", "path": "{{ global_lib }}frigate/" },
        {% if tpu_enabled and tpu_type == 'hailo' %}
          { "mode": "u=rwx,g=rx,o=", "owner": "root", "group": "root", "path": "{{ global_lib }}frigate/model_cache/" },
          { "mode": "u=rwx,g=rx,o=", "owner": "root", "group": "root", "path": "{{ global_lib }}frigate/model_cache/h8l_cache/" },
        {% endif %}
      ]
  include_tasks: roles/_shared/create_directories.yml

- name: copy configs
  template:
    src: "{{item}}"
    dest: "{{global_etc}}frigate/{{item | basename}}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "templates/etc/frigate/config.yaml"
  notify: "restart frigate"

- name: copy model
  get_url:
    url: "https://hailo-model-zoo.s3.eu-west-2.amazonaws.com/ModelZoo/Compiled/v2.14.0/hailo8/yolov8s.hef"
    dest: "{{global_etc}}frigate/model_cache/h8l_cache/yolov8s.hef"
    owner: root
    group: root
    mode: 0640
  when: "tpu_enabled and tpu_type == 'hailo'"
  notify: "restart frigate"

- name: collect tpu devices
  shell: "ls -1 /dev/{% if tpu_type=='coral_pci' %}apex_*{% elif tpu_type=='hailo' %}hailo*{% endif %}"
  register: "frigate_tpu_string"
  changed_when: no
  failed_when: no
  when: "tpu_enabled and tpu_type in ['coral_pci','hailo']"

# ***** SERVICE CONFIGS *****
- name: create container service
  vars:
    container_name: "frigate"
    container_image: "ghcr.io/blakeblackshear/frigate:{{frigate_version}}{% if tpu_enabled and tpu_type=='hailo' %}-h8l{% endif %}"
    container_network: "isolated"
    container_ip: "{{podman_frigate_ip}}"
    container_privileged: "{{ true if tpu_enabled or (gpu_enabled and gpu_type == 'intel') else false }}"
    container_shm_size: "{{frigate_shm_size}}"
    container_memory: "{{frigate_max_memory_size}}"
    container_memory_swap: "{{frigate_max_memory_size}}"
#    container_published_ports:
#      - "8554" # RTSP feeds
#      - "8555/tcp" # WebRTC
#      - "8555/udp" # WebRTC
    container_exposed_ports:
      - "5000" # Internal unauthenticated access
      - "8971" # WebUI
      - "8554" # RTSP feeds
      - "8555" # WebRTC
    container_env: |
      {
        {% if frigate_plus_api_key is defined %}
          "PLUS_API_KEY": "{{frigate_plus_api_key}}",
        {% endif %}
      }
    container_devices: |
      [
          {% if gpu_enabled and gpu_type == 'nvidia' %}"nvidia.com/gpu=all"{% endif %}
      ]
    container_volumes: |
      [
        {% if (gpu_enabled and gpu_type == 'intel') or (tpu_enabled and tpu_type=='coral_usb') %}
          "/dev:/dev:rw",
        {% elif tpu_enabled %}
          {% for device in frigate_tpu_string.stdout_lines %}
            "{{device}}:{{device}}:rw",
          {% endfor %}
        {% endif %}
        "{{global_etc}}frigate:/config:rw",
        "{{global_lib}}frigate:/media/frigate:rw",
        {% if gpu_enabled and gpu_type == 'nvidia' %}"/usr/lib/libcuda.so:/usr/lib/libcuda.so:ro"{% endif %}
      ]
    container_mounts:
      - "type=tmpfs,tmpfs-size={{frigate_tmpfs_size}},destination=/tmp/cache"
    container_readyness: { "type": "port_check", "ip": "{{podman_frigate_ip}}", "port": "8971" }
  include_tasks: roles/container/shared/create_podman_service.yml
  tags: ['podman_container','systemd_watcher_config','systemd_service_config']

- name: allow container service
  vars:
    service_name: "frigate"
    container_to_container_rules:
      - { saddr: "{{podman_frigate_ip}}", daddr: "{{podman_mosquitto_ip}}", protocol: "tcp", dport: [ "1883", "9001" ], comment: "frigate => mosquitto" }
#      - { saddr: "{{podman_prometheus_ip}}", daddr: "{{podman_frigate_ip}}", protocol: "tcp", dport: "80", comment: "prometheus => frigate" }
    container_to_outside_rules:
      - { saddr: "{{podman_frigate_ip}}", comment: "frigate => all outgoing networks" }
#      - { saddr: "{{podman_frigate_ip}}", oif: "{{default_network_interface}}", comment: "frigate => all outgoing networks" }
#    nat_rules: { ip: "{{podman_frigate_ip}}", ports: ["8554","8555"] }
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: add service name
  vars:
    host_name: "frigate"
    host_ip_address: "{{podman_frigate_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

- name: register webui
  vars:
    name: "frigate"
    js_file: "templates/webui/frigate.js"
    i18n_files: [ { language: "de", file: "templates/webui/frigate.de.json" } ]
    icons: []
  include_tasks: roles/apache_webui/shared/add_webui.yml
  tags: ['apache_webui_config']

- name: copy apache vhost
  vars:
    sub_domain: "frigate"
    usergroup: "user"
    additional_env: yes
    include: "templates/etc/apache2/_.ansible.vhost.d/frigate.inc"
  include_tasks: roles/apache/shared/add_vhost.yml
  tags: ['apache_config']

#- name: copy service fluentd config
#  vars:
#    service_name: "frigate"
#  include_tasks: roles/shared_libs/shared/add_fluentd_service_config.yml
#  tags: ['fluentd_config']
#  when: "monitoring_enabled"

- name: register system package dependency
  vars:
    tag: "frigate"
    roles: ["hardware_gpu", "hardware_tpu"]
  include_tasks: roles/update_service/shared/add_dependency.yml
  tags: ['update_system_config']
  when: "update_service_system_check_enabled"

- name: register frigate update notifier
  vars:
    name: "frigate"
    type: "github"
    url: "https://github.com/blakeblackshear/frigate/releases"
    config: {
      project: "blakeblackshear/frigate",
      pattern: "^v([0-9\\.]+(-(rc|beta)[0-9]+)?)$",
      version: "v{{frigate_version}}"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"
