- name: set version
  set_fact:
    prometheus_version: '2.40.3'
  tags: [ 'update_notifier_config' ]    

- name: prepare needed folder
  file:
    path: '{{item.path}}'
    state: directory
    owner: "{{item.user}}"
    group: "{{item.group}}"
    mode: 0750
  with_items:
    - { user: "nobody", group: "{{ 'nobody' if is_fedora else 'nogroup'}}", path: "{{ global_lib }}prometheus" }
    - { user: "root", group: "root", path: "{{backup_path}}prometheus" }

#- name: copy config
#  template:
#    src: "templates/etc/prometheus.yml"
#    dest: "{{ global_etc }}prometheus/prometheus.yml"
#    owner: nobody
#    group: "{{ 'nobody' if is_fedora else 'nogroup'}}"
#    mode: 0640
#  notify: "restart prometheus"

- name: copy config
  copy:
    src: "templates/etc/prometheus/{{item.path}}"
    dest: "{{ global_etc }}prometheus/{{item.path}}"
    owner: "{{item.user}}"
    group: "{{item.group}}"
    mode: "{{item.mode}}"
  with_items:
    - { user: "nobody", group: "{{ 'nobody' if is_fedora else 'nogroup'}}", mode: "u=rw,g=r,o=", path: "rules/prometheus.yml" }
    - { user: "nobody", group: "{{ 'nobody' if is_fedora else 'nogroup'}}", mode: "u=rw,g=r,o=", path: "prometheus.yml.tpl" }
    - { user: "root", group: "root", mode: "u=rwx,g=rx,o=", path: "generator" }
  notify: "restart prometheus"

- name: set docker selinux configuration => is_fedora
  sefcontext:
    target: "{{ global_etc }}prometheus/generator"
    setype: "bin_t"
  register: sefcontext_result
  when: is_fedora|bool

- name: reload selinux configuration => is_fedora and sefcontext changed
  shell: "restorecon -irv {{ global_etc }}prometheus"
  when: is_fedora|bool and sefcontext_result.changed

- name: check started docker
  systemd:
    name: docker
    state: started

- name: create docker network
  vars:
    network_name: "prometheus"
    network_ip: "{{docker_prometheus_ip}}"
    network_internal: yes
  import_tasks: roles/container/tasks/add_docker_network.yml
  
- name: create docker container
  docker_container:
    name: prometheus
    image: "prom/prometheus:v{{prometheus_version}}"
    state: present
#    recreate: true
    env:
      TZ: "{{timezone}}"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--log.format=json"
    log_driver: journald
    log_options:
      tag: prometheus
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "prometheus"
        ipv4_address: "{{docker_prometheus_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{ global_etc }}prometheus:/etc/prometheus:z'
      - '{{ global_lib }}prometheus:/prometheus:z'
    exposed_ports:
     - "9090"
  notify: "restart prometheus"
  
- name: add container name
  vars:
    host_name: "prometheus"
    host_ip_address: "{{docker_prometheus_ip}}"
  import_tasks: roles/_shared/tasks/add_to_hosts.yml

# ***** FINALIZE *****
- name: allow prometheus service # needed to pull from openhab endpoint
  vars:
    name: "prometheus"
    rule: "proto tcp dport 443 saddr {{docker_prometheus_ip}}"
  import_tasks: roles/firewall/tasks/allow_service.yml
  tags: [ 'firewall_config' ]

- name: register grafana configs
  vars:
    name: "loki"
    datasources: 
      - "templates/grafana/datasources/prometheus.yaml"
  import_tasks: roles/grafana/tasks/add_datasource.yml

- name: register webui
  vars:
    name: "prometheus"
    js_file: "templates/webui/prometheus.js"
    i18n_files: [ { language: "de", file: "templates/webui/prometheus.de.json" } ]
    icons: [ 'templates/webui/icons/prometheus_logo.svg' ]
  import_tasks: roles/apache_webui/tasks/add_webui.yml

- name: copy apache vhost
  vars:
    sub_domain: "prometheus"
    usergroup: "admin"
    include: "templates/etc/apache2/_.ansible.vhost.d/prometheus.inc"
  import_tasks: roles/apache/tasks/add_vhost.yml

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/prometheus.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml
    
- name: create systemd service
  vars:
    container_name: "prometheus"
    container_pre_exec: "{{ global_etc }}prometheus/generator"
    container_routes:
      - { "subnet": "default", "gateway": "{{docker_prometheus_ip.split('.')[:3] | join('.')}}.1"}
    container_after: [ "alertmanager" ]
  import_tasks: roles/container/tasks/add_docker_service.yml
  
- name: register update notifier
  vars:
    name: "prometheus"
    type: "docker"
    url: "https://github.com/prometheus/prometheus/releases"
    config: {
      repository: "prom/prometheus",
      pattern: "^v([0-9\\.]+)$"
    }
  import_tasks: roles/update_service/tasks/add_software.yml

- name: trigger prometheus handler
  vars:
    notify: "restart prometheus"
    service: "prometheus.service"
  import_tasks: roles/_shared/tasks/service_check.yml
