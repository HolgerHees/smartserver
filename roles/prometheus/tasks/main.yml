- name: set version
  set_fact:
    prometheus_version: '3.4.0'
  tags: [ 'update_notifier_config' ]    

- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['nobody'].name}}", group: "{{system_groups['nobody'].name}}", path: "{{ global_lib }}prometheus" }
  include_tasks: roles/_shared/create_directories.yml

- name: copy config
  copy:
    src: "templates/{{item.src}}"
    dest: "{{item.dest}}"
    owner: "{{item.user}}"
    group: "{{item.group}}"
    mode: "{{item.mode}}"
  with_items:
    - { user: "{{system_users['nobody'].name}}", group: "{{system_groups['nobody'].name}}", mode: "u=rw,g=r,o=", src: "/etc/prometheus/prometheus.yml", dest: "{{ global_etc }}prometheus/prometheus.yml" }
    - { user: "{{system_users['nobody'].name}}", group: "{{system_groups['nobody'].name}}", mode: "u=rw,g=r,o=", src: "/etc/prometheus/rules/prometheus.yml", dest: "{{ global_etc }}prometheus/rules/prometheus.yml" }
  notify: "restart prometheus"

- name: check custom rules
  shell: "ls {{config_path}}templates/prometheus/rules.yml"
  register: custom_rules_result
  changed_when: no
  failed_when: no
  tags: ['prometheus_config']

- name: register custom rules
  vars:
    name: "custom"
    rules_file: "{{config_path}}templates/prometheus/rules.yml"
  include_tasks: roles/prometheus/shared/add_config.yml
  tags: ['prometheus_config']
  when: "monitoring_enabled and custom_rules_result.rc == 0"

- name: create container service
  vars:
    container_name: "prometheus"
    container_image: "prom/prometheus:v{{prometheus_version}}"
    container_command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=180d"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--log.format=json"
    container_network: "isolated"
    container_ip: "{{podman_prometheus_ip}}"
    container_exposed_ports:
     - "9090"
    container_volumes:
      - '{{ global_etc }}prometheus:/etc/prometheus:ro'
      - '{{ global_lib }}prometheus:/prometheus:rw'
    container_reload_exec: "/usr/bin/podman kill --signal=HUP prometheus"
    container_after: [ "alertmanager" ]
    container_readyness: { "type": "port_check", "ip": "{{podman_prometheus_ip}}", "port": "9090" }
  include_tasks: roles/container/shared/create_podman_service.yml
  tags: ['podman_container','systemd_watcher_config','systemd_service_config']

- name: allow container service
  vars:
    service_name: "prometheus"
    container_to_container_rules:
      - { saddr: "{{podman_prometheus_ip}}", daddr: "{{podman_alertmanager_ip}}", protocol: "tcp", dport: "9093", comment: "prometheus => alertmanager" }
    container_to_host_rules:
      - { saddr: "{{podman_prometheus_ip}}", protocol: "tcp", dport: "443", comment: "=> apache (openhab, netdata ...)" } # needed to pull from openhab, netdata or system_service endpoint, because they are bound to 127.0.0.1:xxxx
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: add container name
  vars:
    host_name: "prometheus"
    host_ip_address: "{{podman_prometheus_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

# ***** DEPENDENCY CONFIGS *****
- name: register grafana configs
  vars:
    name: "loki"
    datasources: 
      - "templates/grafana/datasources/prometheus.yaml"
  include_tasks: roles/grafana/shared/add_datasource.yml
  tags: ['grafana_config']
  when: "grafana_enabled"

- name: register webui
  vars:
    name: "prometheus"
    js_file: "templates/webui/prometheus.js"
    i18n_files: [ { language: "de", file: "templates/webui/prometheus.de.json" } ]
    icons: [ 'templates/webui/icons/prometheus_logo.svg' ]
  include_tasks: roles/apache_webui/shared/add_webui.yml
  tags: ['apache_webui_config']

- name: copy apache vhost
  vars:
    sub_domain: "prometheus"
    usergroup: "admin"
    include: "templates/etc/apache2/_.ansible.vhost.d/prometheus.inc"
  include_tasks: roles/apache/shared/add_vhost.yml
  tags: ['apache_config']

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/prometheus.conf"
  include_tasks: roles/fluentd/shared/add_config.yml
  tags: ['fluentd_config']
  when: "monitoring_enabled"

- name: register update notifier
  vars:
    name: "prometheus"
    type: "docker"
    url: "https://github.com/prometheus/prometheus/releases"
    config: {
      repository: "prom/prometheus",
      pattern: "^v([0-9\\.]+)$"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"

