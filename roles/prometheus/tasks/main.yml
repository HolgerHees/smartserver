- name: set version
  set_fact:
    prometheus_version: '2.51.0'
  tags: [ 'update_notifier_config' ]    

- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['nobody'].name}}", group: "{{system_groups['nobody'].name}}", path: "{{ global_lib }}prometheus" }
  include_tasks: roles/_shared/create_directories.yml

- name: copy config
  copy:
    src: "templates/etc/prometheus/{{item.path}}"
    dest: "{{ global_etc }}prometheus/{{item.path}}"
    owner: "{{item.user}}"
    group: "{{item.group}}"
    mode: "{{item.mode}}"
  with_items:
    - { user: "{{system_users['nobody'].name}}", group: "{{system_groups['nobody'].name}}", mode: "u=rw,g=r,o=", path: "prometheus.yml.tpl" }
    - { user: "{{system_users['nobody'].name}}", group: "{{system_groups['nobody'].name}}", mode: "u=rw,g=r,o=", path: "rules/prometheus.yml" }
    - { user: "{{system_users['nobody'].name}}", group: "{{system_groups['nobody'].name}}", mode: "u=rwx,g=rx,o=", path: "generator" }
  notify: "restart prometheus"

- name: check custom rules
  shell: "ls {{config_path}}templates/prometheus/rules.yml"
  register: custom_rules_result
  changed_when: no
  failed_when: no
  tags: ['prometheus_config']

- name: register custom rules
  vars:
    name: "custom"
    rules_file: "{{config_path}}templates/prometheus/rules.yml"
  include_tasks: roles/prometheus/shared/add_config.yml
  tags: ['prometheus_config']
  when: "monitoring_enabled and custom_rules_result.rc == 0"

- name: set docker selinux configuration => is_rhel or is_fedora
  sefcontext:
    target: "{{ global_etc }}prometheus/generator"
    setype: "bin_t"
  register: sefcontext_result
  when: is_rhel or is_fedora

- name: reload selinux configuration => (is_rhel or is_fedora) and sefcontext changed
  shell: "restorecon -irv {{ global_etc }}prometheus"
  when: (is_fedora or is_rhel) and sefcontext_result.changed

- name: check started docker
  systemd:
    name: docker
    state: started
  
- name: create docker container
  docker_container:
    name: prometheus
    image: "prom/prometheus:v{{prometheus_version}}"
    state: present
#    recreate: true
    env:
      TZ: "{{timezone}}"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--log.format=json"
    log_driver: journald
    log_options:
      tag: prometheus
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "isolated"
        ipv4_address: "{{docker_prometheus_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{ global_etc }}prometheus:/etc/prometheus:z'
      - '{{ global_lib }}prometheus:/prometheus:z'
    exposed_ports:
     - "9090"
  notify: "restart prometheus"
  
- name: allow prometheus service
  vars:
    name: "prometheus"
    rules:
      - "saddr {{docker_prometheus_ip}} daddr {{docker_alertmanager_ip}}"
      - "saddr {{docker_prometheus_ip}} daddr {{default_server_ip}} proto tcp dport 443" # needed to pull from openhab, netdata or system_service endpoint, because they are bound to 127.0.0.1:xxxx
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: add container name
  vars:
    host_name: "prometheus"
    host_ip_address: "{{docker_prometheus_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

# ***** FINALIZE *****
- name: register grafana configs
  vars:
    name: "loki"
    datasources: 
      - "templates/grafana/datasources/prometheus.yaml"
  include_tasks: roles/grafana/shared/add_datasource.yml
  tags: ['grafana_config']
  when: "grafana_enabled"

- name: register webui
  vars:
    name: "prometheus"
    js_file: "templates/webui/prometheus.js"
    i18n_files: [ { language: "de", file: "templates/webui/prometheus.de.json" } ]
    icons: [ 'templates/webui/icons/prometheus_logo.svg' ]
  include_tasks: roles/apache_webui/shared/add_webui.yml
  tags: ['apache_webui_config']

- name: copy apache vhost
  vars:
    sub_domain: "prometheus"
    usergroup: "admin"
    include: "templates/etc/apache2/_.ansible.vhost.d/prometheus.inc"
  include_tasks: roles/apache/shared/add_vhost.yml
  tags: ['apache_config']

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/prometheus.conf"
  include_tasks: roles/fluentd/shared/add_config.yml
  tags: ['fluentd_config']
  when: "monitoring_enabled"
    
- name: create systemd service
  vars:
    container_name: "prometheus"
    container_pre_exec: "{{ global_etc }}prometheus/generator"
    container_after: [ "alertmanager" ]
  include_tasks: roles/container/shared/add_docker_service.yml
  tags: ['systemd_watcher_config']
  
- name: register update notifier
  vars:
    name: "prometheus"
    type: "docker"
    url: "https://github.com/prometheus/prometheus/releases"
    config: {
      repository: "prom/prometheus",
      pattern: "^v([0-9\\.]+)$"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"

- name: trigger prometheus handler
  vars:
    notify: "restart prometheus"
    service: "prometheus.service"
  include_tasks: roles/_shared/service_check.yml
