#!/usr/bin/python3

import sys

import logging
import requests

from config import config


handler = logging.StreamHandler(sys.stdout)

logging.basicConfig(
    handlers = [handler],
    level=logging.INFO,
    datefmt="%d.%m.%Y %H:%M:%S"
)

cmd = ""
if len(sys.argv) >= 2:
    cmd = sys.argv[1]
    
if cmd == "status":
    result = requests.get("http://{}:{}/status/".format(config.service_ip, config.service_port))
    print(result.text)
    exit(0)
elif cmd == "clean":
    result = requests.get("http://{}:{}/clean/".format(config.service_ip, config.service_port))
    print(result.text)
    exit(0)
elif cmd == "stop":
    result = requests.get("http://{}:{}/stop/".format(config.service_ip, config.service_port))
    print(result.text)
    exit(0)
elif cmd == "start" or cmd == "restart":
    if cmd == "restart":
        if len(sys.argv) == 3:
            start_os = sys.argv[2]
        else:
            logging.error(u"Missing type:\n\nUsage: ./ci_service restart <os>|failed|all")
            exit(1)
    else:
        start_os = "all"
    result = requests.post("http://{}:{}/start/".format(config.service_ip, config.service_port), data={"cmd": cmd, "start_os": start_os })
    print(result.text)
    exit(0)
elif cmd != "":
    logging.error(u"Unknown command: '{}'\n\nUsage: ./ci_service <start|restart|stop|clean|status>".format(cmd))
    exit(1)
else:
    logging.error(u"Missing command:\n\nUsage: ./ci_service <start|restart|stop|clean|status>")
    exit(1)
