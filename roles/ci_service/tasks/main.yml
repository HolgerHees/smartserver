- name: install required packages => is_fedora
  yum:
    name: virtualbox
    state: present
  when: is_fedora|bool
  notify: "restart virtualbox" 

- name: install required packages => is_ubuntu
  apt:
    name: virtualbox
    state: present
  when: is_ubuntu|bool
  notify: "restart virtualbox" 

- name: install required packages => is_suse
  zypper:
    name: [
      virtualbox
      , libncurses5
    ]
    state: present
  when: is_suse|bool
  notify: "restart virtualbox" 
  
#- name: install required python pip modules
#  pip: 
#    name: PyGithub
#    executable: pip3 

- name: prepare needed folder
  file:
    path: "{{item.path}}"
    state: directory
    owner: root
    group: root
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rwx,g=rx,o=", path: "/opt/ci_service" }
    - { mode: "u=rwx,g=rx,o=", path: "{{global_build}}ci_job" }
    - { mode: "u=rwx,g=rx,o=rx", path: "{{global_log}}ci" }

- name: install vagrant binary
  unarchive:
    src: "https://releases.hashicorp.com/vagrant/2.2.16/vagrant_2.2.16_linux_amd64.zip"
    dest: "/opt/ci_service"
    remote_src: yes
    creates: "/opt/ci_service/vagrant"
    owner: root
    group: root
    mode: 0750

- name: copy config
  template:
    src: "templates/opt/ci_service/config/config.py"
    dest: "/opt/ci_service/config/config.py"
    owner: root
    group: root
    mode: 0750

- name: copy ci libs
  copy:
    src: "templates/opt/ci_service/lib"
    dest: "/opt/ci_service"
    owner: root
    group: root
    mode: 0750

- name: copy ci tool
  template:
    src: "templates/opt/ci_service/{{item}}"
    dest: "/opt/ci_service/{{item}}"
    owner: root
    group: root
    mode: 0750
  with_items:
    - ci_job_handler
    - server
    
- name: copy webui
  copy:
    src: "templates/htdocs/ci"
    dest: "{{htdocs_path}}"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0750
  tags: ['apache_webui_page']

- name: copy webui config
  template:
    src: "templates/config.php"
    dest: "{{htdocs_path}}ci/config.php"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0750
  tags: ['apache_webui_page']

- name: register webui
  vars:
    name: "ci_service"
    js_file: "templates/webui/ci_service.js"
    i18n_files: [ { language: "de", file: "templates/webui/ci_service.de.json" } ]
    icons: [ 'templates/webui/icons/ci_service_logo.svg' ]
  import_tasks: roles/apache_webui/tasks/add_webui.yml

- name: create check cron job
  vars:
    name: "Continues integration job"
    cmd: "/opt/ci_service/ci_job_handler  start > /dev/null"
    file: "ansible_ci_service"
    minute: "*/5"
  import_tasks: roles/cron/tasks/add_cronjob.yml
  when: "is_production|bool"
  
- name: create cleanup cron job
  vars:
    name: "Continues integration cleanup"
    cmd: "ls -1t {{global_log}}ci/*.log | tail -n +50 | xargs rm -f"
    file: "ansible_ci_service"
    hour: "0"
    minute: "40"
  import_tasks: roles/cron/tasks/add_cronjob.yml

# ***** FINALIZE *****
- name: "create systemd service"
  template:
    src: "templates/etc/systemd/system/ci_service.service"
    dest: "/etc/systemd/system/ci_service.service"
    owner: root
    group: root
    mode: 0644
  notify: "restart ci_service"
 
- name: register systemd service watcher
  vars:
    name: "ci_service"
  import_tasks: roles/systemd_watcher/tasks/add_watcher.yml

- name: register service watcher
  vars:
    name: "vboxdrv"
  import_tasks: roles/systemd_watcher/tasks/add_watcher.yml

- name: trigger vboxdrv handler
  vars:
    notify: "restart virtualbox"
    service: "vboxdrv.service"
    process: "lsmod | grep vbox"
  import_tasks: roles/_shared/tasks/service_process_check.yml
  
- name: trigger ci_service handler
  vars:
    notify: "restart ci_service"
    service: "ci_service.service"
  import_tasks: roles/_shared/tasks/service_check.yml
