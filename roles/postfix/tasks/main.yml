- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{ global_etc }}postfix"

- name: copy config
  template:
    src: "templates/etc/postfix/{{item}}"
    dest: "{{ global_etc }}postfix/{{item}}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "main.cf"
    - "canonical_maps_recipient"
  notify: "restart postfix"

- name: build docker image
  vars:
    name: "postfix"
    image_name: "custom_postfix"
    image_version: "{{alpine_version}}"
    files:
      - roles/postfix/templates/container/Dockerfile
      - roles/postfix/templates/container/entrypoint.sh
  include_tasks: roles/container/shared/build_docker_image.yml

- name: create docker container
  docker_container:
    name: postfix
    image: "custom_postfix:{{alpine_version}}"
    state: present
#    recreate: true
    env:
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: postfix
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "isolated"
        ipv4_address: "{{docker_postfix_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{ global_etc }}postfix/main.cf:/etc/postfix/main.cf:z'
      - '{{ global_etc }}postfix/canonical_maps_recipient:/etc/postfix/canonical_maps_recipient:z'
    exposed_ports:
      - "25/tcp"
  notify: "restart postfix"

- name: allow postfix service
  vars:
    name: "postfix"
    rules:
      - "saddr {{docker_prometheus_ip}} daddr {{docker_postfix_ip}}"
      - "saddr {{docker_postfix_ip}} proto tcp dport {{vault_mailserver_port}} outerface {{default_network_interface}}"
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: [ 'firewall_config' ]

- name: add container name
  vars:
    host_name: "postfix"
    host_ip_address: "{{docker_postfix_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

# SET LOCAL SMTP CLIENT
- name: install postfix packages => is_rhel or is_fedora
  yum:
    name: postfix
    state: absent
  when: is_rhel or is_fedora

- name: install required packages => is_rhel or is_fedora
  yum:
    name: msmtp
    state: present
  when: is_rhel or is_fedora

- name: install postfix packages => is_ubuntu
  apt:
    name: postfix
    state: absent
  when: is_ubuntu

- name: install required packages => is_ubuntu
  apt:
    name: msmtp
    state: present
  when: is_ubuntu

- name: remove postfix packages => is_suse
  zypper:
    name: postfix
    state: absent
  when: is_suse

- name: add zypper repository => is_suse
  zypper_repository:
    name: Mail (msmtp)
    repo: "https://download.opensuse.org/repositories/server:/mail/{{ansible_distribution_version}}/"
#    repo: "https://download.opensuse.org/repositories/server:/mail/$releasever/"
    auto_import_keys: yes
    priority: "100"
    state: present
  when: "is_suse"

- name: install required packages => is_suse
  zypper:
    name: msmtp
    state: present
  when: is_suse
  
- name: set runtime link
  file:
    src: "/usr/bin/msmtp"
    dest: "/usr/sbin/sendmail"
    state: link
    follow: no
    owner: root
    group: root
  
- name: copy config
  template:
    src: "templates/etc/msmtprc"
    dest: "/etc/msmtprc"
    owner: root
    group: root
    mode: 0644

# ***** FINALIZE *****
- name: register prometheus rules & metrics
  vars:
    name: "postfix"
    rules_file: "templates/prometheus/rules.yml"
    scrape_file: "templates/prometheus/scrape.yml"
  include_tasks: roles/prometheus/shared/add_config.yml
  when: "monitoring_enabled"

- name: register loki rules
  vars:
    name: "postfix"
    rules_file: "templates/loki/rules.yml"
  include_tasks: roles/loki/shared/add_config.yml
  when: "monitoring_enabled"

- name: create systemd service
  vars:
    container_name: "postfix"
  include_tasks: roles/container/shared/add_docker_service.yml

- name: create cron 'ping' job
  vars:
    name: "Daily Ping"
    cmd: "printf \"Subject: Daily test message\\nThis is a test message to confirm that mail delivery is working\" | /usr/sbin/sendmail root"
    file: "ansible_postfix"
    hour: "1"
    minute: "0"
  include_tasks: roles/cron/shared/add_cronjob.yml

- name: register systemd service watcher
  vars:
    name: "postfix"
  include_tasks: roles/systemd_watcher/shared/add_watcher.yml
  when: "monitoring_enabled"

- name: register system package dependency
  vars:
    tag: "postfix"
    packages: [ "postfix" ]
  include_tasks: roles/update_service/shared/add_dependency.yml
  when: "update_service_system_check_enabled"

- name: trigger postfix handler
  vars:
    notify: "restart postfix"
    service: "postfix.service"
  include_tasks: roles/_shared/service_check.yml
