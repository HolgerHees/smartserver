- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{ global_etc }}postfix" }
  include_tasks: roles/_shared/create_directories.yml

- name: copy config
  template:
    src: "templates/etc/postfix/{{item}}"
    dest: "{{ global_etc }}postfix/{{item}}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "main.cf"
    - "canonical_maps_recipient"
  notify: "restart postfix"

- name: build container image
  vars:
    container_name: "postfix"
    image_name: "custom_postfix:{{alpine_version}}"
    image_files:
      - roles/postfix/templates/container/Dockerfile
    entrypoint_startup:
      - "newaliases"
      - "rm -f /var/spool/postfix/pid/*.pid"
      - "/build/postfix_exporter/postfix_exporter --postfix.logfile_path /dev/stdout --web.listen-address :80 2>&1 &"
      - "postfix -c /etc/postfix start-fg 2>&1 &"
  include_tasks: roles/container/shared/build_podman_image.yml
  tags: ['container_entrypoint_config']

- name: create container service
  vars:
    container_name: "postfix"
    container_image: "custom_postfix:{{alpine_version}}"
    container_network: "isolated"
    container_ip: "{{podman_postfix_ip}}"
    container_exposed_ports:
      - "25/tcp"
    container_volumes:
      - '{{global_etc}}letsencrypt:/etc/letsencrypt:rw'
      - '{{global_etc}}postfix/main.cf:/etc/postfix/main.cf:ro'
      - '{{global_etc}}postfix/canonical_maps_recipient:/etc/postfix/canonical_maps_recipient:ro'
    container_readyness: { "type": "port_check", "ip": "{{podman_postfix_ip}}", "port": "25" }
  include_tasks: roles/container/shared/create_podman_service.yml
  tags: ['podman_container','systemd_watcher_config','systemd_service_config']

- name: allow container service
  vars:
    service_name: "postfix"
    container_to_container_rules:
      - { saddr: "{{podman_prometheus_ip}}", daddr: "{{podman_postfix_ip}}", protocol: "tcp", dport: "80", comment: "prometheus => postfix" }
    container_to_outside_rules:
      - { saddr: "{{podman_postfix_ip}}", protocol: "tcp", dport: "{{mailserver_port}}", oif: "{{default_network_interface}}", comment: "postfix => extern mailserver" }
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: add container name
  vars:
    host_name: "postfix"
    host_ip_address: "{{podman_postfix_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

# SET LOCAL SMTP CLIENT
- name: install postfix packages => is_rhel or is_fedora
  yum:
    name: postfix
    state: absent
  when: is_rhel or is_fedora

- name: install required packages => is_rhel or is_fedora
  yum:
    name: msmtp
    state: present
  when: is_rhel or is_fedora

- name: install postfix packages => is_ubuntu
  apt:
    name: postfix
    state: absent
  when: is_ubuntu

- name: install required packages => is_ubuntu
  apt:
    name: msmtp
    state: present
  when: is_ubuntu

- name: remove postfix packages => is_suse
  zypper:
    name: postfix
    state: absent
  when: is_suse

- name: add zypper repository => is_suse
  zypper_repository:
    name: Mail (msmtp)
    repo: "https://download.opensuse.org/repositories/server:/mail/{{'' if ansible_distribution_version == '15.5' else 'openSUSE_Leap_'}}$releasever/"
#    repo: "https://download.opensuse.org/repositories/server:/mail/$releasever/"
    auto_import_keys: yes
    priority: "100"
    state: present
  when: "is_suse"

- name: install required packages => is_suse
  zypper:
    name: msmtp
    state: present
  when: is_suse
  
- name: set runtime link
  file:
    src: "/usr/bin/msmtp"
    dest: "/usr/sbin/sendmail"
    state: link
    follow: no
    owner: root
    group: root
  
# ***** DEPENDENCY CONFIGS *****
- name: copy config
  template:
    src: "templates/etc/msmtprc"
    dest: "/etc/msmtprc"
    owner: root
    group: root
    mode: 0644

# ***** FINALIZE *****
- name: register prometheus rules & metrics
  vars:
    name: "postfix"
    rules_file: "templates/prometheus/rules.yml"
    scrape_file: "templates/prometheus/scrape.yml"
  include_tasks: roles/prometheus/shared/add_config.yml
  tags: ['prometheus_config']
  when: "monitoring_enabled"

- name: register loki rules
  vars:
    name: "postfix"
    rules_file: "templates/loki/rules.yml"
  include_tasks: roles/loki/shared/add_config.yml
  tags: ['loki_config']
  when: "monitoring_enabled"

- name: create cron 'ping' job
  vars:
    name: "Daily Ping"
    cmd: "printf \"Subject: Daily test message\\nThis is a test message to confirm that mail delivery is working\" | /usr/sbin/sendmail root"
    group: "postfix"
    subgroup: "test"
    hour: "1"
    minute: "0"
  include_tasks: roles/cron/shared/add_cronjob.yml
  tags: ['cron_job']

- name: register system package dependency
  vars:
    tag: "postfix"
    packages: [ "postfix" ]
  include_tasks: roles/update_service/shared/add_dependency.yml
  tags: ['update_system_config']
  when: "update_service_system_check_enabled"
