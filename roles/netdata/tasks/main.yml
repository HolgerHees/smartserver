- name: install required packages => is_fedora
  yum:
    name: [
        netdata
      , fping
    ]
    state: present
  notify: "restart netdata"
  when: is_fedora|bool

- name: add zypper repository => is_suse
  zypper_repository:
    name: Network (netdata)
    repo: "http://download.opensuse.org/repositories/network/openSUSE_Leap_{{ansible_distribution_version}}/"
    auto_import_keys: yes
    priority: "100"
    state: present
  when: is_suse|bool

- name: install required packages => is_suse
  zypper:
    name: [
        netdata>=1.18.1
      , fping
      # needed to rebuild rpm package
      #, rpm-build
      #, cups-devel
      #, judy-devel
      #, libcap-devel
      #, liblz4-devel
      #, libmnl-devel
      #, libnetfilter_acct-devel
      #, libuv-devel
      #, freeipmi-devel
    ]
    state: present
  notify: "restart netdata"
  when: is_suse|bool

- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{ global_lib }}netdata"
    - "{{ global_lib }}netdata/cache"
    #- "/etc/netdata/custom-plugins.d"
    - "/etc/netdata/health.d"
    - "/opt/netdata_helper"

- name: prepare missing folder => is_fedora
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "/var/run/netdata"
    - "/usr/lib64/netdata/"
    - "/usr/lib64/netdata/conf.d/"
  when: is_fedora|bool

- name: copy config
  template:
    src: "templates{{item}}"
    dest: "{{item}}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "/etc/netdata/netdata.conf"
    - "/etc/netdata/python.d.conf"
    - "/etc/netdata/health_alarm_notify.conf"
    - "/etc/netdata/fping.conf"
    - "/etc/netdata/.environment"
    - "/etc/netdata/health.d/disks.conf"
    - "/etc/netdata/health.d/softnet.conf"
    - "/etc/netdata/health.d/net.conf"
    - "/etc/netdata/health.d/fping.conf"
  notify: "restart netdata"

- name: copy helper
  template:
    src: "templates{{item}}"
    dest: "{{item}}"
    owner: root
    group: root
    mode: 750
  with_items:
    - "/opt/netdata_helper/send_notification.sh"
    - "/opt/netdata_helper/inform_openhab"

- name: change runtime user
  lineinfile:
    path: /usr/lib/systemd/system/netdata.service
    insertafter: '^\[Service\]'
    regexp: '^{{item.field}}\s*='
    line: '{{item.field}}={{item.value}}'
  with_items:
    - { field: "User", value: "root" }
    #- { field: "CPUSchedulingPolicy", value: "other" } # was "idle" before
    #- { field: "Nice", value: "0" } # was "#Nice=0" before
  notify: "restart netdata"

# ***** DATABASE ****
- name: check influxdb data
  stat:
    path: "{{ global_lib }}influxdb/data/opentsdb"
  register: influxdb_data_exists
  changed_when: not influxdb_data_exists.stat.exists

- name: check influxdb service => database does not exists
  import_tasks: roles/influxdb/tasks/wait_until_ready.yml
  when: "not influxdb_data_exists.stat.exists"

- name: create missing influx databases => database does not exists
  shell: "docker exec influxdb sh -c \"influx -execute 'CREATE DATABASE opentsdb'\""
  when: "not influxdb_data_exists.stat.exists"

- name: create retention policy
  vars:
    database: "opentsdb"
  import_tasks: roles/influxdb/tasks/create_retention_policy.yml
  when: "not influxdb_data_exists.stat.exists"

# ***** OTHER *****
- name: register webui
  vars:
    name: "netdata"
    js_file: "templates/webui/netdata.js"
    i18n_files: [ { language: "de", file: "templates/webui/netdata.de.json" } ]
    listener: { "sub_domain": "netdata", "js_file": "templates/webui/netdata.listener.js" }
  import_tasks: roles/apache_webui/tasks/add_webui.yml

- name: copy apache vhost
  vars:
    sub_domain: "netdata"
    include: "templates/etc/apache2/_.ansible.vhost.d/netdata.inc"
  import_tasks: roles/apache/tasks/add_vhost.yml

- name: register systemd service watcher
  vars:
    name: "netdata"
  import_tasks: roles/systemd_watcher/tasks/add_watcher.yml

- name: create cron job
  vars:
    name: "Influxdb OpenTSDB Backup"
    cmd: "docker exec influxdb sh -c \"influxd backup -database opentsdb /var/lib/influxdb_backup/opentsdb_$(date +\\%Y-\\%m-\\%d)/ > /dev/null\""
    file: "ansible_netdata"
    hour: "1"
    minute: "0"
  import_tasks: roles/cron/tasks/add_cronjob.yml

- name: create cron job
  vars:
    name: "Netdata error check"
    cmd: "/opt/netdata_helper/inform_openhab"
    file: "ansible_netdata"
  import_tasks: roles/cron/tasks/add_cronjob.yml
  
- name: register update notifier
  vars:
    name: "netdata"
    type: "github"
    url: "https://github.com/netdata/netdata/releases"
    config: { 
      project: "netdata/netdata", 
      pattern: "^v([0-9\\.]+)$",
      version: "v1.20.0" 
    }
  import_tasks: roles/update_notifier/tasks/add_notifier.yml
