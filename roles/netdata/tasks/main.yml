- name: set version
  set_fact:
    netdata_version: "1.41.0"
  tags: [ 'update_notifier_config' ]

- name: add netdata repository => is_rhel or is_fedora
  yum_repository:
    name: netdata
    description: Netdata repository
    priority: "100"
    baseurl: https://packagecloud.io/netdata/netdata/{{'el' if is_rhel else 'fedora'}}/{{ansible_distribution_major_version if is_rhel else ansible_distribution_version}}/$basearch/
  when: is_rhel|bool or is_fedora|bool

- name: install required packages => is_rhel or is_fedora
  yum:
    name: [
#      "netdata"
      "netdata-{{netdata_version}}-1.{{'el' if is_rhel else 'fc'}}{{ansible_distribution_major_version if is_rhel else ansible_distribution_version}}"
      , lm_sensors
    ]
    state: present
    disable_gpg_check: true
  notify: "restart netdata"
  when: is_rhel|bool or is_fedora|bool

- name: add netdata gpg key => is_ubuntu
  apt_key:
    url: https://packagecloud.io/netdata/netdata/gpgkey
    state: present
  when: is_ubuntu|bool

- name: install netdata repository => is_ubuntu
  apt_repository:
    repo: "deb [arch=amd64] https://packagecloud.io/netdata/netdata/ubuntu/ {{ansible_distribution_release}} main"
    state: present
  when: is_ubuntu|bool

- name: install required packages => is_ubuntu
  apt:
    name: [
#      "netdata"
      "netdata={{netdata_version}}"
      , lm-sensors
    ]
    state: present
  notify: "restart netdata"
  when: is_ubuntu|bool

- name: add zypper repository => is_suse
  zypper_repository:
    name: "Netdata"
    repo: "https://packagecloud.io/netdata/netdata/opensuse/{{ansible_distribution_version}}/x86_64/"
    auto_import_keys: yes
    priority: "100"
    state: present
  register: netdata_repo
  when: is_suse|bool

- name: import zypper gpg key => is_suse
  shell: "zypper --gpg-auto-import-keys ref"
  when: "is_suse|bool and netdata_repo.changed"

- name: install required packages => is_suse
  zypper:
    name: [
#      "netdata"
      "netdata-{{netdata_version}}-1"
      , sensors
      # needed to rebuild rpm package
      #, rpm-build
      #, cups-devel
      #, judy-devel
      #, libcap-devel
      #, liblz4-devel
      #, libmnl-devel
      #, libnetfilter_acct-devel
      #, libuv-devel
      #, freeipmi-devel
    ]
    state: present
  notify: "restart netdata"
  when: is_suse|bool

- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{ global_lib }}netdata"
    - "{{ global_lib }}netdata/cache"
    - "/etc/netdata/custom-plugins.d"
    - "/etc/netdata/health.d"

- name: prepare missing folder => is_rhel or is_fedora
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "/var/run/netdata"
    - "/usr/lib64/netdata/"
    - "/usr/lib64/netdata/conf.d/"
  when: is_rhel|bool or is_fedora|bool

- name: synchronize config
  synchronize:
    src: "templates/etc/netdata/"
    dest: "/etc/netdata/"
    archive: no
    checksum: yes
    group: yes
    owner: yes
    perms: yes
    recursive: yes
    rsync_opts:
      - "--chown=root:root"
      - "--chmod=D750,F640"
  notify: "restart netdata"
      
- name: copy config
  vars:
    netdata_container: no
  template:
    src: "templates/{{item}}"
    dest: "/etc/netdata/{{item}}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - "netdata.conf"
  notify: "restart netdata"

- name: copy helper
  template:
    src: "templates{{item}}"
    dest: "{{item}}"
    owner: root
    group: root
    mode: 0750
  with_items:
    - "/opt/scripts/netdata_to_alertmanager"

- name: change service config
  lineinfile:
    path: /usr/lib/systemd/system/netdata.service
    insertafter: '^\[Service\]'
    regexp: '^{{item.field}}'
    line: '{{item.value}}'
  with_items:
    - { field: "User\\s*=", value: "User=root" }
    #- { field: "ReadWriteDirectories\\s*=\\s*{{ global_lib }}netdata", value: "ReadWriteDirectories={{ global_lib }}netdata" }
    #- { field: "CPUSchedulingPolicy", value: "other" } # was "idle" before
    #- { field: "Nice", value: "0" } # was "#Nice=0" before
  notify: "restart netdata"

# ***** INFLUXDB DATABASE ****
#- name: create database
#  vars:
#    database: "opentsdb"
#    retentions:
#      - { retention: "14d" }
#      - { retention: "90d", name: "090d", interval: "5m", every: "6h" }
#      - { retention: "360d", name: "360d", interval: "15m", every: "12h" }
#      - { retention: "0", name: "999d", interval: "1h", every: "1d" }
#    backup: yes
#  import_tasks: roles/influxdb/shared/add_bucket.yml
  
# ***** OTHER *****
#- name: register grafana configs
#  vars:
#    name: "netdata"
#    datasources:
#      - "templates/grafana/datasources/opentsdb_influxdb.yaml"
#    dashboards:
#      - "templates/grafana/dashboards/Server Health.json"
#  import_tasks: roles/grafana/shared/add_datasource.yml

- name: register webui
  vars:
    name: "netdata"
    js_file: "templates/webui/netdata.js"
    i18n_files: [ { language: "de", file: "templates/webui/netdata.de.json" } ]
    listener: { "sub_domain": "netdata", "js_file": "templates/webui/netdata.listener.js" }
    icons: [ 'templates/webui/icons/netdata_logo.svg' ]
  import_tasks: roles/apache_webui/shared/add_webui.yml

- name: copy apache vhost
  vars:
    sub_domain: "netdata"
    usergroup: "admin"
    include: "templates/etc/apache2/_.ansible.vhost.d/netdata.inc"
  import_tasks: roles/apache/shared/add_vhost.yml

- name: create cron job
  vars:
    name: "Netdata error check"
    cmd: "/opt/scripts/netdata_to_alertmanager"
    file: "ansible_netdata"
    minute: "*/5"
  import_tasks: roles/cron/shared/add_cronjob.yml
  
# ***** FINALIZE *****
- name: register prometheus metrics
  vars:
    name: "netdata"
    scrape_file: "templates/prometheus/scrape.yml"
  import_tasks: roles/prometheus/shared/add_config.yml

- name: register systemd service watcher
  vars:
    name: "netdata"
  import_tasks: roles/systemd_watcher/shared/add_watcher.yml

- name: register system package dependency
  vars:
    tag: "netdata"
    packages: [ "netdata" ]
  import_tasks: roles/update_service/shared/add_dependency.yml

- name: register update notifier
  vars:
    name: "netdata"
    type: "github"
    url: "https://github.com/netdata/netdata/releases"
    config: {
      project: "netdata/netdata",
      pattern: "^v([0-9\\.]+)$",
      version: "v{{netdata_version}}"
    }
  import_tasks: roles/update_service/shared/add_software.yml

- name: trigger netdata handler
  vars:
    notify: "restart netdata"
    service: "netdata.service"
  import_tasks: roles/_shared/service_check.yml
