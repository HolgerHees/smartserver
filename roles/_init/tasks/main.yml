#- name: debug
#  debug: msg="{{ hostvars }}"
#  tags: always
  
- name: read service facts
  service_facts:
  tags: always
      
# set config path based on hostname
- name: set config path
  set_fact:
    config_path: "config/{{inventory_hostname}}/"
  tags: always

# load initial environment variables
- name: load env vars
  include_vars: "{{config_path}}env.yml"
  tags: always
  
# detect main ip. must be specified in env.yml
- name: detect ip address
  set_fact:
    host_ip: "{{ item }}"
  with_items: "{{ ansible_all_ipv4_addresses }}"
  when: "item == production_ip or item == staging_ip"
  tags: always
    
# check for a valid main ip
- assert:
    that: host_ip is defined
    msg: "No valid ip found. Allowed are: production ({{ production_ip if production_ip else 'disabled' }}), staging ({{ staging_ip if staging_ip else 'disabled' }})"

# load vault file
- name: load vault vars
  include_vars: "{{config_path}}vault/vault.yml"
  tags: always
  
# set environment specific variables [pre]
- name: set pre state vars
  set_fact:
    is_suse: "{{ansible_distribution == 'openSUSE Leap'}}"
    is_fedora: "{{ansible_distribution == 'Fedora'}}"
    is_production: "{{host_ip == production_ip}}"
  tags: always
  
# load shared variables
- name: load shared vars
  include_vars: "config/shared.yml"
  tags: always
  
# set environment specific variables [post]
- name: set post state vars
  set_fact:
    local_import_path: "{{playbook_dir}}/{{config_path}}backup/"
  tags: always

- name: register user_id map
  set_fact:
    system_users: {}

- name: register group_id map
  set_fact:
    system_groups: {}
