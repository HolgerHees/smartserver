- name: set version
  set_fact:
    pihole_version: '2024.01.0'
  tags: [ 'update_notifier_config' ]

- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: "999"
    group: "1000"
    mode: 0770
  with_items:
    - "{{ global_etc }}pihole"
    - "{{ global_etc }}pihole/dnsmasq.d/"

- name: generate static-dhcp.conf
  block:
    - name: write static dhcp file
      template:
        src: templates/etc/pihole/dnsmasq.d/04-pihole-static-dhcp.conf
        dest: "{{global_etc}}pihole/dnsmasq.d/04-pihole-static-dhcp.conf"
        owner: "999"
        group: "1000"
      register: dhcp_changed

    - name: revoke existing leases if dhcpd file changed
      file:
        path: "{{global_etc}}pihole/dhcp.leases"
        state: absent
      when: dhcp_changed.changed

    - name: revoke existing leases if dhcpd file changed
      file:
        path: "{{global_etc}}pihole/dhcp.leases"
        state: touch
      when: dhcp_changed.changed
  when: dhcp_type == 'pihole'

- name: generate custom.list (local DNS records)
  template:
    src: templates/etc/pihole/custom.list
    dest: "{{global_etc}}pihole/custom.list"
    owner: "999"
    group: "1000"
  notify: restart pihole
  when: dns_type == 'pihole'

- name: check started docker
  systemd:
    name: docker
    state: started

- name: prepare pihole networks
  set_fact:
    pihole_networks: |
      {
        "name": "macvlan",
        "ipv4_address": "{{pihole_ip}}"
        {% if pihole_ipv6 is defined %}
            , "ipv6_address": "{{pihole_ipv6}}"
        {% endif %}
      }

- name: prepare pihole environment variables
  set_fact:
    pihole_env: |
      {
        "TZ": "{{timezone}}",
        "WEBPASSWORD": "{{vault_pihole_password}}",
        "DNS1": "127.0.0.11",
        "DNS2": "no"
        {% if dns_type == 'pihole' %}
            , "DNS_BOGUS_PRIV": "true"
            , "DNS_FQDN_REQUIRED": "true"
            , "REV_SERVER": "false"
            , "REV_SERVER_DOMAIN": "{{dns_default_domain}}"
            , "REV_SERVER_TARGET": "{{default_server_gateway}}"
            , "REV_SERVER_CIDR": "{{host_server_network}}"
            , "PIHOLE_DOMAIN": "{{dns_default_domain}}"
        {% endif %}
        {% if dhcp_type == 'pihole' %}
            , "DHCP_ACTIVE": "true"
            , "DHCP_START": "{{dhcp_range_start}}"
            , "DHCP_END": "{{dhcp_range_end}}"
            , "DHCP_ROUTER": "{{default_server_gateway}}"
            , "DHCP_LEASETIME": "24"
        {% endif %}
      }

- name: create docker container
  docker_container:
    name: pihole
    image: "pihole/pihole:{{pihole_version}}"
    state: present
#    recreate: true
    env: "{{pihole_env}}"
    capabilities:
      - net_admin
    log_driver: journald
    log_options:
      tag: pihole
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - "{{pihole_networks}}"
    networks_cli_compatible: yes
    volumes:
      - '{{ global_etc }}pihole/:/etc/pihole/:z'
      - '{{ global_etc }}pihole/dnsmasq.d/:/etc/dnsmasq.d/:z'
    exposed_ports:
      - "53/tcp"
      - "53/udp"
    # - "67:67/udp"
      - "80/tcp"
      - "443/tcp"
  notify: "restart pihole"

# ***** FINALIZE *****
- name: register webui
  vars:
    name: "pihole"
    js_file: "templates/webui/pihole.js"
    i18n_files: [ { language: "de", file: "templates/webui/pihole.de.json" } ]
    icons: [ 'templates/webui/icons/pihole_logo.svg' ]
  include_tasks: roles/apache_webui/shared/add_webui.yml

- name: create cron job
  vars:
    name: "Pihole update"
    cmd: "docker exec pihole pihole updateGravity > /dev/null"
    file: "ansible_pihole"
    hour: "1"
    minute: "0"
  include_tasks: roles/cron/shared/add_cronjob.yml

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/pihole.conf"
  include_tasks: roles/fluentd/shared/add_config.yml
  when: "monitoring_enabled"

- name: create systemd service
  vars:
    container_name: "pihole"
  include_tasks: roles/container/shared/add_docker_service.yml

- name: register update notifier
  vars:
    name: "pihole"
    type: "docker"
    url: "https://github.com/pi-hole/docker-pi-hole/releases"
    config: {
      repository: "pihole/pihole",
      pattern: "^(20[0-9\\.]+)$"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  when: "update_service_software_check_enabled"

- name: trigger pihole handler
  vars:
    notify: "restart pihole"
    service: "pihole.service"
  include_tasks: roles/_shared/service_check.yml
