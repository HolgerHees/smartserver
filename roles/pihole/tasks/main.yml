- name: set version
  set_fact:
    pihole_version: '2022.08.2'
  tags: [ 'update_notifier_config' ]
  
- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: "999"
    group: "999"
    mode: 0770
  with_items:
    - "{{ global_etc }}pihole"
    - "{{ global_etc }}pihole/dnsmasq.d/"
    
- name: check started docker
  systemd:
    name: docker
    state: started

- name: set production facts
  set_fact:
    pihole_network_mode: "default"
    pihole_networks:
      - name: "macvlan"
        ipv4_address: "{{pihole_ip}}"
    pihole_exposed_ports:
      - "53/tcp"
      - "53/udp"
    # - "67:67/udp"
      - "80/tcp"
      - "443/tcp"
  when: is_production

# needed, because macvlan in a VM has no internet access, but pihole needs internet access during startup
- name: set staging facts
  set_fact:
    pihole_network_mode: "host"
    pihole_networks: []
    pihole_exposed_ports: []
  when: not is_production

- name: create docker container
  docker_container:
    name: pihole
    image: "pihole/pihole:{{pihole_version}}"
    state: present
#    recreate: true
    env:
      TZ: "{{timezone}}"
      WEBPASSWORD: "{{vault_pihole_password}}"
      DNS1: "127.0.0.11"
      DNS2: "no"
    #capabilities:
    #  - NET_ADMIN
    log_driver: journald
    log_options:
      tag: pihole
    container_default_behavior: "compatibility"
    network_mode: "{{pihole_network_mode}}"
    networks: "{{pihole_networks}}"
    networks_cli_compatible: yes
    volumes:
      - '{{ global_etc }}pihole/:/etc/pihole/:z'
      - '{{ global_etc }}pihole/dnsmasq.d/:/etc/dnsmasq.d/:z'
    exposed_ports: "{{pihole_exposed_ports}}"
  notify: "restart pihole"

# ***** FINALIZE *****
- name: register webui
  vars:
    name: "pihole"
    js_file: "templates/webui/pihole.js"
    i18n_files: [ { language: "de", file: "templates/webui/pihole.de.json" } ]
    icons: [ 'templates/webui/icons/pihole_logo.svg' ]
  import_tasks: roles/apache_webui/tasks/add_webui.yml

- name: create cron job
  vars:
    name: "Pihole update"
    cmd: "docker exec pihole pihole updateGravity > /dev/null"
    file: "ansible_pihole"
    hour: "1"
    minute: "0"
  import_tasks: roles/cron/tasks/add_cronjob.yml

- name: create systemd service
  vars:
    container_name: "pihole"
  import_tasks: roles/container/tasks/add_docker_service.yml

- name: register update notifier
  vars:
    name: "pihole"
    type: "docker"
    url: "https://github.com/pi-hole/docker-pi-hole/releases"
    config: {
      repository: "pihole/pihole",
      pattern: "^(20[0-9\\.]+)$"
    }
  import_tasks: roles/update_service/tasks/add_software.yml

- name: trigger pihole handler
  vars:
    notify: "restart pihole"
    service: "pihole.service"
  import_tasks: roles/_shared/tasks/service_check.yml
