- name: set version
  set_fact:
    pihole_version: '2025.08.0'
  tags: [ 'update_notifier_config' ]

- name: "create user and group => user or group does not exists"
  vars:
    user: { name: "pihole", system: true, home: "{{ global_etc }}pihole/" }
    group: { name: "pihole", system: true }
  include_tasks: roles/user/shared/add_system_user.yml
  when: "'pihole' not in system_users or 'pihole' not in system_groups"

- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=rx", owner: "{{system_users['pihole'].name}}", group: "{{system_groups['pihole'].name}}", path: "{{ global_etc }}pihole/" }
      - { mode: "u=rwx,g=rx,o=rx", owner: "{{system_users['pihole'].name}}", group: "{{system_groups['pihole'].name}}", path: "{{ global_etc }}pihole/dnsmasq.d/" }
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['pihole'].name}}", group: "{{system_groups['pihole'].name}}", path: "{{ global_lib }}pihole/" }
  include_tasks: roles/_shared/create_directories.yml

- name: generate static-dhcp.conf
  block:
    - name: write static dhcp file
      template:
        src: templates/etc/pihole/dnsmasq.d/04-pihole-static-dhcp.conf
        dest: "{{global_etc}}pihole/dnsmasq.d/04-pihole-static-dhcp.conf"
        owner: "{{system_users['pihole'].name}}"
        group: "{{system_groups['pihole'].name}}"
        mode: 0640
      register: dhcp_changed

    - name: revoke existing leases if dhcpd file changed
      file:
        path: "{{global_etc}}pihole/dhcp.leases"
        state: absent
      when: dhcp_changed.changed

    - name: revoke existing leases if dhcpd file changed
      file:
        path: "{{global_etc}}pihole/dhcp.leases"
        state: touch
      when: dhcp_changed.changed
  when: "dhcp_enabled and dhcp_type == 'pihole'"

- name: generate custom.list (local DNS records)
  template:
    src: templates/etc/pihole/custom.list
    dest: "{{global_etc}}pihole/custom.list"
    owner: "{{system_users['pihole'].name}}"
    group: "{{system_groups['pihole'].name}}"
    mode: 0640
  notify: restart pihole
  when: "dns_enabled and dns_type == 'pihole'"

- name: create container service
  vars:
    container_name: "pihole"
    container_image: "pihole/pihole:{{pihole_version}}"
    container_capabilities:
      - net_admin
    container_network: "macvlan"
    container_dns:
      - "{{default_server_ip}}"
    container_ip: "{{pihole_ip}}"
    container_ip6: "{{pihole_ipv6 if pihole_ipv6 is defined else ''}}"
    container_shm_size: "128m"
    container_exposed_ports:
      - "53/tcp"
      - "53/udp"
    # - "67:67/udp"
      - "80/tcp"
      - "443/tcp"
    container_no_healthcheck: yes # disable healthcheck, because systemd is watching processes. Additionally it is producing startup errors related to not successful first healthcheck.
    #healthcheck: "dig +short +norecurse +retry=0 @127.0.0.1 pi.hole || exit 1"
    #healthcheck_start_period: 30s
    #healthcheck_timeout: 30s
    #healthcheck_interval: 30s
#        REPLY_ADDR4=0.0.0.0
#        LOCAL_IPV4=0.0.0.0

#   , "DNS_FQDN_REQUIRED": "true"
#   , "REV_SERVER": "false"
#   , "REV_SERVER_DOMAIN": "{{dns_default_domain}}"
#   , "REV_SERVER_TARGET": "{{default_server_gateway}}"
#   , "REV_SERVER_CIDR": "{{host_server_network}}"
#   , "PIHOLE_DOMAIN": "{{dns_default_domain}}"
#   https://docs.pi-hole.net/docker/upgrading/v5-v6/

    container_env: |
      {
        "TZ": "{{timezone}}",
        "PIHOLE_UID": "{{system_users['pihole'].id}}",
        "PIHOLE_GID": "{{system_groups['pihole'].id}}",

        "FTLCONF_webserver_api_password": "{{pihole_password}}",
        "FTLCONF_dns_upstreams": "{{default_server_ip}}",

        "FTLCONF_files_database": "/var/lib/pihole/pihole-FTL.db",
        "FTLCONF_files_gravity": "/var/lib/pihole/gravity.db",
        "FTLCONF_files_macvendor": "/var/lib/pihole/macvendor.db",
        "FTLCONF_dns_rateLimit_count": "0",
        "FTLCONF_dns_rateLimit_interval": "0",

        "ADDITIONAL_PACKAGES": "sqlite"

        {% if dns_enabled and dns_type == 'pihole' %}
            , "FTLCONF_dns_bogusPriv": "true"
            , "FTLCONF_dns_domainNeeded": "true"
            , "FTLCONF_dns_revServers": "true,{{host_server_network}},{{default_server_gateway}},{{dns_default_domain}}"
            , "FTLCONF_dns_domain": "{{dns_default_domain}}"
        {% endif %}
        {% if dhcp_enabled and dhcp_type == 'pihole' %}
            , "FTLCONF_dhcp_active": "true"
            , "FTLCONF_dhcp_start": "{{dhcp_range_start}}"
            , "FTLCONF_dhcp_end": "{{dhcp_range_end}}"
            , "FTLCONF_dhcp_router": "{{default_server_gateway}}"
            , "FTLCONF_dhcp_leaseTime": "24"
        {% endif %}
      }
    container_volumes:
      # 'etc' must be writeable
      - '{{ global_etc }}pihole/:/etc/pihole:rw'
      - '{{ global_etc }}pihole/dnsmasq.d/:/etc/dnsmasq.d:rw'
      - '{{ global_lib }}pihole/:/var/lib/pihole:rw'
    container_readyness: { "type": "port_check", "ip": "{{pihole_ip}}", "port": "80" }
  include_tasks: roles/container/shared/create_podman_service.yml
  tags: ['podman_container','systemd_watcher_config','systemd_service_config']

# ***** DEPENDENCY CONFIGS *****
- name: register webui
  vars:
    name: "pihole"
    js_file: "templates/webui/pihole.js"
    i18n_files: [ { language: "de", file: "templates/webui/pihole.de.json" } ]
    icons: [ 'templates/webui/icons/pihole_logo.svg' ]
  include_tasks: roles/apache_webui/shared/add_webui.yml
  tags: ['apache_webui_config']

- name: create cron job
  vars:
    name: "Pihole update"
    cmd: "podman exec pihole pihole updateGravity > /dev/null"
    group: "pihole"
    subgroup: "update"
    hour: "1"
    minute: "0"
  include_tasks: roles/cron/shared/add_cronjob.yml
  tags: ['cron_job']

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/pihole.conf"
  include_tasks: roles/fluentd/shared/add_config.yml
  tags: ['fluentd_config']
  when: "monitoring_enabled"

- name: register update notifier
  vars:
    name: "pihole"
    type: "docker"
    url: "https://github.com/pi-hole/docker-pi-hole/releases"
    config: {
      repository: "pihole/pihole",
      pattern: "^(20[0-9\\.]+)$"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"

- name: instant activate pihole
  systemd:
    name: pihole
    state: started
    daemon_reload: yes
  when: "podman_service_container_changed"

