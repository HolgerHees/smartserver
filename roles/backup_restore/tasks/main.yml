- name: mount backup import folder
  mount:
    path: "{{local_backup_path}}import"
    src: "{{local_import_path}}"
    opts: bind
    state: mounted
    fstype: none

# **** MYSQL ****
- name: check mysql backup folder
  shell: "docker exec mysql sh -c \"ls /var/lib/mysql_backup/import/mysql\""
  register: mysql_backup_exists
  changed_when: mysql_backup_exists.rc == 0
  
- name: check mysql service
  import_tasks: roles/mysql/tasks/wait_until_ready.yml
  when: mysql_backup_exists.rc == 0

- name: import nextcloud database
  shell: "docker exec mysql sh -c \"bzcat /var/lib/mysql_backup/import/mysql/nextcloud* | mysql -u root -h 127.0.0.1 nextcloud\""
  when: mysql_backup_exists.rc == 0

# force a rebuild of cached files like merged js and css files
- name: clean nextcloud database
  shell: "docker exec mysql sh -c \"mysql -u root -h 127.0.0.1 -e 'DELETE FROM nextcloud.oc_filecache WHERE path LIKE 'appdata%';'\""
  when: mysql_backup_exists.rc == 0

- name: import openhab database
  shell: "docker exec mysql sh -c \"bzcat /var/lib/mysql_backup/import/mysql/openhab* | mysql -u root -h 127.0.0.1 openhab\""
  when: mysql_backup_exists.rc == 0

# **** INFLUXDB ****      
- name: check influxdb backup folder
  shell: "docker exec influxdb sh -c \"ls /var/lib/influxdb_backup/import/influxdb\""
  register: influxdb_backup_exists
  changed_when: influxdb_backup_exists.rc == 0
  
- name: check influxdb service
  import_tasks: roles/influxdb/tasks/wait_until_ready.yml
  when: influxdb_backup_exists.rc == 0
  
# ??? check if this is enough or if we need to import metadata from opentsdb too
- name: import influxdb metadata backup
  shell: "docker exec influxdb sh -c \"influxd restore -metadir /var/lib/influxdb/meta /var/lib/influxdb_backup/import/influxdb/openhab*\""
  when: influxdb_backup_exists.rc == 0 and 'openhab' in influxdb_backup_exists.stdout
  
- name: import influxdb openhab backup
  shell: "docker exec influxdb sh -c \"influxd restore -db openhab_db -newdb openhab_db -datadir /var/lib/influxdb/data /var/lib/influxdb_backup/import/influxdb/openhab*\""
  when: influxdb_backup_exists.rc == 0 and 'openhab' in influxdb_backup_exists.stdout

- name: import influxdb opentsdb backup
  shell: "docker exec influxdb sh -c \"influxd restore -db opentsdb -newdb opentsdb -datadir /var/lib/influxdb/data /var/lib/influxdb_backup/import/influxdb/opentsdb*\""
  when: influxdb_backup_exists.rc == 0 and 'opentsdb' in influxdb_backup_exists.stdout
  
# **** OPENHAB MAPDB ****
- name: check openhab mapdb backup folder
  stat:
    path: "{{local_import_path}}openhab/mapdb"
  register: mapdb_backup_exists
  changed_when: mapdb_backup_exists.stat.exists

- name: check openhab is stopped
  systemd:
    name: openhab
    state: stopped
  when: mapdb_backup_exists.stat.exists
  
- name: import openhab mapdb backup
  copy:
    src: "{{local_import_path}}openhab/mapdb"
    dest: "{{global_lib}}openhab/"
    owner: root
    group: root
    mode: 0640
  notify: "restart openhab"
  when: mapdb_backup_exists.stat.exists

- name: unmount backup import folder
  mount:
    path: "{{local_backup_path}}import"
    state: unmounted
