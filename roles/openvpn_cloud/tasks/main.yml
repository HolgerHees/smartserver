# **** CLOUD VPN SHARED KEY - check ****
- name: check shared key
  stat:
    path: /etc/openvpn/cloud_shared.key
  register: shared_key_file
  changed_when: not shared_key_file.stat.exists

- name: check for vault shared key file => is_production and shared_key_file does not exists
  stat:
    path: "{{config_path}}vault/openvpn/cloud_shared.key"
  register: shared_key_file_from_vault
  changed_when: shared_key_file_from_vault.stat.exists
  when: is_production and not shared_key_file.stat.exists

- name: decide to create or restore openvpn shared key
  set_fact: 
    openvpn_shared_key_mode: "{% if shared_key_file_from_vault.stat is defined and shared_key_file_from_vault.stat.exists %}vault{% elif not shared_key_file.stat.exists %}create{% endif %}"
  changed_when: not shared_key_file.stat.exists

# **** CLOUD VPN SHARED KEY - process ****
- name: generate shared key => openvpn_shared_key_mode == 'create'
  shell: "openvpn --genkey --secret /etc/openvpn/cloud_shared.key"
  notify: "restart openvpn@cloud"
  when: "openvpn_shared_key_mode == 'create'"
    
- name: copy shared keys => openvpn_shared_key_mode == 'vault'
  copy:
    src: "{{config_path}}vault/openvpn/cloud_shared.key"
    dest: "/etc/openvpn/cloud_shared.key"
    decrypt: yes
    owner: root
    group: root
    mode: 0600
  notify: "restart openvpn@cloud"
  when: "openvpn_shared_key_mode == 'vault'"

# **** CONFIGS ****
- name: copy config
  template:
    src: "roles/openvpn_cloud/templates/{{ 'cloud.conf' if vpn_type == 'master' else 'cloud.remove.conf' }}"
    dest: "/etc/openvpn/cloud.conf"
    owner: root
    group: root
    mode: 0640
  notify: "restart openvpn@cloud"
  
- name: set selinux cloud port configuration => is_fedora
  seport:
    ports: "{{vault_server_vpn_port_cloud}}"
    proto: tcp
    setype: openvpn_port_t
    state: present
  notify: "restart openvpn@cloud"
  when: is_fedora|bool
