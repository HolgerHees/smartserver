- name: set version
  set_fact:
    alpine_version: "3.11.6"
  tags: [ 'update_notifier_configs' ]
  
- name: prepare config folder
  file:
    path: "{{item}}"
    state: directory
    owner: "root"
    group: "root"
    mode: 700
  with_items:
    - "{{global_etc}}wireguard_mobile"
    - "{{global_etc}}wireguard_mobile/util"
    - "{{global_etc}}wireguard_mobile/keys"
    - "{{global_etc}}wireguard_mobile/clients"
    
- name: copy keys => is_production
  copy:
    src: "{{item}}"
    dest: "{{global_etc}}wireguard_mobile/keys/{{item|basename}}"
    decrypt: yes
    owner: root
    group: root
    mode: 0600
  with_fileglob: "{{config_path}}vault/wireguard_mobile/*"
  when: is_production
  
- name: copy util
  template:
    src: "roles/wireguard_mobile/templates/util/{{item}}"
    dest: "{{global_etc}}wireguard_mobile/util/{{item}}"
    owner: root
    group: root
    mode: 0700
  with_items:
    - wg-startup.sh
  notify: "restart wireguard_mobile"

- name: check started docker
  systemd:
    name: docker
    state: started

- name: check docker image exists
  shell: "docker images custom_wireguard_mobile:{{alpine_version}}"
  register: image_exists
  changed_when: "'custom_wireguard_mobile' not in image_exists.stdout"
  
- name: prepare build folder
  file:
    path: "{{global_build}}wireguard_mobile/"
    state: directory
    owner: root
    group: root
    mode: 0750
  when: "'custom_wireguard_mobile' not in image_exists.stdout"
  
- name: copy dockerfiles
  template:
    src: "roles/wireguard_mobile/templates/container/{{item}}"
    dest: "{{global_build}}wireguard_mobile/{{item}}"
    owner: root
    group: root
    mode: 0750
  with_items:
    - Dockerfile
  when: "'custom_wireguard_mobile' not in image_exists.stdout"
  
# async docker build is used to show progress and prevent travisci killing our job because of inactivity
- name: compose docker image => image does not exists
  shell: "docker build -t custom_wireguard_mobile:{{alpine_version}} {{global_build}}wireguard_mobile/"
  async: 600
  poll: 0
  register: docker_build
  when: "'custom_wireguard_mobile' not in image_exists.stdout"

- name: wait for docker image => image does not exists
  async_status: jid={{ docker_build.ansible_job_id }}
  register: job_result
  until: job_result.finished
  retries: 10
  delay: 60
  when: "'custom_wireguard_mobile' not in image_exists.stdout"
  
- name: create docker container
  docker_container:
    name: wireguard_mobile
    image: "custom_wireguard_mobile:{{alpine_version}}"
    state: present
    network_mode: "host"
#    recreate: true
    env:
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: custom_wireguard_mobile
    capabilities:
      - NET_ADMIN
      - SYS_MODULE
    volumes:
      - '{{global_etc}}wireguard_mobile:/etc/wireguard:z'
  notify: "restart wireguard_mobile"

#- name: clean old docker images => image does not exists
#  shell: "docker rmi -f $(docker images --filter \"dangling=true\" -q)"
#  when: "'custom_wireguard_mobile' not in image_exists.stdout"
  
# ***** FINALIZE *****
- name: create systemd service
  vars:
    container_name: "wireguard_mobile"
  import_tasks: roles/container/tasks/add_docker_service.yml

- name: register update notifier
  vars:
    name: "wireguard_mobile"
    type: "docker"
    url: "https://alpinelinux.org/"
    config: {
      repository: "alpine",
      pattern: "^([0-9]{1,2}\\.[0-9\\.]+)$" 
    }
  import_tasks: roles/update_notifier/tasks/add_notifier.yml

- name: trigger service check handler
  vars:
    notify: "restart wireguard_mobile"
    service: "wireguard_mobile.service"
  import_tasks: roles/base/tasks/service_check.yml
