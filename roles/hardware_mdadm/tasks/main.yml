- name: check if raid exists
  stat:
    path: "/etc/mdadm.conf"
  register: mdraid
  tags: [ "loki_config" ]

- name: install required packages => is_rhel or is_fedora
  yum:
    name: "mdadm"
    state: present
  notify: "restart mdmonitor"
  when: mdraid.stat.exists and is_rhel or is_fedora
  
- name: install required packages => is_ubuntu
  apt:
    name: "mdadm"
    state: present
  notify: "restart mdmonitor"
  when: mdraid.stat.exists and is_ubuntu

- name: install required packages => is_suse
  zypper:
    name: "mdadm"
    state: present
  notify: "restart mdmonitor"
  when: mdraid.stat.exists and is_suse
  
- name: copy event script
  template:
    src: "templates/mdevents.sh"
    dest: "/opt/scripts/hardware_mdadm_mdevents.sh"
    owner: root
    group: root
    mode: 0750
  when: mdraid.stat.exists

- name: set config
  lineinfile:
    path: "/etc/sysconfig/{{ 'mdadm' if is_suse else 'mdmonitor' }}"
    regexp: '^{{item.field}}\s*='
    line: '{{item.field}}="{{item.value}}"'
    create: true
    owner: root
    group: root
    mode: 0640
  with_items:
    - { field: 'MDADM_DELAY', value: '60' }
    - { field: 'MDADM_MAIL', value: '' }
    - { field: 'MDADM_RAIDDEVICES', value: '/dev/md0' }
    - { field: 'MDADM_SCAN', value: 'yes' }
    - { field: 'MDADM_SEND_MAIL_ON_START', value: 'yes' }
    - { field: 'MDADM_DEVICE_TIMEOUT', value: '60' }
    - { field: 'MDADM_CHECK_DURATION', value: '2 hours' }
    - { field: 'MDADM_PROGRAM', value: '/opt/scripts/hardware_mdadm_mdevents.sh' }
  notify: "restart mdmonitor"
  when: mdraid.stat.exists

#- name: disable default check cron jobs
#  file: 
#    path: "/etc/{{ 'cron.d/mdadm' if is_suse else 'cron.weekly/raid-check' }}"
#    state: absent
#  when: mdraid.stat.exists

#- name: set cron job env
#  cron:
#    name: PATH
#    env: yes
#    value: /sbin:/usr/sbin:/bin:/usr/bin
#    cron_file: ansible_mdadm
#    user: root
#  tags: "cron_job"
#  when: mdraid.stat.exists
    
#- name: create cron 'start' job
#  vars:
#    name: "RAID Check (Start)"
#    cmd: "/usr/share/mdadm/mdcheck --duration 2 hours"
#    file: "ansible_mdadm"
#    day: "1-7"
#    weekday: "7"
#    hour: "1"
#    minute: "0"
#  include_tasks: roles/cron/shared/add_cronjob.yml
#  when: mdraid.stat.exists

#- name: create cron 'continue' job
#  vars:
#    name: "RAID Check (Continue)"
#    cmd: "/usr/share/mdadm/mdcheck --continue --duration 2 hours"
#    file: "ansible_mdadm"
#    weekday: "1-6"
#    hour: "1"
#    minute: "0"
#  include_tasks: roles/cron/shared/add_cronjob.yml
#  when: mdraid.stat.exists

# ***** FINALIZE *****
- name: register prometheus rules & metrics
  vars:
    name: "mdmonitor"
    rules_file: "templates/prometheus/rules.yml"
  include_tasks: roles/prometheus/shared/add_config.yml
  when: "monitoring_enabled and mdraid.stat.exists"

- name: register loki rules
  vars:
    name: "mdmonitor"
    rules_file: "templates/loki/rules.yml"
  include_tasks: roles/loki/shared/add_config.yml
  when: "monitoring_enabled and mdraid.stat.exists"

- name: register systemd service watcher
  vars:
    name: "mdmonitor"
  include_tasks: roles/systemd_watcher/shared/add_watcher.yml
  when: "monitoring_enabled and mdraid.stat.exists"

- name: trigger mdmonitor handler
  vars:
    notify: "restart mdmonitor"
    service: "mdmonitor.service"
  include_tasks: roles/_shared/service_check.yml
  when: mdraid.stat.exists
