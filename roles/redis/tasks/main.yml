- name: prepare folder
  file:
    path: "{{redis_socket_path}}"
    state: directory
    owner: root
    group: root
    mode: 0777
    
- name: check started docker
  systemd:
    name: docker
    state: started
    
- name: check docker image exists
  shell: "docker images custom_redis:1.0.0"
  register: image_exists
  changed_when: "'custom_redis' not in image_exists.stdout"
  
- name: compose docker image => image does not exists
  shell: "docker build -t custom_redis:1.0.0 roles/redis/templates/container/"
  register: output
  when: "'custom_redis' not in image_exists.stdout"
  
#- name: debug
#  debug:
#    var: output

- name: create docker container
  docker_container:
    name: redis
    image: custom_redis:1.0.0
    state: present
    network_mode: "none"
#    recreate: true
    log_driver: journald
    log_options:
      tag: redis
    volumes:
      - '{{redis_socket_path}}:/var/run/redis:z'
  notify: "restart redis"

#- name: clean old docker images => image does not exists
#  shell: "docker rmi -f $(docker images --filter \"dangling=true\" -q)"
#  when: "'custom_redis' not in image_exists.stdout"
  
- name: create systemd service
  vars:
    container_name: "redis"
  import_tasks: roles/container/tasks/add_docker_service.yml
