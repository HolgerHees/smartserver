- name: set version
  set_fact:
    #elastalert_version: '325f1dfe7a45f3ca2a2cc00127ab71fcd4f9cead' # => master of 25.11. 'v0.2.1'
    elastalert_version: 'v0.2.4'
  tags: [ 'update_notifier_configs' ]    

- name: prepare needed folder
  file:
    path: '/etc/elastalert/'
    state: directory
    owner: root
    group: root
    mode: 0750

- name: install required packages => is_fedora
  yum:
    name: [
      python3-boto3
      , python-dateutil 
      , python3-devel
    ]
    state: present
  notify: "restart elastalert"
  when: is_fedora|bool

- name: install required packages => is_suse
  zypper:
    name: [
      python3-boto3
      , python3-python-dateutil 
      , python3-devel
    ]
    state: present
  notify: "restart elastalert"
  when: is_suse|bool
  
#- name: install required python pip modules
#  pip: 
#    name: [
#      #- aws-requests-auth
#      PyYAML
#    ]
#    extra_args: "--ignore-installed"
#    executable: pip3 
#  with_items:
#  notify: "restart elastalert"
  
- name: copy config and service
  template:
    src: "templates{{item.path}}"
    dest: "{{item.path}}"
    owner: root
    group: root
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rw,g=r,o=", path: "/etc/elastalert/config.yaml" }
    - { mode: "u=rw,g=r,o=", path: "/etc/elastalert/rule.yaml" }
    - { mode: "u=rw,g=r,o=r", path: "/etc/systemd/system/elastalert.service" }
  notify: "restart elastalert"

- name: "clone git"
  git:
#    accept_hostkey: yes
    repo: 'https://github.com/Yelp/elastalert.git'
    dest: '{{global_build}}elastalert'
#    force: yes
    version: '{{elastalert_version}}'
  register: clone_status
  #changed_when: yes
#- debug: msg={{clone_status}}

- name: check if elastalert is installed
  shell: command -v elastalert >/dev/null 2>&1
  register: is_elastalert_exist
  failed_when: no
  changed_when: is_elastalert_exist.rc == 1

- name: "install => clone status changed"
  shell: '{{ item }}'
  args:
    chdir: '{{global_build}}elastalert'
  with_items:
    - 'pip3 install aws-requests-auth'
    - 'pip3 install --ignore-installed PyYAML'
    - 'pip3 install --upgrade cryptography==2.3.1'
    - 'python3 setup.py install --prefix=/usr'
  when: clone_status.changed or is_elastalert_exist.rc == 1

- name: check elasticsearch service => clone status changed
  import_tasks: roles/elasticsearch/tasks/wait_until_ready.yml
  when: clone_status.changed or is_elastalert_exist.rc == 1
  
- name: create search index => clone status changed
  shell: 'elastalert-create-index --config /etc/elastalert/config.yaml'
  notify: "restart elastalert"
  when: clone_status.changed or is_elastalert_exist.rc == 1
  
# first test run
#elastalert --debug --verbose --rule /etc/elastalert/rule.yaml --config /etc/elastalert/config.yaml

# ***** FINALIZE *****
- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/elastalert.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml
  
- name: register systemd service watcher
  vars:
    name: "elastalert"
  import_tasks: roles/systemd_watcher/tasks/add_watcher.yml

- name: register update notifier
  vars:
    name: "elastalert"
    type: "github"
    url: "https://github.com/Yelp/elastalert/blob/master/changelog.md"
    config: { 
      project: "Yelp/elastalert", 
      pattern: "^v([0-9\\.]+)$",
      version: "{{elastalert_version}}" 
    }
  import_tasks: roles/update_notifier/tasks/add_notifier.yml

- name: trigger service check handler
  vars:
    notify: "restart elastalert"
    service: "elastalert.service"
  import_tasks: roles/base/tasks/service_check.yml
