- name: prepare needed folder
  file:
    path: '/etc/elastalert/'
    state: directory
    owner: root
    group: root
    mode: 0750

- name: install required packages
  zypper:
    name: [
      python3-boto3
      , python3-python-dateutil 
      , python3-devel
    ]
    state: present
  notify: "restart elastalert"
  
#- name: install required python pip modules
#  pip: 
#    name: [
#      #- aws-requests-auth
#      PyYAML
#    ]
#    extra_args: "--ignore-installed"
#    executable: pip3 
#  with_items:
#  notify: "restart elastalert"
  
- name: copy config and service
  template:
    src: "roles/elastalert/templates{{item.path}}"
    dest: "{{item.path}}"
    owner: root
    group: root
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rw,g=r,o=", path: "/etc/elastalert/config.yaml" }
    - { mode: "u=rw,g=r,o=", path: "/etc/elastalert/rule.yaml" }
    - { mode: "u=rw,g=r,o=r", path: "/etc/systemd/system/elastalert.service" }
  notify: "restart elastalert"

- name: "clone git"
  git:
#    accept_hostkey: yes
    repo: 'https://github.com/Yelp/elastalert.git'
    dest: '{{global_build}}elastalert'
#    force: yes
    version: '325f1dfe7a45f3ca2a2cc00127ab71fcd4f9cead' # => master of 25.11. 'v0.2.1'
  register: clone_status
  #changed_when: yes
#- debug: msg={{clone_status}}

- name: "install"
  shell: '{{ item }}'
  args:
    chdir: '{{global_build}}elastalert'
  with_items:
    - 'pip3 install aws-requests-auth'
    - 'pip3 install --ignore-installed PyYAML'
    - 'pip3 install --upgrade cryptography==2.3.1'
    - 'python3 setup.py install'
  when: clone_status.changed

- name: check elasticsearch service
  import_tasks: roles/elasticsearch/tasks/wait_until_ready.yml
  when: clone_status.changed
  
- name: create search index
  shell: '/usr/bin/elastalert-create-index --config /etc/elastalert/config.yaml'
  notify: "restart elastalert"
  when: clone_status.changed
  
# first test run
#elastalert --debug --verbose --rule /etc/elastalert/rule.yaml --config /etc/elastalert/config.yaml

- name: copy fluentd config
  template:
    src: "roles/elastalert/templates/etc/fluent/_.ansible.d/elastalert.conf"
    dest: "/etc/fluent/_.ansible.d/elastalert.conf"
    owner: root
    group: root
    mode: 0640
  notify: "restart fluentd"
  tags: ['fluentd']  
