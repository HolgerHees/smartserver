- name: set version
  set_fact:
    alertmanager_version: '0.25.0'
  tags: [ 'update_notifier_config' ]    

- name: prepare needed folder
  file:
    path: '{{item.path}}'
    state: directory
    owner: "{{item.user}}"
    group: "{{item.group}}"
    mode: 0750
  with_items:
    - { user: "nobody", group: "{{ 'nobody' if is_fedora else 'nogroup'}}", path: "{{ global_etc }}alertmanager" }

- name: copy config
  template:
    src: "templates/etc/{{item.src}}"
    dest: "{{ global_etc }}alertmanager/{{item.dest}}"
    owner: nobody
    group: "{{ 'nobody' if is_fedora else 'nogroup'}}"
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rw,g=r,o=", src: "alertmanager.yml", dest: "alertmanager.yml"}
    - { mode: "u=rw,g=r,o=", src: "silent_alerts.yml", dest: "silent_alerts.yml"}
    - { mode: "u=rwx,g=rx,o=", src: "silent_setup.py", dest: "silent_setup.py"}
  notify: "restart alertmanager"

- name: check started docker
  systemd:
    name: docker
    state: started

- name: create docker container
  docker_container:
    name: alertmanager
    image: "prom/alertmanager:v{{alertmanager_version}}"
    state: present
#    recreate: true
    env:
      TZ: "{{timezone}}"
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
      - "--web.external-url=https://alertmanager.{{server_domain}}/"
      - "--log.format=json"
    log_driver: journald
    log_options:
      tag: alertmanager
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "isolated"
        ipv4_address: "{{docker_alertmanager_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{global_etc}}alertmanager:/etc/alertmanager:z'
    exposed_ports:
     - "9093"
  notify: "restart alertmanager"
  
- name: allow alertmanager service
  vars:
    name: "alertmanager"
    rules:
      - "saddr {{docker_prometheus_ip}} daddr {{docker_alertmanager_ip}}"
      - "saddr {{docker_alertmanager_ip}} daddr {{docker_postfix_ip}}"
  import_tasks: roles/firewall/shared/allow_service.yml
  tags: [ 'firewall_config' ]

- name: add container name
  vars:
    host_name: "alertmanager"
    host_ip_address: "{{docker_alertmanager_ip}}"
  import_tasks: roles/_shared/add_to_hosts.yml

# ***** FINALIZE *****
- name: register webui
  vars:
    name: "alertmanager"
    js_file: "templates/webui/alertmanager.js"
    i18n_files: [ { language: "de", file: "templates/webui/alertmanager.de.json" } ]
    icons: [ 'templates/webui/icons/alertmanager_logo.svg' ]
  import_tasks: roles/apache_webui/shared/add_webui.yml

- name: register grafana configs
  vars:
    name: "alertmanager"
    datasources: 
      - "templates/grafana/datasources/alertmanager.yaml"
  import_tasks: roles/grafana/shared/add_datasource.yml
  
- name: copy apache vhost
  vars:
    sub_domain: "alertmanager"
    usergroup: "admin"
    include: "templates/etc/apache2/_.ansible.vhost.d/alertmanager.inc"
  import_tasks: roles/apache/shared/add_vhost.yml

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/alertmanager.conf"
  import_tasks: roles/fluentd/shared/add_config.yml
    
- name: create systemd service
  vars:
    container_name: "alertmanager"
    container_after: [ "postfix" ]
    container_post_exec: "nohup /bin/sh -c \"(sleep 15 && {{ global_etc }}alertmanager/silent_setup.py) &\""
  import_tasks: roles/container/shared/add_docker_service.yml
  
- name: register update notifier
  vars:
    name: "alertmanager"
    type: "docker"
    url: "https://github.com/prometheus/alertmanager/releases"
    config: {
      repository: "prom/alertmanager",
      pattern: "^v([0-9\\.]+)$"
    }
  import_tasks: roles/update_service/shared/add_software.yml

- name: trigger alertmanager handler
  vars:
    notify: "restart alertmanager"
    service: "alertmanager.service"
  import_tasks: roles/_shared/service_check.yml
