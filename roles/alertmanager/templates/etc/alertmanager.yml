global: 
  smtp_smarthost: postfix:25
  smtp_require_tls: False
  smtp_from: {{root_email}}
  resolve_timeout: 60m

#templates:
#  - /etc/alertmanager/templates/*.tmpl

route:
  group_by:
    - notifyGroup
#    - log
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 24h
  receiver: default
  routes:
# Netdata warnings should not be sendet via email and are forced as info in webui
    - matchers:
      - notifyGroup="netdata"
      - severity="warn"
      receiver: info
# Infos should not be sendet via email
    - matchers:
      - severity="info"
      receiver: dummy
# Postfix errors should not be sendet via email. Otherwise it will result in a endless loop
    - matchers:
      - notifyGroup="postfix"
      receiver: dummy
# **********************************
    - matchers:
      - notifyGroup=~"logs-.*"
      group_interval: 15m
      receiver: logs
{% if cloud_vpn is defined %}{% for peer in cloud_vpn.peers %}
    - matchers:
      - notifyGroup="cloud-peer-{{peer}}"
      receiver: cloud-peer-{{peer}}
{% endfor %}{% endif %}

receivers:
  - name: info
  - name: dummy
  - name: default
    email_configs:
      - to: {{root_email}}
        headers:
          Reply-To: '{{root_email}}'
        send_resolved: true
  - name: logs
    email_configs:
      - to: {{root_email}}
        headers:
          Reply-To: '{{root_email}}'
          subject: '{{'{{'}} .Status | toUpper {{'}} • {{'}} .GroupLabels.SortedPairs.Values | join " • " {{'}}{{'}} if eq .Status "firing" {{'}} • {{'}} .Alerts.Firing | len {{'}}'}} time(s){{'{{'}} end {{'}}'}}'
#          send_resolved: true
#        html: ''
#        text: ''
{% if cloud_vpn is defined %}{% for peer in cloud_vpn.peers %}
  - name: cloud-peer-{{peer}}
    email_configs:
      - to: {{cloud_vpn.peers[peer]["notification_email"]}}
        headers:
          Reply-To: '{{root_email}}'
          subject: 'Cloud peer status'
        text: '{{'{{'}} .Status | toUpper {{'}} • {{'}} range .Alerts {{'}}{{'}} .Annotations.summary {{'}}{{'}} end {{'}}'}}'
        html: ''
        send_resolved: true
{% endfor %}{% endif %}
