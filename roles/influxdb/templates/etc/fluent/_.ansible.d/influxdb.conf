<match systemd.dockerd.influxdb.default>
  @type rewrite_tag_filter
  <rule>
    key message
    pattern ^\[httpd\](.+)$
    tag ${tag}.httpd
  </rule>
  <rule>
    key message
    pattern /.+/
    tag ${tag}.service
  </rule>
</match>

<filter systemd.dockerd.influxdb.default.httpd>
  @type parser
  key_name message
  reserve_data true
  <parse>
    @type regexp
    #time_key message_ts
    #time_format %d/%b/%Y:%H:%M:%S %z
    #expression /^\[httpd\] (?<message_remoteAddress>.*?) - (?<message_user>[^ ]*) \[(?<message_ts>[^\]]*)\] \"(?<message>[^\"]*)\" (?<message_details>.*)$/
    expression /^\[httpd\] (?<message_remoteAddress>.*?) - (?<message_user>[^ ]*) \[[^\]]*\] \"(?<message>[^\"]*)\" (?<message_details>.*)$/
    # ignore log file timestamp, because it could produce problems with loki
    # - because service logs have always nanotime resolution
    # - and httpd logs only second resolution
  </parse>
</filter>

<filter systemd.dockerd.influxdb.default.service>
  @type parser
  key_name message
  reserve_data true
  inject_key_prefix message_
  <parse>
    @type json
    #time_key message_ts
  </parse>
</filter>

<filter systemd.dockerd.influxdb.default.service>
  @type record_modifier
  <record>
    message ${record['message_msg']}
    level ${record['message_lvl']}
  </record>
  <replace>
    key level
    expression /^error$/
    replace ERROR
  </replace>
  <replace>
    key level
    expression /^warn$/
    replace WARN
  </replace>
  <replace>
    key level
    expression /^info$/
    replace INFO
  </replace>
  <replace>
    key level
    expression /^debug$/
    replace DEBUG
  </replace>
  <replace>
    key level
    expression /^((?!ERROR|WARN|INFO|DEBUG).)*$/
    replace UNKNOWN
  </replace>
  remove_keys message_msg, message_ts
</filter>
