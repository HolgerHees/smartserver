#- name: add zypper repository
#  zypper_repository:
#    name: Server:database (influxdb)
#    repo: 'http://download.opensuse.org/repositories/server:/database/openSUSE_Leap_{{ansible_distribution_version}}/'
#    auto_import_keys: yes
#    autorefresh: no
#    priority: "100"
#    state: present

#- name: install required packages
#  zypper:
#    name: "influxdb"
#    state: present
#  notify: "restart influxdb"

- name: prepare needed folder
  file:
    path: '{{ global_lib }}influxdb/{{item}}'
    state: directory
    owner: influxdb
    group: influxdb
    #mode: 0750
    recurse: true
  with_items:
    - hh
    - meta
    - data
    - wal

#- name: copy config
#  template:
#    src: roles/influxdb/templates/etc/influxdb/config.toml
#    dest: /etc/influxdb/config.toml
#    owner: root
#    group: influxdb
#    mode: 0640
#  notify: "restart influxdb"
  
#- name: prepare backup folder
#  file:
#    path: '{{local_backup_path}}influxdb'
#    state: directory
#    owner: root
#    group: root
    
- name: set opentsdb backup cron job
  vars:
    cron_name: "Influxdb OpenTSDB Backup"
    cron_cmd: "influxd backup -database opentsdb {{local_backup_path}}influxdb/opentsdb_$(date +\\%Y-\\%m-\\%d)/ > /dev/null"
  cron:
    name: "{{cron_name}}"
    job: "{{ lookup('template', 'templates/cron_job') }}"
    cron_file: ansible_influxdb
    user: root
    minute: "0"
    hour: "1"
    state: present
  tags: ['cron_job']

 
  
  
  
  
  
  
  
  
  
  
  
- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: root
    group: root
    #mode: 0750
    recurse: true
  with_items:
    - '{{ global_lib }}influxdb_new/hh'
    - '{{ global_lib }}influxdb_new/meta'
    - '{{ global_lib }}influxdb_new/data'
    - '{{ global_lib }}influxdb_new/wal'  
    - '{{local_backup_path}}influxdb_new'

- name: create docker container
  docker_container:
    name: influxdb
    image: influxdb
    recreate: true
    log_driver: fluentd
    log_options:
      tag: docker.influxdb
    volumes:
      - '{{ global_lib }}influxdb_new:/var/lib/influxdb'
      - '{{local_backup_path}}influxdb_new:/var/lib/influxdb_backup'
#      - '/dev/log:/dev/log'
#      - '/var/run/systemd/journal/socket:/var/run/systemd/journal/socket'
#      - /etc/influxdb/config.toml:/etc/influxdb/config.toml
    ports:
     - "9000:8086"  
  
- name: copy fluentd config
  template:
    src: "roles/influxdb/templates/etc/fluent/_.ansible.d/influxdb.conf"
    dest: "/etc/fluent/_.ansible.d/influxdb.conf"
    owner: root
    group: root
    mode: 0640
  notify: "restart fluentd"
    
- name: set opentsdb backup cron job
  vars:
    cron_name: "Influxdb OpenTSDB Backup New"
    cron_cmd: "docker exec influxdb influxd backup -database opentsdb /var/lib/influxdb_backup/opentsdb_$(date +\\%Y-\\%m-\\%d)/ > /dev/null"
  cron:
    name: "{{cron_name}}"
    job: "{{ lookup('template', 'templates/cron_job') }}"
    cron_file: ansible_influxdb
    user: root
    minute: "0"
    hour: "1"
    state: present
  tags: ['cron_job']

# Failed to connect to '127.0.0.1', port '4242'
  
  



  

  
  
- name: set clean backup cron job
  vars:
    cron_name: "Influxdb Cleanup"
    cron_cmd: "find {{local_backup_path}}influxdb/ -type d -mtime +30 -exec rm -rf {} +;"
  cron:
    name: "{{cron_name}}"
    job: "{{ lookup('template', 'templates/cron_job') }}"
    cron_file: ansible_influxdb
    user: root
    minute: "45"
    hour: "00"
    state: present
  tags: ['cron_job']
