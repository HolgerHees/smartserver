# suse user: ftp:x:476:476:FTP Account:/srv/ftp:/sbin/nologin
# suse group: ftp:!:476:
# fedora user: ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
# fedora group: ftp:x:50:
- name: "create user and group => user or group does not exists"
  vars:
    user: { name: "ftp", system: true, home: "{{global_lib}}camera_service/upload/" }
    group: { name: "ftp", system: true }
  include_tasks: roles/user/shared/add_system_user.yml
  when: "'ftp' not in system_users or 'ftp' not in system_groups"

- name: prepare needed directories
  vars:
    directories: |
      [
        { "mode": "u=rwx,g=rx,o=", "owner": "root", "group": "root", "path": "{{global_etc}}vsftpd/" },
        { "mode": "u=rwx,g=rx,o=", "owner": "{{system_users['ftp'].name}}", "group": "{{system_groups['ftp'].name}}", "path": "{{global_lib}}camera_service/upload/" },
        {% for item in camera_devices %}{% if 'ftp_upload_name' in item %}
          { "mode": "u=rwx,g=rx,o=", "owner": "{{system_users['ftp'].name}}", "group": "{{system_groups['ftp'].name}}", "path": "{{global_lib}}camera_service/upload/{{item['ftp_upload_name']}}/" },
        {% endif %}{% endfor %}
      ]
  include_tasks: roles/_shared/create_directories.yml

- name: copy config
  vars:
      PASV_ADDRESS: "127.0.0.1"
      PASV_MIN: "30000"
      PASV_MAX: "30005"
      UMASK: "022"
  template:
    src: "templates/etc/vsftpd/vsftpd.conf"
    dest: "{{global_etc}}vsftpd/vsftpd.conf"
    owner: "root"
    group: "root"
    mode: 0750
  notify: "restart vsftpd"

- name: build container image
  vars:
    container_name: "vsftpd"
    image_name: "custom_vsftpd:{{alpine_version}}"
    image_files:
      - roles/camera_ftp/templates/container/Dockerfile
    entrypoint_pre: |
      if ! id -g "$FTP_USER" >/dev/null 2>&1; then
          addgroup -g $FTP_GID -S $FTP_USER
      fi

      if ! id -u "$FTP_USER" >/dev/null 2>&1; then
          adduser -u $FTP_UID -D -G $FTP_USER -h /home/upload -s /bin/false --no-create-home $FTP_USER
      fi

      chown $FTP_USER:$FTP_USER /home/upload/ -R

      echo "$FTP_USER:$FTP_PASS" | /usr/sbin/chpasswd > /dev/null 2>&1

      export LOG_FILE=`grep xferlog_file /etc/vsftpd/vsftpd.conf|cut -d= -f2`

      /bin/ln -sf /proc/$$/fd/1 $LOG_FILE
      #/bin/ln -sf /proc/1/fd/1 $LOG_FILE
    entrypoint_startup:
      - "/usr/sbin/vsftpd /etc/vsftpd/vsftpd.conf &"
  include_tasks: roles/container/shared/build_podman_image.yml
  
- name: prepare published_ports
  set_fact:
    vsftpd_published_ports:  |
      [
        "21:21",
        "20:20",
        "30000-30005:30000-30005",
        {% if default_server_ipv6 is defined %}
          "[::]:21:21",
          "[::]:20:20",
          "[::]:30000-30005:30000-30005",
        {% endif %}
      ]
  tags: ['firewall_config']

- name: create container service
  vars:
    container_name: "vsftpd"
    container_image: "custom_vsftpd:{{alpine_version}}"
    container_env:
      FTP_USER: "{{camera_ftp_username}}"
      FTP_PASS: "{{camera_ftp_password}}"
      FTP_UID: "{{system_users['ftp'].id}}"
      FTP_GID: "{{system_groups['ftp'].id}}"
    container_network: "isolated"
    container_ip: "{{podman_camera_ftp_ip}}"
    container_published_ports: "{{vsftpd_published_ports}}"
    container_volumes:
      - '{{global_etc}}vsftpd/:/etc/vsftpd:ro'
      - '{{global_lib}}/camera_service/upload/:/home/upload:rw'
    container_readyness: { "type": "port_check", "ip": "{{podman_camera_ftp_ip}}", "port": "21" }
  include_tasks: roles/container/shared/create_podman_service.yml
  tags: ['podman_container','systemd_watcher_config','systemd_service_config']

- name: allow container service
  vars:
    service_name: "vsftpd"
    container_to_outside_rules:
      - { saddr: "{{podman_camera_ftp_ip}}", sport: "20", daddr: "{{intern_networks}}", protocol: "tcp", comment: "camera_ftp => internal networks" }
    nat_rules: { ip: "{{podman_camera_ftp_ip}}", ports: "{{vsftpd_published_ports}}" }
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: prepare firewall rules
  set_fact:
    ftp_rules: "{{ (ftp_rules | default([])) + [ 'saddr ' + podman_camera_ftp_ip + ' proto tcp sport 20 daddr ' + item ] }}"
  with_items: "{{ intern_networks }}"
  tags: ['firewall_config']

# ***** DEPENDENCY CONFIGS *****
- name: create cron job
  vars:
    name: "Camera Cleanup"
    cmd: "find {{global_lib}}/camera_service/upload/ -name \"*.jpg\" -mmin +{{camera_ftp_max_file_age}} -exec rm {} +"
    group: "camera_ftp"
    subgroup: "cleanup"
    hour: "0"
    minute: "50"
  include_tasks: roles/cron/shared/add_cronjob.yml
  tags: ['cron_job']
