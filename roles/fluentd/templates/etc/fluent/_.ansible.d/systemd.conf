<source>
  @type systemd
  tag systemd
  path /run/log/journal
  matches [{ "PRIORITY": [0,1,2,3,4,5,6] }]
  <storage>
    @type local
    persistent false
    path systemd.pos
  </storage>
  <entry>
    fields_strip_underscores true
    fields_lowercase true
    #field_map {"MESSAGE": "log", "_PID": ["process", "pid"], "_CMDLINE": "process", "_COMM": "cmd"}
  </entry>
</source>
<filter systemd>
  @type record_modifier
  <record>
    group ${record['syslog_identifier']}
    level ${record['priority']}
  </record>
  <replace>
    key level
    expression /^0|1|2$/
    replace ALERT
  </replace>
  <replace>
    key level
    expression /^3$/
    replace ERROR
  </replace>
  <replace>
    key level
    expression /^4$/
    replace WARN
  </replace>
  <replace>
    key level
    expression /^5$/
    replace NOTICE
  </replace>
  <replace>
    key level
    expression /^6$/
    replace INFO
  </replace>
  <replace>
    key level
    expression /^7$/
    replace DEBUG
  </replace>
  <replace>
    key level
    expression /^((?!ALERT|ERROR|WARN|NOTICE|INFO|DEBUG).)*$/
    replace UNKNOWN
  </replace>
</filter>  
<match systemd>
  @type rewrite_tag_filter
  <rule>
    key group
    pattern ^(.+)$
    tag ${tag}.$1
  </rule>
</match>
<filter systemd.kibana>
  @type parser
  key_name message
  reserve_data true
  inject_key_prefix kibana.
  <parse>
    @type json
  </parse>
</filter>
<filter systemd.kibana>
  @type record_modifier
  <record>
    message ${record['kibana.message']}
  </record>
  remove_keys kibana.message
</filter>
<filter systemd.cronic>
  @type parser
  key_name message
  reserve_data true
  inject_key_prefix cronic.
  <parse>
    @type json
  </parse>
</filter>
<filter systemd.cronic>
  @type record_modifier
  <record>
    message ${record['cronic.message']}
#    cmd ${record['cronic.cmd']}
  </record>
  remove_keys cronic.message
</filter>
