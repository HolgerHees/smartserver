- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{global_etc}}cloud_check/" }
  include_tasks: roles/_shared/create_directories.yml

- name: build docker image
  vars:
    name: "cloud_check"
    image_name: "custom_cloud_check"
    image_version: "{{alpine_version}}"
    files:
      - roles/cloud_check/templates/container/Dockerfile
  include_tasks: roles/container/shared/build_docker_image.yml

- name: create docker container
  docker_container:
    name: cloud_check
    image: "custom_cloud_check:{{alpine_version}}"
    state: present
#    recreate: true
    env:
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: cloud_check
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "isolated"
        ipv4_address: "{{docker_cloud_check_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{global_etc}}cloud_check/:/etc/cloud_check:z'
      - '{{cloud_path}}/remote:/cloud/remote:z,rshared'
  notify: "restart cloud_check"

- name: allow cloud_check service
  vars:
    name: "cloud_check"
    rules:
      - "saddr {{docker_prometheus_ip}} daddr {{docker_cloud_check_ip}}"
      - "saddr {{docker_cloud_check_ip}} daddr {{docker_cloud_mosquitto_ip}}"
      - "saddr {{docker_cloud_check_ip}} proto tcp dport 80 outerface {{default_network_interface}}"
      - "saddr {{docker_cloud_check_ip}} proto icmp outerface {{default_network_interface}}"
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: copy config
  template:
    src: "templates{{item.src}}"
    dest: "{{item.dest}}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - { src: "/config.py", dest: "{{global_etc}}cloud_check/config.py" }
  notify: "restart cloud_check"

- name: copy service
  copy:
    src: "templates{{item.src}}"
    dest: "{{item.dest}}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - { src: "/etc/daemon.py", dest: "{{global_etc}}cloud_check/daemon.py" }
  notify: "restart cloud_check"

# ***** FINALIZE *****
- name: register prometheus rules & metrics
  vars:
    name: "cloud_check"
    rules_file: "templates/prometheus/rules.yml"
    scrape_file: "templates/prometheus/scrape.yml"
  include_tasks: roles/prometheus/shared/add_config.yml
  tags: ['prometheus_config']
  when: "monitoring_enabled"

- name: create systemd service
  vars:
    container_name: "cloud_check"
    container_after: [ "cloud_mosquitto" ]
  include_tasks: roles/container/shared/add_docker_service.yml
  tags: ['systemd_watcher_config']

- name: trigger cloud_check handler
  vars:
    notify: "restart cloud_check"
    service: "cloud_check.service"
  include_tasks: roles/_shared/service_check.yml
