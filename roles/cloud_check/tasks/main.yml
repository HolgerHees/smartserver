- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{global_opt}}cloud_check/" }
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{global_opt}}cloud_check/config/" }
  include_tasks: roles/_shared/create_directories.yml

- name: copy config
  template:
    src: "templates/config.py"
    dest: "{{global_opt}}cloud_check/config/config.py"
    owner: root
    group: root
    mode: 0640
  notify: "restart cloud_check"

- name: copy service
  copy:
    src: "templates/opt/cloud_check/cloud_check"
    dest: "{{global_opt}}cloud_check/cloud_check"
    owner: root
    group: root
    mode: 0750
  notify: "restart cloud_check"

- name: build container image
  vars:
    container_name: "cloud_check"
    image_name: "custom_cloud_check:{{alpine_version}}"
    image_files:
      - roles/cloud_check/templates/container/Dockerfile
    entrypoint_startup:
      - "/opt/shared/python/install.py"
      - "/opt/cloud_check/cloud_check &"
  include_tasks: roles/container/shared/build_podman_image.yml
  tags: ['container_entrypoint_config']

- name: create container service
  vars:
    container_name: "cloud_check"
    container_image: "custom_cloud_check:{{alpine_version}}"
    container_network: "isolated"
    container_ip: "{{podman_cloud_check_ip}}"
    container_exposed_ports:
      - "80/tcp"
    container_volumes:
      - '{{global_opt}}shared/python:/opt/shared/python:ro'
      - '{{global_opt}}cloud_check/:/opt/cloud_check'
      - '{{cloud_path}}/remote:/cloud/remote:rshared'
    container_after: [ "cloud_mosquitto" ]
    container_readyness: { "type": "port_check", "ip": "{{podman_cloud_check_ip}}", "port": "80" }
  include_tasks: roles/container/shared/create_podman_service.yml
  tags: ['podman_container','systemd_watcher_config','systemd_service_config']

- name: allow container service
  vars:
    service_name: "cloud_check"
    container_to_container_rules:
      - { saddr: "{{podman_prometheus_ip}}", daddr: "{{podman_cloud_check_ip}}", protocol: "tcp", dport: "80", comment: "prometheus => cloud_check" }
    #  - { saddr: "{{podman_cloud_check_ip}}", daddr: "{{vpn_cloud_services['local']['mosquitto']}}", protocol: "tcp", dport: [ "1883", "9001" ], comment: "cloud_check => cloud_mosquitto" }
    container_to_outside_rules:
      - { saddr: "{{podman_cloud_check_ip}}", protocol: "tcp", dport: "80", oif: "{{default_network_interface}}", comment: "cloud_check => http endpoint of other clouds" }
      - { saddr: "{{podman_cloud_check_ip}}", protocol: "icmp", oif: "{{default_network_interface}}", comment: "cloud_check => icmp endpoint of other clouds" }
      - { saddr: "{{podman_cloud_check_ip}}", daddr: "{{vpn_cloud_services['local']['mosquitto']}}", protocol: "tcp", dport: [ "1883", "9001" ], comment: "cloud_check => cloud mosquitto" }
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']
  
# ***** DEPENDENCY CONFIGS *****
- name: register prometheus rules & metrics
  vars:
    name: "cloud_check"
    rules_file: "templates/prometheus/rules.yml"
    scrape_file: "templates/prometheus/scrape.yml"
  include_tasks: roles/prometheus/shared/add_config.yml
  tags: ['prometheus_config']
  when: "monitoring_enabled"
