- name: prepare needed folder
  file:
    path: "{{item}}"
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - '/etc/vcontrold/'
    - "{{global_log}}vcontrold/"
    - "/opt/heating_control"
    - "/opt/heating_sensors"
    
- name: install required fedora packages
  yum:
    name: [
        cmake
      , libudev-devel # needed to compile sensors
    ]
    state: present
  when: ansible_distribution == 'Fedora'

- name: install required suse packages
  zypper:
    name: [
        cmake
      , libusb-compat-devel # needed to compile sensors
      , libudev-devel # needed to compile sensors
    ]
    state: present
  when: ansible_distribution == 'openSUSE Leap'

- name: copy config and service
  template:
    src: "roles/vcontrold/templates{{item.path}}"
    dest: "{{item.path}}"
    owner: root
    group: root
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rw,g=r,o=", path: "/etc/vcontrold/vcontrold.xml" }
    - { mode: "u=rw,g=r,o=", path: "/etc/vcontrold/vito.xml" }
    - { mode: "u=rw,g=r,o=", path: "/etc/udev/rules.d/10-vcontrold.rules" }
    - { mode: "u=rw,g=r,o=r", path: "/etc/systemd/system/vcontrold.service" }
  notify: "restart vcontrold"

- name: "clone git"
  git:
#    accept_hostkey: yes
    repo: 'https://github.com/openv/vcontrold.git'
    dest: '{{global_build}}vcontrold'
#    force: yes
    version: 'master'
  register: clone_status
#- debug: msg={{clone_status}}

- name: "create build dir"
  file: 
    path: '{{global_build}}vcontrold/build'
    state: directory
  register: build_status
  when: clone_status.changed

- name: "install"
  shell: '{{ item }}'
  args:
    chdir: '{{global_build}}vcontrold/build'
  with_items:
    - 'cmake .. -DMANPAGES=OFF'
    - 'make'
    - 'make install'
  notify: "restart vcontrold"
  when: clone_status.changed or build_status.changed

- name: set logrotate job
  vars:
    logrotate_path: "{{global_log}}vcontrold/*.log"
  copy:
    content: "{{ lookup('template', 'templates/logrotate') }}"
    dest: "/etc/logrotate.d/ansible_vcontrol"
    owner: root
    group: root
    mode: 0640

- name: copy cmd templates
  template:
    src: "roles/vcontrold/templates/opt/{{item}}"
    dest: "/opt/{{item}}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "heating_control/heizung.cmd"
    - "heating_control/heizung.tpl"

- name: copy cmd's
  template:
    src: "roles/vcontrold/templates/opt/{{item}}"
    dest: "/opt/{{item}}"
    owner: root
    group: root
    mode: 0750
  with_items:
    - "heating_control/heizung.bash"
    - "heating_control/heizungBetriebsart.bash"
    - "heating_sensors/sensoren.bash"
  
- name: copy cmd binaries
  copy:
    src: "roles/vcontrold/templates/opt/{{item}}"
    dest: "/opt/{{item}}"
    owner: root
    group: root
    mode: 0750
  with_items:
    - "heating_sensors/TempCmd"

- name: create cron job
  vars:
    title: "Heating Control"
    cmd: "/usr/bin/flock -n {{global_tmp}}heizung.lock /opt/heating_control/heizung.bash"
    file: "ansible_vcontrold"
    minute: "*/1"
  import_role:
    name: cron
    tasks_from: add_cronjob
  when: "is_production|bool"
  tags: ['cron_job']

- name: create cron job
  vars:
    title: "Heating Sensors"
    cmd: "/opt/heating_sensors/sensoren.bash"
    file: "ansible_vcontrold"
    minute: "*/1"
  import_role:
    name: cron
    tasks_from: add_cronjob
  when: "is_production|bool"
  tags: ['cron_job']

- name: create cron job
  vars:
    title: "Heating Cleanup"
    cmd: "find {{global_log}}heizung/ -mtime +14 -exec rm {} +"
    file: "ansible_vcontrold"
    hour: "0"
    minute: "50"
  import_role:
    name: cron
    tasks_from: add_cronjob
  tags: ['cron_job']
