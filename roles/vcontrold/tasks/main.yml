- name: set vcontrold version
  set_fact:
    vcontrold_version: 'v0.98.12'
  tags: [ 'update_notifier_config' ]
  
- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{global_etc}}vcontrold/" }
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{global_log}}vcontrold/" }
  include_tasks: roles/_shared/create_directories.yml

- name: get gid from "dialout"
  shell: "getent group dialout | cut -d: -f3"
  register: group_dialout_id
  changed_when: no

- name: copy config and service
  template:
    src: "templates{{item.src}}"
    dest: "{{item.dest}}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - { src: "/etc/vcontrold/mqtt.py", dest: "{{global_etc}}vcontrold/mqtt.py" }
    - { src: "/etc/vcontrold/vcontrold.xml", dest: "{{global_etc}}vcontrold/vcontrold.xml" }
    - { src: "/etc/vcontrold/vito.xml", dest: "{{global_etc}}vcontrold/vito.xml" }
  notify: "restart vcontrold"

- name: copy udev rules
  vars:
    udev_rules_path: "{{config_path}}templates/vcontrold/"
    udev_rules_trigger: "restart vcontrold"
  include_tasks: roles/_shared/synchronize_udev_rules.yml

- name: build container image
  vars:
    container_name: "vcontrold"
    image_name: "custom_vcontrold:{{alpine_version}}-{{vcontrold_version}}"
    image_files:
      - roles/vcontrold/templates/container/Dockerfile
  include_tasks: roles/container/shared/build_podman_image.yml

- name: create container service
  vars:
    container_name: "vcontrold"
    container_image: "custom_vcontrold:{{alpine_version}}-{{vcontrold_version}}"
    container_network: "isolated"
    container_ip: "{{podman_vcontrold_ip}}"
    container_exposed_ports:
      - "3002"
    container_device:
      - "/dev/ttyVControlD:/dev/ttyVControlD:rwm"
    container_volumes:
      - '{{global_etc}}vcontrold/:/etc/vcontrold:ro'
      - '{{global_log}}vcontrold/:{{global_log}}vcontrold:rw'
    container_after: [ "mosquitto" ]
    container_readyness: { "type": "port_check", "ip": "{{podman_vcontrold_ip}}", "port": "3002" }
  include_tasks: roles/container/shared/create_podman_service.yml
  tags: ['podman_container','systemd_watcher_config','systemd_service_config']
  
- name: allow container service
  vars:
    service_name: "vcontrold"
    container_to_container_rules:
      - { saddr: "{{podman_vcontrold_ip}}", daddr: "{{podman_mosquitto_ip}}", protocol: "tcp", dport: [ "1883", "9001" ], comment: "vcontrold => mosquitto" }
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

# ***** DEPENDENCY CONFIGS *****
- name: set logrotate job
  vars:
    logrotate_path: "{{global_log}}vcontrold/*.log"
  template:
    src: "templates/logrotate"
    dest: "/etc/logrotate.d/ansible_vcontrol"
    owner: root
    group: root
    mode: 0640

- name: register update notifier
  vars:
    name: "vcontrold"
    type: "github"
    url: "https://github.com/openv/vcontrold/releases"
    config: { 
      project: "openv/vcontrold", 
      pattern: "^v([0-9\\.]+)$",
      version: "{{vcontrold_version}}" 
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"
