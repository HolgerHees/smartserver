- name: install required fedora packages
  yum:
    name: [
        docker
        , python3-docker  # used by ansible docker module
#        , podman
    ]
    state: present
  when: ansible_distribution == 'Fedora'
  
#- name: add suse zypper repository
#  zypper_repository:
#    name: Devel:Kubic (podman)
#    repo: 'http://download.opensuse.org/repositories/devel:/kubic/openSUSE_Leap_{{ansible_distribution_version}}/'
#    auto_import_keys: yes
#    priority: "100"
#    state: present
#  when: ansible_distribution == 'openSUSE Leap'

- name: install required suse packages
  zypper:
    name: [
        docker
        , python2-docker  # used by ansible docker module
        #, python3-docker  # used by ansible docker module
        , podman
#        , podman>=1.6.2
#        , cni>=0.7.1
#        , cni-plugins>=0.8.3
    ]
    state: present
  when: ansible_distribution == 'openSUSE Leap'

- name: copy fluentd config
  vars:
    config_file: "roles/container/templates/etc/fluent/_.ansible.d/podman.conf"
  include_role:
    name: fluentd
    tasks_from: add_config
  when: ansible_distribution == 'openSUSE Leap'
  tags: ['fluentd_conf']
  
#- name: set podman config
#  lineinfile:
#    path: /etc/containers/{{item.file}}
#    regexp: '^[#]*{{item.field}}\s*='
#    line: '{{item.field}}="{{item.value}}"'
#    create: true
#    owner: root
#    group: root
#    mode: 0640
#  with_items:
#    - { file: 'libpod.conf', field: 'static_dir', value: '{{global_lib}}libpod/storage/' }
#    - { file: 'libpod.conf', field: 'tmp_dir', value: '{{global_tmp}}libpod/' }
#    - { file: 'libpod.conf', field: 'cgroup_manager', value: "{{ 'systemd' if ansible_distribution == 'openSUSE Leap' else 'systemd' }}" }
#    - { file: 'storage.conf', field: 'runroot', value: '{{global_tmp}}containers/storage/' }
#    - { file: 'storage.conf', field: 'graphroot', value: '{{global_lib}}containers/storage/' }

#- name: set podman selinux configuration on fedora
#  shell: "{{item}}"
#  with_items:
#    - "semanage fcontext -a -e /var/lib/containers/storage/libpod {{global_lib}}libpod/storage"
#    - "semanage fcontext -a -e /var/run/libpod {{global_tmp}}libpod"
#    - "semanage fcontext -a -e /var/lib/containers/storage {{global_lib}}containers/storage"
#    - "semanage fcontext -a -e /var/run/containers/storage {{global_tmp}}containers/storage"
#    - "restorecon -Rv {{global_lib}}libpod/storage"
#    - "restorecon -Rv {{global_tmp}}libpod"
#    - "restorecon -Rv {{global_lib}}containers/storage"
#    - "restorecon -Rv {{global_tmp}}containers/storage"
#  register: selinux_config_exists
#  changed_when: "'already defined' not in selinux_config_exists.stderr"
#  failed_when: false #"http_port_exists.rc == 1 and 'already defined' not in http_port_exists.stderr"
#  when: ansible_distribution == 'Fedora'

- name: disable docker daemon.json
  shell: "if [ -f /etc/docker/daemon.json ]; then mv /etc/docker/daemon.json /etc/docker/daemon.json.org; echo \"1\"; else echo \"0\"; fi"
  register: dockerjson_change
  changed_when: "'1' in dockerjson_change.stdout"
    
- name: change docker config on fedora
  lineinfile:
    path: /etc/sysconfig/docker
    insertafter: '^OPTIONS='
    regexp: '^\s*--{{item.field}}\s*='
    line: '  --{{item.field}}={{item.value}} \'
  with_items:
    - { field: "log-driver", value: "journald" }
    - { field: "graph", value: "{{global_lib}}docker" }
  when: ansible_distribution == 'Fedora'
  
- name: check started docker on fedora
  systemd:
    name: docker
    state: started
  when: ansible_distribution == 'Fedora'
  
- name: set docker selinux configuration on fedora
  shell: "{{item}}"
  with_items:
    - "semanage fcontext -a -e /var/lib/docker {{global_lib}}docker"
  register: selinux_config_exists
  changed_when: "'already defined' not in selinux_config_exists.stderr"
  failed_when: false #"http_port_exists.rc == 1 and 'already defined' not in http_port_exists.stderr"
  when: ansible_distribution == 'Fedora'

- name: reload selinux configuration on fedora
  shell: "restorecon -Rv {{global_lib}}docker"
  when: ansible_distribution == 'Fedora' and selinux_config_exists.changed

- name: change docker config on suse
  lineinfile:
    path: /etc/sysconfig/docker
    backrefs: yes
    regexp: '^(\s*DOCKER_OPTS\s*=(?!.*{{item.field}})\s*)"(.*)"'
    line: '\1"\2 --{{item.field}}={{item.value}}"'
  with_items:
    - { field: "log-driver", value: "journald" }
    - { field: "graph", value: "{{global_lib}}docker" }
  when: ansible_distribution == 'openSUSE Leap'

- name: copy fluentd config
  vars:
    config_file: "roles/container/templates/etc/fluent/_.ansible.d/docker.conf"
  include_role:
    name: fluentd
    tasks_from: add_config
  tags: ['fluentd_conf']
  
