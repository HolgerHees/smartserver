#!/usr/bin/python3

import sys
import json
import subprocess

from config import config
from smartserver.argsparser import ArgsParser

from smartserver.command import exec


BASE_PATH = "{}networks/".format(config.GLOBAL_ETC)

args_cfg = { "container": None, "gateway": [] }
args_values = ArgsParser.parse(args_cfg,sys.argv)

if args_values["container"] is None:
    raise Exception("Missing container")

container = args_values["container"]

result = exec(["podman", "inspect", "--format", "{{.State.Pid}}", container], exitstatus_check=False)

container_id = result.stdout.decode("utf-8").strip()
if container_id == "0":
    print("container not running")
    exit(0)

for gateway in args_values["gateway"]:
    if gateway.startswith("default"):
        _, gateway = gateway.split(":")

        found = False
        result = exec(["nsenter", "-n", "-t", container_id, "ip", "route", "list"])
        container_routes = result.stdout.decode("utf-8").strip()
        for container_route in container_routes.split("\n"):
            if container_route.startswith("default"):
                if container_route.startswith("default via {}".format(gateway)):
                    found = True
                else:
                    print("ip route del {}".format(container_route))
                    exec(["nsenter", "-n", "-t", container_id, "ip", "route", "del"] + container_route.strip().split(" "))

            if not found:
                print("ip route add default via {}".format(gateway))
                exec(["nsenter", "-n", "-t", container_id, "ip", "route", "add", "default", "via", gateway])
    else:
        subnet, gateway = gateway.split(":")

        result = exec(["nsenter", "-n", "-t", container_id, "ip", "route", "list"])
        container_routes = result.stdout.decode("utf-8").strip()

        if "{} via {}".format(subnet, gateway) not in container_routes:
            print("ip route add {} via {}".format(subnet,gateway))
            exec(["nsenter", "-n", "-t", container_id, "ip", "route", "add", subnet, "via", gateway])
