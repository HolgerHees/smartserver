- name: set version
  set_fact:
    loki_version: '2.7.0'
  tags: [ 'update_notifier_config' ]    

- name: prepare needed folder
  file:
    path: '{{item}}'
    state: directory
    owner: "10001"
    group: "10001"
    mode: 0750
  with_items:
    - "{{ global_etc }}loki/"
    - "{{ global_etc }}loki/rules"
    - "{{ global_etc }}loki/rules/fake"
    - "{{ global_lib }}loki/"
  
- name: copy config
  template:
    src: "templates/etc/{{item}}"
    dest: "{{ global_etc }}/{{item}}"
    owner: "10001"
    group: "10001"
    mode: 0640
  with_items:
    - "loki/local-config.yaml"
  notify: "restart loki"
  
- name: check started docker
  systemd:
    name: docker
    state: started
    
- name: create docker network
  vars:
    network_name: "loki"
    network_ip: "{{docker_loki_ip}}"
    network_internal: yes
  import_tasks: roles/container/tasks/create_docker_network.yml

- name: create docker container
  docker_container:
    name: loki
    image: "grafana/loki:{{loki_version}}"
    state: present
#    user: "root:root"
#    recreate: true
    env:
      TZ: "{{timezone}}"
#    entrypoint:
#      - "/bin/sh"
#      - "-c"
#      - "\"/usr/bin/loki -log.level=debug -config.file=/etc/loki/local-config.yaml 2>&1\""
    log_driver: journald
    log_options:
      tag: loki
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "loki"
        ipv4_address: "{{docker_loki_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{global_etc}}networks/loki:/etc/hosts:z'
      - '{{global_etc}}loki:/etc/loki:z'
      - '{{global_lib}}loki:/loki:z'
    exposed_ports:
     - "3100"
  notify: "restart loki"
      
- name: connect loki with prometheus network
  vars:
    network_name: "prometheus"
    network_container:
      - loki
  import_tasks: roles/container/tasks/connect_docker_network.yml
  tags: [ 'prometheus', 'alpine' ]

- name: connect alertmanager with loki network
  vars:
    network_name: "loki"
    network_container:
      - alertmanager
  import_tasks: roles/container/tasks/connect_docker_network.yml
  tags: [ 'alertmanager' ]

- name: add container name
  vars:
    host_name: "loki"
    host_ip_address: "{{docker_loki_ip}}"
  import_tasks: roles/_shared/tasks/add_to_hosts.yml

# ***** FINALIZE *****
- name: register prometheus rules & metrics
  vars:
    name: "loki"
    rules_file: "templates/prometheus/rules.yml"
    scrape_file: "templates/prometheus/scrape.yml"
  import_tasks: roles/prometheus/tasks/add_config.yml

- name: register loki rules
  vars:
    name: "loki"
    rules_file: "templates/etc/loki/rules.yaml"
  import_tasks: roles/loki/tasks/add_config.yml

- name: register webui
  vars:
    name: "loki"
    js_file: "templates/webui/loki.js"
    i18n_files: [ { language: "de", file: "templates/webui/loki.de.json" } ]
    icons: [ 'templates/webui/icons/loki_logs.svg' ]
  import_tasks: roles/apache_webui/tasks/add_webui.yml

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/loki.conf"
  import_tasks: roles/fluentd/tasks/add_config.yml

- name: create systemd service
  vars:
    container_name: "loki"
    container_after: [ "alertmanager" ]
  import_tasks: roles/container/tasks/add_docker_service.yml
  
- name: register grafana configs
  vars:
    name: "loki"
    datasources: 
      - "templates/grafana/datasources/loki.yaml"
    dashboards:
      - "templates/grafana/dashboards/Logs.json"
  import_tasks: roles/grafana/tasks/add_datasource.yml

- name: register update notifier
  vars:
    name: "loki"
    type: "docker"
    url: "https://github.com/grafana/loki/releases"
    config: {
      repository: "grafana/loki",
      pattern: "^([0-9\\.]+)$"
    }
  import_tasks: roles/update_service/tasks/add_software.yml

- name: trigger loki handler
  vars:
    notify: "restart loki"
    service: "loki.service"
  import_tasks: roles/_shared/tasks/service_check.yml
