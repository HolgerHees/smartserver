- name: set version
  set_fact:
    loki_version: '2.9.6'
  tags: [ 'update_notifier_config' ]    

- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['loki'].name}}", group: "{{system_groups['loki'].name}}", path: "{{ global_lib }}loki/" }
  include_tasks: roles/_shared/create_directories.yml
  
- name: copy config
  template:
    src: "templates/etc/{{item}}"
    dest: "{{ global_etc }}/{{item}}"
    owner: "{{system_users['loki'].name}}"
    group: "{{system_groups['loki'].name}}"
    mode: 0640
  with_items:
    - "loki/local-config.yaml"
  notify: "restart loki"
  
- name: build docker image
  vars:
    name: "loki"
    image_name: "custom_loki"
    image_version: "{{loki_version}}"
    files:
      - roles/loki/templates/container/Dockerfile
  include_tasks: roles/container/shared/build_docker_image.yml
    
- name: create docker container
  docker_container:
    name: loki
    image: "custom_loki:{{loki_version}}"
    state: present
#    user: "root:root"
#    recreate: true
    user: "{{system_users['loki'].name}}:{{system_groups['loki'].name}}"
    env:
      TZ: "{{timezone}}"
#    entrypoint:
#      - "/bin/sh"
#      - "-c"
#      - "\"/usr/bin/loki -log.level=debug -config.file=/etc/loki/local-config.yaml 2>&1\""
    log_driver: journald
    log_options:
      tag: loki
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks:
      - name: "isolated"
        ipv4_address: "{{docker_loki_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{global_etc}}loki:/etc/loki:z'
      - '{{global_lib}}loki:/loki:z'
    exposed_ports:
     - "3100"
  notify: "restart loki"
      
- name: allow loki service
  vars:
    name: "loki"
    rules:
      - "saddr {{docker_prometheus_ip}} daddr {{docker_loki_ip}}"
      - "saddr {{docker_loki_ip}} daddr {{docker_alertmanager_ip}}"
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: add container name
  vars:
    host_name: "loki"
    host_ip_address: "{{docker_loki_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

# ***** FINALIZE *****
- name: register prometheus rules & metrics
  vars:
    name: "loki"
    scrape_file: "templates/prometheus/scrape.yml"
  include_tasks: roles/prometheus/shared/add_config.yml
  tags: ['prometheus_config']
  when: "monitoring_enabled"

- name: register loki rules
  vars:
    name: "loki"
    rules_file: "templates/etc/loki/rules.yaml"
  include_tasks: roles/loki/shared/add_config.yml
  tags: ['loki_config']
  when: "monitoring_enabled"

- name: register webui
  vars:
    name: "loki"
    js_file: "templates/webui/loki.js"
    i18n_files: [ { language: "de", file: "templates/webui/loki.de.json" } ]
    icons: [ 'templates/webui/icons/loki_logs.svg' ]
  include_tasks: roles/apache_webui/shared/add_webui.yml
  tags: ['apache_webui_config']

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/loki.conf"
  include_tasks: roles/fluentd/shared/add_config.yml
  tags: ['fluentd_config']
  when: "monitoring_enabled"

- name: create systemd service
  vars:
    container_name: "loki"
    container_after: [ "alertmanager" ]
  include_tasks: roles/container/shared/add_docker_service.yml
  tags: ['systemd_watcher_config']
  
- name: register grafana configs
  vars:
    name: "loki"
    datasources: 
      - "templates/grafana/datasources/loki.yaml"
    dashboards:
      - "templates/grafana/dashboards/Logs.json"
  include_tasks: roles/grafana/shared/add_datasource.yml
  tags: ['grafana_config']
  when: "grafana_enabled"

- name: register update notifier
  vars:
    name: "loki"
    type: "docker"
    url: "https://github.com/grafana/loki/releases"
    config: {
      repository: "grafana/loki",
      pattern: "^([0-9\\.]+)$"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"

- name: trigger loki handler
  vars:
    notify: "restart loki"
    service: "loki.service"
  include_tasks: roles/_shared/service_check.yml
