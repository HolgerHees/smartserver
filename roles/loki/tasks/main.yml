- name: set version
  set_fact:
    loki_version: '3.1.1'
  tags: [ 'update_notifier_config' ]    

- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['loki'].name}}", group: "{{system_groups['loki'].name}}", path: "{{ global_lib }}loki/" }
  include_tasks: roles/_shared/create_directories.yml
  
- name: copy config
  template:
    src: "templates/etc/{{item}}"
    dest: "{{ global_etc }}/{{item}}"
    owner: "{{system_users['loki'].name}}"
    group: "{{system_groups['loki'].name}}"
    mode: 0640
  with_items:
    - "loki/local-config.yaml"
  notify: "restart loki"
  
- name: create podman container
  containers.podman.podman_container:
    name: loki
    image: "grafana/loki:{{loki_version}}"
    state: present
    security_opt:
      - label=disable
    user: "{{system_users['loki'].id}}:{{system_groups['loki'].id}}"
    env:
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: loki
    network: "isolated"
    ip: "{{podman_loki_ip}}"
    volumes:
      - '{{global_etc}}loki:/etc/loki'
      - '{{global_lib}}loki:/loki'
    exposed_ports:
     - "3100"
  register: "podman_container_state"
  notify: "restart loki"

# ***** SERVICE CONFIGS *****
- name: handle systemd service
  vars:
    container_name: "loki"
    container_ip: "{{podman_loki_ip}}"
    container_readyness: { "type": "port_check", "ip": "{{podman_loki_ip}}", "port": "3100" }
#    container_after: [ "alertmanager" ] # => skipped dependency, because loki & fluentd should start as soon as possible
    container_changed: "{{podman_container_state.changed}}"
  include_tasks: roles/container/shared/handle_podman_service.yml
  tags: ['systemd_watcher_config','systemd_service_config']
      
- name: allow service
  vars:
    service_name: "loki"
    container_to_container_rules:
      - { saddr: "{{podman_prometheus_ip}}", daddr: "{{podman_loki_ip}}", protocol: "tcp", dport: "3100", comment: "prometheus => loki" }
      - { saddr: "{{podman_loki_ip}}", daddr: "{{podman_alertmanager_ip}}", protocol: "tcp", dport: "9093", comment: "prometheus => alertmanager" }
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: add container name
  vars:
    host_name: "loki"
    host_ip_address: "{{podman_loki_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

# ***** DEPENDENCY CONFIGS *****
- name: register prometheus rules & metrics
  vars:
    name: "loki"
    scrape_file: "templates/prometheus/scrape.yml"
  include_tasks: roles/prometheus/shared/add_config.yml
  tags: ['prometheus_config']
  when: "monitoring_enabled"

- name: register loki rules
  vars:
    name: "loki"
    rules_file: "templates/etc/loki/rules.yaml"
  include_tasks: roles/loki/shared/add_config.yml
  tags: ['loki_config']
  when: "monitoring_enabled"

- name: register webui
  vars:
    name: "loki"
    js_file: "templates/webui/loki.js"
    i18n_files: [ { language: "de", file: "templates/webui/loki.de.json" } ]
    icons: [ 'templates/webui/icons/loki_logs.svg' ]
  include_tasks: roles/apache_webui/shared/add_webui.yml
  tags: ['apache_webui_config']

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/loki.conf"
  include_tasks: roles/fluentd/shared/add_config.yml
  tags: ['fluentd_config']
  when: "monitoring_enabled"

- name: register grafana configs
  vars:
    name: "loki"
    datasources: 
      - "templates/grafana/datasources/loki.yaml"
    dashboards:
      - "templates/grafana/dashboards/Logs.json"
  include_tasks: roles/grafana/shared/add_datasource.yml
  tags: ['grafana_config']
  when: "grafana_enabled"

- name: register update notifier
  vars:
    name: "loki"
    type: "docker"
    url: "https://github.com/grafana/loki/releases"
    config: {
      repository: "grafana/loki",
      pattern: "^([0-9\\.]+)$"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"
