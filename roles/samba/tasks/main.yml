- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{ global_etc }}samba" }
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{ global_lib }}samba" }
      - { mode: "u=rwx,g=rx,o=", owner: "root", group: "root", path: "{{ global_lib }}samba/private" }
  include_tasks: roles/_shared/create_directories.yml

- name: copy config
  template:
    src: "templates/etc/smb.conf"
    dest: "{{ global_etc }}samba/smb.conf"
    owner: root
    group: root
    mode: 0640
  notify: "restart samba"

- name: build container image
  vars:
    container_name: "samba"
    image_name: "custom_samba:{{alpine_version}}"
    image_files:
      - roles/samba/templates/container/Dockerfile
  include_tasks: roles/container/shared/build_podman_image.yml
  
- name: prepare published_ports
  set_fact:
    samba_published_ports:  |
      [
        "137:137/udp",
        "138:138/udp",
        "139:139/tcp",
        "445:445/tcp",
        {% if default_server_ipv6 is defined %}
          "[::]:137:137/udp",
          "[::]:138:138/udp",
          "[::]:139:139/tcp",
          "[::]:445:445/tcp",
        {% endif %}
      ]
  tags: ['firewall_config']

- name: create container service
  vars:
    container_name: "samba"
    container_image: "custom_samba:{{alpine_version}}"
    container_network: "isolated"
    container_ip: "{{podman_samba_ip}}"
    container_published_ports: "{{samba_published_ports}}"
    container_volumes:
      - '{{ global_etc }}samba:/etc/samba:ro'
      - '{{ global_lib }}samba:/var/lib/samba:rw'
      - '{{nextcloud_data_path}}:{{nextcloud_data_path}}:rw'
#      - '{{base_path}}:{{base_path}}:rw'
#      - '{{data_path}}:{{data_path}}:rw'
      - '/etc/group:/etc/group:ro'
      - '/etc/passwd:/etc/passwd:ro'
#      - '/etc/shadow:/etc/shadow:ro'
    container_readyness: { "type": "port_check", "ip": "{{podman_samba_ip}}", "port": "445" }
  include_tasks: roles/container/shared/create_podman_service.yml
  tags: ['podman_container','systemd_watcher_config','systemd_service_config']

- name: allow container service
  vars:
    service_name: "samba"
    nat_rules: { ip: "{{podman_samba_ip}}", ports: "{{samba_published_ports}}" }
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

