- name: set version
  set_fact:
    librenms_version: '24.12.0'
  tags: [ 'update_notifier_config' ]    

- name: "create user and group => user or group does not exists"
  vars:
    user: { name: "librenms", system: true, home: "{{global_etc}}librenms" }
    group: { name: "librenms", system: true }
  include_tasks: roles/user/shared/add_system_user.yml
  when: "'librenms' not in system_users or 'librenms' not in system_groups"

- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_etc}}librenms" }
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_etc}}librenms/nginx" }
      - { mode: "u=rwx,g=rwx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_log}}librenms" }                     # mode sync with librenms entrypoint
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms" }
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms/alert-templates" }
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms/monitoring-plugins" }
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms/plugins" }
      - { mode: "u=rwx,g=rwx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms/rrd" }                 # mode sync with librenms entrypoint
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms/weathermap" }
  include_tasks: roles/_shared/create_directories.yml

- name: copy config
  template:
    src: "templates/etc/librenms/{{item}}"
    dest: "{{global_etc}}librenms/{{item}}"
    owner: "{{system_users['librenms'].name}}"
    group: "{{system_groups['librenms'].name}}"
    mode: 0640
  with_items:
    - "nginx/nginx.conf"
    - "config.php"
  notify: "restart librenms"

- name: create container service
  vars:
    container_name: "librenms"
    container_image: "librenms/librenms:{{librenms_version}}"
    container_network: "isolated"
    container_ip: "{{podman_librenms_ip}}"
    container_capabilities:
#      - NET_ADMIN
      - NET_RAW
    container_env:
#      OBSERVIUM_ADMIN_USER: "admin"
#      OBSERVIUM_ADMIN_PASS: "admin"
      PUID: "{{system_users['librenms'].id}}"
      PGID: "{{system_groups['librenms'].id}}"
      DB_HOST: "mariadb"
      DB_USERNAME: "{{librenms_mariadb_username}}"
      DB_PASSWORD: "{{librenms_mariadb_password}}"
      DB_DATABASE: "librenms"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      REDIS_DB: "1"
#      APP_URL: "https://librenms.{{server_domain}}/"
#      LIBRENMS_BASE_URL: "https://librenms.{{server_domain}}/"
    container_exposed_ports:
      - "162"
      - "514"
      - "8000/tcp"
    # all volumes needs to writeable, because librenms runs chown on OPENHAB_HOME
    container_volumes:
      - '{{global_etc}}librenms/nginx/:/tpls/etc/nginx/:rw'
      - '{{global_etc}}librenms:/data/config:rw'
      - '{{global_log}}librenms:/data/logs:rw'
      - '{{global_lib}}librenms/alert-templates:/data/alert-templates:rw'
      - '{{global_lib}}librenms/monitoring-plugins:/data/monitoring-plugins:rw'
      - '{{global_lib}}librenms/plugins:/data/plugins:rw'
      - '{{global_lib}}librenms/rrd:/data/rrd:rw'
      - '{{global_lib}}librenms/weathermap:/data/weathermap:rw'
    container_after: [ "redis", "mariadb" ]
    container_readyness: { "type": "port_check", "ip": "{{podman_librenms_ip}}", "port": "8000" }
  include_tasks: roles/container/shared/create_podman_service.yml
  tags: ['podman_container','systemd_watcher_config','systemd_service_config']

- name: allow container service
  vars:
    service_name: "librenms"
    container_to_container_rules:
      - { saddr: "{{podman_librenms_ip}}", daddr: "{{podman_mariadb_ip}}", protocol: "tcp", dport: "3306", comment: "librenms => mariadb" }
      - { saddr: "{{podman_librenms_ip}}", daddr: "{{podman_redis_ip}}", protocol: "tcp", dport: "6379", comment: "librenms => redis" }
    container_to_outside_rules:
      - { saddr: "{{podman_librenms_ip}}", daddr: "{{intern_networks}}", comment: "librenms => internal networks (snmp scanner)" }
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: add service name
  vars:
    host_name: "librenms"
    host_ip_address: "{{podman_librenms_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

# ***** MARIADB DATABASE ****
- name: create database
  vars:
    database: "librenms"
    username: "{{librenms_mariadb_username}}"
    password: "{{librenms_mariadb_password}}"
    backup: yes
  include_tasks: roles/mariadb/shared/add_database.yml
  tags: ['cron_job','backup_restore']
  when: "mariadb_enabled"
  
# ***** DEPENDENCY CONFIGS *****
- name: register webui
  vars:
    name: "librenms"
    js_file: "templates/webui/librenms.js"
    i18n_files: [ { language: "de", file: "templates/webui/librenms.de.json" } ]
    icons: [ 'templates/webui/icons/librenms_logo.svg' ]
  include_tasks: roles/apache_webui/shared/add_webui.yml
  tags: ['apache_webui_config']

- name: copy apache vhost
  vars:
    sub_domain: "librenms"
    usergroup: "admin"
    include: "templates/etc/apache2/_.ansible.vhost.d/librenms.inc"
  include_tasks: roles/apache/shared/add_vhost.yml
  tags: ['apache_config']

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/librenms.conf"
  include_tasks: roles/fluentd/shared/add_config.yml
  tags: ['fluentd_config']
  when: "monitoring_enabled"
    
- name: register update notifier
  vars:
    name: "librenms"
    type: "docker"
    url: "https://github.com/librenms/librenms/releases"
    config: {
      repository: "librenms/librenms",
      pattern: "^([0-9\\.]+)$"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"
