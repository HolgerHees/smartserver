- name: set version
  set_fact:
    librenms_version: '24.4.1'
  tags: [ 'update_notifier_config' ]    

- name: "create user and group => user or group does not exists"
  vars:
    user: { name: "librenms", system: true, home: "{{global_etc}}librenms" }
    group: { name: "librenms", system: true }
  include_tasks: roles/user/shared/add_system_user.yml
  when: "'librenms' not in system_users or 'librenms' not in system_groups"

- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_etc}}librenms" }
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_etc}}librenms/nginx" }
      - { mode: "u=rwx,g=rwx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_log}}librenms" }                     # mode sync with librenms entrypoint
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms" }
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms/alert-templates" }
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms/monitoring-plugins" }
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms/plugins" }
      - { mode: "u=rwx,g=rwx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms/rrd" }                 # mode sync with librenms entrypoint
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['librenms'].name}}", group: "{{system_groups['librenms'].name}}", path: "{{global_lib}}librenms/weathermap" }
  include_tasks: roles/_shared/create_directories.yml

- name: copy config
  template:
    src: "templates/etc/librenms/{{item}}"
    dest: "{{global_etc}}librenms/{{item}}"
    owner: "{{system_users['librenms'].name}}"
    group: "{{system_groups['librenms'].name}}"
    mode: 0640
  with_items:
    - "nginx/nginx.conf"
    - "config.php"
  notify: "restart librenms"

- name: create docker container
  docker_container:
    name: librenms
    image: "librenms/librenms:{{librenms_version}}"
    state: present
#    recreate: true
#    user: "{{system_users['librenms'].name}}:{{system_groups['librenms'].name}}"
    env:
#      OBSERVIUM_ADMIN_USER: "admin"
#      OBSERVIUM_ADMIN_PASS: "admin"
      PUID: "{{system_users['librenms'].id}}"
      PGID: "{{system_groups['librenms'].id}}"
      DB_HOST: "mysql"
      DB_USERNAME: "{{librenms_mysql_username}}"
      DB_PASSWORD: "{{librenms_mysql_password}}"
      DB_DATABASE: "librenms"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      REDIS_DB: "1"
#      APP_URL: "https://librenms.{{server_domain}}/"
#      LIBRENMS_BASE_URL: "https://librenms.{{server_domain}}/"
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: librenms
    container_default_behavior: "compatibility"
    network_mode: "default"
    networks: 
      - name: "isolated"
        ipv4_address: "{{docker_librenms_ip}}"
    networks_cli_compatible: yes
    volumes:
      - '{{global_etc}}librenms/nginx/:/tpls/etc/nginx/:z'
      - '{{global_etc}}librenms:/data/config:z'
      - '{{global_log}}librenms:/data/logs:z'
      - '{{global_lib}}librenms/alert-templates:/data/alert-templates:z'
      - '{{global_lib}}librenms/monitoring-plugins:/data/monitoring-plugins:z'
      - '{{global_lib}}librenms/plugins:/data/plugins:z'
      - '{{global_lib}}librenms/rrd:/data/rrd:z'
      - '{{global_lib}}librenms/weathermap:/data/weathermap:z'
    exposed_ports:
     - "8000"
  notify: "restart librenms"

- name: prepare ferm rules
  set_fact:
    librenms_ferm_rules: |
      [
      "saddr {{docker_librenms_ip}} daddr {{docker_mysql_ip}}",
      "saddr {{docker_librenms_ip}} daddr {{docker_redis_ip}}",
      {% for network in intern_networks %}
        "saddr {{docker_librenms_ip}} daddr {{network}}",
      {% endfor %}
      ]
  tags: ['firewall_config']

- name: allow librenms service
  vars:
    name: "librenms"
    rules: "{{librenms_ferm_rules}}"
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']

- name: add container name
  vars:
    host_name: "librenms"
    host_ip_address: "{{docker_librenms_ip}}"
  include_tasks: roles/_shared/add_to_hosts.yml

# ***** MYSQL DATABASE ****
- name: create database
  vars:
    database: "librenms"
    username: "{{librenms_mysql_username}}"
    password: "{{librenms_mysql_password}}"
    backup: yes
  include_tasks: roles/mysql/shared/add_database.yml
  tags: ['cron_job','backup_restore']
  when: "mysql_enabled"
  
# ***** FINALIZE *****
- name: register webui
  vars:
    name: "librenms"
    js_file: "templates/webui/librenms.js"
    i18n_files: [ { language: "de", file: "templates/webui/librenms.de.json" } ]
    icons: [ 'templates/webui/icons/librenms_logo.svg' ]
  include_tasks: roles/apache_webui/shared/add_webui.yml
  tags: ['apache_webui_config']

- name: copy apache vhost
  vars:
    sub_domain: "librenms"
    usergroup: "admin"
    include: "templates/etc/apache2/_.ansible.vhost.d/librenms.inc"
  include_tasks: roles/apache/shared/add_vhost.yml
  tags: ['apache_config']

- name: copy fluentd config
  vars:
    config_file: "templates/etc/fluent/_.ansible.d/librenms.conf"
  include_tasks: roles/fluentd/shared/add_config.yml
  tags: ['fluentd_config']
  when: "monitoring_enabled"
    
- name: create systemd service
  vars:
    container_name: "librenms"
    container_after: [ "redis", "mysql" ]
  include_tasks: roles/container/shared/add_docker_service.yml
  tags: ['systemd_watcher_config']

- name: register update notifier
  vars:
    name: "librenms"
    type: "docker"
    url: "https://github.com/librenms/librenms/releases"
    config: {
      repository: "librenms/librenms",
      pattern: "^([0-9\\.]+)$"
    }
  include_tasks: roles/update_service/shared/add_software.yml
  tags: ['update_notifier_config']
  when: "update_service_software_check_enabled"

- name: trigger librenms handler
  vars:
    notify: "restart librenms"
    service: "librenms.service"
  include_tasks: roles/_shared/service_check.yml

