- name: "nvidia: copy nouveau blacklist"
  template:
    src: "templates{{item.path}}"
    dest: "{{item.path}}"
    owner: root
    group: root
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rwx,g=rx,o=", path: "/etc/modprobe.d/10-ansible-nvidia.conf" } # block iptables
    - { mode: "u=rwx,g=rx,o=", path: "/etc/modules-load.d/10-ansible-nvidia.conf" }

# https://docs.nvidia.com/cuda/pdf/CUDA_Installation_Guide_Linux.pdf

- name: "nvidia : add yum repository => is_rhel or is_fedora"
  yum_repository:
    name: "{{item.name}}"
    description: "{{item.name}} repository"
    priority: "50"
    baseurl: "{{item.url}}"
  with_items:
    - { name: "NVIDIA", url: "https://developer.download.nvidia.com/compute/cuda/repos/rhel{{ansible_distribution_major_version}}/$basearch/" }
  when: "(is_rhel|bool or is_fedora|bool)"

- name: "nvidia : install required packages => is_rhel or is_fedora"
  yum:
    name:
#      - nvidia-compute-G06
      - nvidia-compute-utils-550-server
      - nvidia-container-toolkit
      - nvtop
    state: present
    disable_gpg_check: true
  when: "(is_rhel|bool or is_fedora|bool)"

- name: "nvidia : fetch repository settings => is_ubuntu"
  get_url:
    url: "https://developer.download.nvidia.com/compute/cuda/repos/ubuntu{{ansible_distribution_version | replace('.','') }}/{{ansible_architecture}}/cuda-keyring_1.1-1_all.deb"
    dest: "/root/cuda-keyring_1.1-1_all.deb"
  when: "is_ubuntu|bool"

- name: "nvidia : add apt repository => is_ubuntu"
  apt:
    deb: "/root/cuda-keyring_1.1-1_all.deb"
    state: present
  when: "is_ubuntu|bool"

- name: "nvidia : install required packages => is_ubuntu"
  apt:
    name:
#      - nvidia-compute-G06
      - nvidia-compute-utils-550-server
      - nvidia-container-toolkit
      - nvtop
    state: present
  when: "is_ubuntu|bool"

- name: "nvidia : add zypper repository => is_suse"
  zypper_repository:
    name: "{{item.name}}"
    repo: "{{item.url}}"
    auto_import_keys: yes
    priority: "100"
    state: present
  with_items:
    - { name: "NVIDIA", url: "https://developer.download.nvidia.com/compute/cuda/repos/opensuse{{ansible_distribution_major_version}}/{{ansible_architecture}}/" }
  when: "is_suse"

- name: "nvidia : install required packages => is_suse"
  zypper:
    name:
      - nvidia-compute-G06
      - nvidia-compute-utils-G06
      - nvidia-container-toolkit
#      - nvidia-utils-G06
      - nvtop
    state: present
  when: "is_suse"

- name: "nvidia : prepare cdi config"
  shell: "nvidia-ctk cdi generate"
  register: cdi_config_result
  changed_when: no
  failed_when: no

- name: "nvidia : generate cdi config"
  copy:
    content: "{{ ( cdi_config_result.stdout_lines + [''] ) | join('\n') }}"
    dest: /etc/cdi/nvidia.yaml

- name: "nvidia : disable nvidia-powerd # temporary"
  systemd:
    name: nvidia-powerd
    state: stopped
    daemon_reload: yes
    enabled: no
    masked: no

- name: "nvidia : disable nvidia-persistanced" # temporary => missing libnvidia-cfg.so.1 on suse
  systemd:
    name: nvidia-persistenced
    state: stopped
    daemon_reload: yes
    enabled: no
    masked: no

- name: "nvidia : register system package dependency"
  vars:
    tag: "hardware_gpu"
    packages: [ "nvidia.*" ]
  include_tasks: roles/update_service/shared/add_dependency.yml
  tags: ['update_system_config']
  when: "update_service_system_check_enabled"
