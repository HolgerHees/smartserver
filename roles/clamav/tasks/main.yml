- name: install required packages => is_fedora
  yum:
    name: [
      clamav
      , clamav-update
      , clamav-server 
      , clamav-server-systemd 
      , clamav-scanner
    ]
    state: present
  register: fedora_install_status
  notify: "restart clamav"
  when: is_fedora|bool

- name: add zypper repository => is_suse
  zypper_repository:
    name: Security (clamav)
    repo: "http://download.opensuse.org/repositories/security/openSUSE_Leap_{{ansible_distribution_version}}/"
    auto_import_keys: yes
    priority: "100"
    state: present
  when: is_suse|bool

- name: install required packages => is_suse
  zypper:
    name: clamav>=0.101.3
    state: present
  register: suse_install_status
  notify: "restart clamav"
  when: is_suse|bool

- name: disable config
  lineinfile:
    path: "/etc/{{ 'clamd.conf' if is_suse|bool else 'clamd.d/scan.conf' }}"
    regexp: '^{{item.regexp}}'
    line: '{{item.line}}'
    backrefs: yes
  with_items:
    - { regexp: "(Example.*)", line: "#\\1" }
    - { regexp: "(TCPSocket.*)", line: "#\\1" }
    - { regexp: "(TCPAddr.*)", line: "#\\1" }
  notify: "restart apache2"

- name: set config
  lineinfile:
    path: "/etc/{{ 'clamd.conf' if is_suse|bool else 'clamd.d/scan.conf' }}"
    regexp: '^{{item.regexp}}'
    line: '{{item.line}}'
  with_items:
    - { regexp: "LogFacility .*", line: "LogFacility LOG_MAIL" }
    - { regexp: "PidFile .*", line: "PidFile {{ '/var/run/clamav/clamd.pid' if is_suse else '/run/clamd.scan/clamd.pid'  }}" }
    - { regexp: "LocalSocket .*", line: "LocalSocket {{ '/var/run/clamav/clamd-socket' if is_suse else '/run/clamd.scan/clamd.sock'  }}" }

- name: load initial database => package installation changed
  shell: '/usr/bin/freshclam --no-warnings'
  notify: "restart clamav"
  register: update_result
  failed_when: "'failed' in update_result.stderr"
  when: suse_install_status.changed or fedora_install_status.changed

- name: change clamd startup timeout
  lineinfile:
    path: "/usr/lib/systemd/system/{{ 'clamd.service' if is_suse|bool else 'clamd@.service' }}"
    insertafter: '^\[Service\]'
    regexp: '^TimeoutSec\s*='
    line: 'TimeoutSec=5min'
  notify: "restart clamav"

#- name: create cron job => is_production
#  vars:
#    name: "ClamAV file check"
#    cmd: "clamscan -r -i {{nextcloud_data_path}}"
#    file: "ansible_clamav_check"
#    hour: "3"
#    minute: "0"
#  import_tasks: roles/cron/tasks/add_cronjob.yml
#  when: "is_production|bool"

# ***** FINALIZE *****
- name: register service watcher => is_fedora
  vars:
    name: "clamd@scan"
  import_tasks: roles/systemd_watcher/tasks/add_watcher.yml
  when: is_fedora|bool

- name: register service watcher => is_fedora
  vars:
    name: "clamd"
  import_tasks: roles/systemd_watcher/tasks/add_watcher.yml
  when: is_fedora|bool

- name: register service watcher
  vars:
    name: "freshclam"
  import_tasks: roles/systemd_watcher/tasks/add_watcher.yml
  when: is_suse|bool

- name: trigger service check handler
  vars:
    notify: "restart clamav"
    service: "clamd@scan.service"
  import_tasks: roles/base/tasks/service_check.yml
  when: is_fedora|bool

- name: trigger service check handler
  vars:
    notify: "restart clamav"
    service: "freshclam.service"
  import_tasks: roles/base/tasks/service_check.yml
  when: is_suse|bool

- name: trigger service check handler
  vars:
    notify: "restart clamav"
    service: "clamd.service"
  import_tasks: roles/base/tasks/service_check.yml
  when: is_suse|bool
