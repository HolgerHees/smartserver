- name: install required python pip modules
  pip:
    name: [
        paho-mqtt
      , pillow
    ]
    executable: "pip3"
  notify: "restart roomba"

- name: prepare map htdocs folder
  file:
    path: "{{htdocs_path}}roomba"
    state: directory
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0755

- name: prepare app folder
  file:
    path: "/opt/roomba"
    state: directory
    owner: root
    group: root
    mode: 0750

- name: copy roomba ressources
  copy:
    src: "templates/opt/roomba/{{item}}"
    dest: "/opt/roomba/"
    owner: root
    group: root
  with_items:
    - "res"
    - "password.py"
    - "roomba_rssi.py"
    - "roomba.py"
  notify: "restart roomba"
  
- name: copy config and service
  template:
    src: "templates{{item.path}}"
    dest: "{{item.path}}"
    owner: root
    group: root
    mode: "{{item.mode}}"
  with_items:
    - { mode: "u=rw,g=r,o=", path: "/opt/roomba/config.ini" }
    - { mode: "u=rw,g=r,o=", path: "/opt/roomba/start_service.py" }
    - { mode: "u=rw,g=r,o=r", path: "/etc/systemd/system/roomba.service" }
  notify: "restart roomba"

# ***** FINALIZE *****
- name: register systemd service watcher
  vars:
    name: "roomba"
  import_tasks: roles/systemd_watcher/tasks/add_watcher.yml
  when: "is_production|bool" # restart handler is also disabled if no production

- name: trigger service check handler
  vars:
    notify: "restart roomba"
    service: "roomba.service"
  import_tasks: roles/base/tasks/service_check.yml
  when: "is_production|bool" # restart handler is also disabled if no production
