groups:
- name: weather_service
  rules:
  - alert: Weather mqtt availability
    expr: 'weather_service_state{job="weather_service", type="mqtt"} == 0'
    for: 0m
    labels:
      notifyGroup: "weather_service"
      severity: critical
    annotations:
      summary: "Weather service mqtt"

  - alert: Weather database availability
    expr: 'weather_service_state{job="weather_service", type="mysql"} == 0'
    for: 0m
    labels:
      notifyGroup: "weather_service"
      severity: critical
    annotations:
      summary: "Weather service database"

  - alert: Weather provider
    expr: 'weather_service_state{job="weather_service", type="provider"} == 0'
    for: 0m
    labels:
      notifyGroup: "weather_service"
      severity: critical
    annotations:
      summary: "Weather provider problem"

  - alert: Weather consumer (provider)
    expr: 'weather_service_state{job="weather_service", type="consumer_provider"} == 0'
    for: 0m
    labels:
      notifyGroup: "weather_service"
      severity: critical
    annotations:
      summary: "Weather consumer (provider) problem"

  - alert: Weather consumer (station)
    expr: 'weather_service_state{job="weather_service", type="consumer_station"} == 0'
    for: 0m
    labels:
      notifyGroup: "weather_service"
      severity: critical
    annotations:
      summary: "Weather consumer (station) problem"
