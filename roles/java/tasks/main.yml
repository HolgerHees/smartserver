# *** Download and install JDK ***
#- name: check jdk
#  stat:
#    path: "{{ global_build }}amazon-corretto-8.212.04.2-linux-x64.tar.gz"
#  register: jdk_exists
#  changed_when: not jdk_exists.stat.exists

#- name: download jdk archive
#  get_url:
#    dest: "{{ global_build }}amazon-corretto-8.212.04.2-linux-x64.tar.gz"
#    url: "https://d3pxv6yz143wms.cloudfront.net/8.212.04.2/amazon-corretto-8.212.04.2-linux-x64.tar.gz"
#    validate_certs: yes
#    timeout: 60
#    force: no
#  register: oracle_jdk_task_download
#  until: oracle_jdk_task_download is succeeded 
#  when: not jdk_exists.stat.exists

#- name: install jdk archive
#  unarchive:
#    src: "{{ global_build }}amazon-corretto-8.212.04.2-linux-x64.tar.gz"
#    dest: "/opt"
#    creates: "/opt/amazon-corretto-8.212.04.2-linux-x64/"
#    remote_src: true
    
- name: install jdk archive
  unarchive:
    src: "https://d3pxv6yz143wms.cloudfront.net/8.222.10.1/amazon-corretto-8.222.10.1-linux-x64.tar.gz"
#    src: "https://d3pxv6yz143wms.cloudfront.net/8.212.04.2/amazon-corretto-8.212.04.2-linux-x64.tar.gz"
    dest: "/opt"
    remote_src: true
    creates: "/opt/amazon-corretto-8.222.10.1-linux-x64/"
#    creates: "/opt/amazon-corretto-8.212.04.2-linux-x64/"
    register: jdk_exists

# *** ACTIVATE NEW JDK ***
- name: set alternatives
  alternatives:
    name: java
    path: "/opt/amazon-corretto-8.222.10.1-linux-x64//bin/java"
#    path: "/opt/amazon-corretto-8.212.04.2-linux-x64/bin/java"
    link: /usr/bin/java
    when: jdk_exists.changed
