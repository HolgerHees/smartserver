# suse user: ftp:x:476:476:FTP Account:/srv/ftp:/sbin/nologin
# suse group: ftp:!:476:
# fedora user: ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
# fedora group: ftp:x:50:
- name: "create user and group => user or group does not exists"
  vars:
    user: { name: "ftp", system: true, home: "{{global_lib}}camera_service/upload/" }
    group: { name: "ftp", system: true }
  include_tasks: roles/user/shared/add_system_user.yml
  when: "'ftp' not in system_users or 'ftp' not in system_groups"

- name: prepare needed directories
  vars:
    directories: |
      [
        { "mode": "u=rwx,g=rx,o=", "owner": "{{system_users['ftp'].name}}", "group": "{{system_groups['ftp'].name}}", "path": "{{global_lib}}camera_service/upload/" },
        {% for item in camera_devices %}{% if 'ftp_upload_name' in item %}
          { "mode": "u=rwx,g=rx,o=", "owner": "{{system_users['ftp'].name}}", "group": "{{system_groups['ftp'].name}}", "path": "{{global_lib}}camera_service/upload/{{item['ftp_upload_name']}}/" },
        {% endif %}{% endfor %}
      ]
  include_tasks: roles/_shared/create_directories.yml

- name: build podman image
  vars:
    container_name: "vsftpd"
    image_name: "custom_vsftpd"
    image_version: "{{alpine_version}}"
    image_files:
      - roles/camera_ftp/templates/container/Dockerfile
      - roles/camera_ftp/templates/container/entrypoint.sh
  include_tasks: roles/container/shared/build_podman_image.yml
  
- name: prepare published_ports
  set_fact:
    camera_ftp_published_ports:  |
      [
        "21:21",
        "20:20",
        "30000-30005:30000-30005",
        {% if default_server_ipv6 is defined %}
          "[::]:21:21",
          "[::]:20:20",
          "[::]:30000-30005:30000-30005",
        {% endif %}
      ]
  tags: ['firewall_config']
  
- name: create podman container
  containers.podman.podman_container:
    name: vsftpd
    image: "custom_vsftpd:{{alpine_version}}"
    state: present
    security_opt:
      - label=disable
    env:
      FTP_USER: "{{camera_ftp_username}}"
      FTP_PASS: "{{camera_ftp_password}}"
      FTP_UID: "{{system_users['ftp'].id}}"
      FTP_GID: "{{system_groups['ftp'].id}}"
      ONLY_UPLOAD: "YES"
      ONLY_DOWNLOAD: "NO"
      PASV_ENABLE: "YES"
      PASV_ADDRESS: "127.0.0.1"
      PASV_MIN: "30000"
      PASV_MAX: "30005"
      UMASK: "022"
      TZ: "{{timezone}}"
    log_driver: journald
    log_options:
      tag: vsftpd
    volumes:
      - '{{global_lib}}/camera_service/upload/:/home/upload'
    network: "isolated"
    ip: "{{podman_camera_ftp_ip}}"
    published_ports: "{{camera_ftp_published_ports}}"
  register: "podman_container_state"
  notify: "restart vsftpd"

# ***** SERVICE CONFIGS *****
- name: handle systemd service
  vars:
    container_name: "vsftpd"
    container_changed: "{{podman_container_state.changed}}"
    container_readyness: { "ip": "{{podman_camera_ftp_ip}}", "port": "21" }
  include_tasks: roles/container/shared/handle_podman_service.yml
  tags: ['systemd_watcher_config','systemd_service_config']

- name: allow service
  vars:
    service_name: "vsftpd"
    container_to_outside_rules:
      - { saddr: "{{podman_camera_ftp_ip}}", sport: "20", daddr: "{{intern_networks}}", protocol: "tcp", comment: "camera_ftp => internal networks" }
    nat_rules: { ip: "{{podman_camera_ftp_ip}}", ports: "{{camera_ftp_published_ports}}" }
  include_tasks: roles/firewall/shared/allow_service_nftables.yml
  tags: ['firewall_config']
  when: "nftables_enabled"

- name: prepare firewall rules
  set_fact:
    ftp_rules: "{{ (ftp_rules | default([])) + [ 'saddr ' + podman_camera_ftp_ip + ' proto tcp sport 20 daddr ' + item ] }}"
  with_items: "{{ intern_networks }}"
  tags: ['firewall_config']

- name: allow service
  vars:
    firewall_name: "ftp"
    firewall_rules: "{{ftp_rules}}"
  include_tasks: roles/firewall/shared/allow_service.yml
  tags: ['firewall_config']
  when: "not nftables_enabled"

# ***** DEPENDENCY CONFIGS *****
- name: create cron job
  vars:
    name: "Camera Cleanup"
    cmd: "find {{global_lib}}/camera_service/upload/ -name \"*.jpg\" -mmin +{{camera_ftp_max_file_age}} -exec rm {} +"
    group: "camera_ftp"
    hour: "0"
    minute: "50"
  include_tasks: roles/cron/shared/add_cronjob.yml
  tags: ['cron_job']
