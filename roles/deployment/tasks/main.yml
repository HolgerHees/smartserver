- name: check if git is updateable => ! (directory exists and contains not commited or pushed changes)
  shell: "[[ -d {{projects_path}}{{ansible_project_name}} ]] && cd {{projects_path}}{{ansible_project_name}} && ( ! git diff-index --quiet HEAD || git status | grep -q 'git push' )"
  register: deployment_git_check_result
  changed_when: "deployment_git_check_result.rc == 0"
  failed_when: no

- name: clone git
  git:
#    accept_hostkey: yes
    repo: '{{vault_deployment_config_git}}'
    dest: '{{projects_path}}{{ansible_project_name}}'
#    force: yes
    version: 'master'
  when: "deployment_git_check_result.rc == 1"
  
- name: prepare needed folder
  file:
    path: "{{item}}"
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - "{{projects_path}}{{ansible_project_name}}/{{config_path}}backup/"
    - "/opt/backup_collector"
    
- name: copy cmd
  template:
    src: "templates/collect_backup.sh"
    dest: "/opt/backup_collector/collect_backup.sh"
    owner: root
    group: root
    mode: 0750

- name: create cron job
  vars:
    name: "Backup Collector"
    cmd: "/opt/backup_collector/collect_backup.sh;"
    file: "ansible_deployment"
    hour: "5"
    minute: "0"
  import_tasks: roles/cron/tasks/add_cronjob.yml
