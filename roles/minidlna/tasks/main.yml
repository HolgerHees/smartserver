- name: prepare needed directories
  vars:
    directories:
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['www'].name}}", group: "{{system_groups['www'].name}}", path: "{{global_etc}}minidlna" }
      - { mode: "u=rwx,g=rx,o=", owner: "{{system_users['www'].name}}", group: "{{system_groups['www'].name}}", path: "{{global_lib}}minidlna" }
  include_tasks: roles/_shared/create_directories.yml

- name: prepare dlna folder
  file:
    path: "{{item}}"
    state: directory
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0750
  with_items: "{{dlna_volumes}}"

- name: copy config
  template:
    src: "templates/minidlna.conf"
    dest: "{{global_etc}}minidlna/minidlna.conf"
    owner: "{{system_users['www'].name}}"
    group: "{{system_groups['www'].name}}"
    mode: 0750
  notify: "restart minidlna"

- name: build podman image
  vars:
    container_name: "minidlna"
    image_name: "custom_minidlna"
    image_version: "{{alpine_version}}"
    image_files:
      - roles/minidlna/templates/container/Dockerfile
      - roles/minidlna/templates/container/entrypoint.sh
  include_tasks: roles/container/shared/build_podman_image.yml

- name: prepare volumes
  set_fact:
    minidlna_volumes: |
      [
      "{{global_etc}}minidlna:/etc/minidlna",
      "{{global_lib}}minidlna:/minidlna",
      {% for dlna_volume in dlna_volumes %}
      "{{dlna_volume}}:{{dlna_volumes[dlna_volume]}}/",
      {% endfor %}
      ]

- name: create podman container
  containers.podman.podman_container:
    name: minidlna
    image: "custom_minidlna:{{alpine_version}}"
    state: present
    security_opt:
      - label=disable
    env:
      TZ: "{{timezone}}"
      PGID: "{{system_groups['www'].id}}"
      PUID: "{{system_users['www'].id}}"
    log_driver: journald
    log_options:
      tag: minidlna
    network: "macvlan"
    ip: "{{dlna_ip}}"
    ip6: "{{dlna_ipv6 if dlna_ipv6 is defined else ''}}"
    volumes: "{{minidlna_volumes}}"
    exposed_ports:
     - "8200/tcp"  
     - "1900/udp"  
  register: "podman_container_state"
  notify: "restart minidlna"

# ***** SERVICE CONFIGS *****
- name: handle systemd service
  vars:
    container_name: "minidlna"
    container_changed: "{{podman_container_state.changed}}"
  include_tasks: roles/container/shared/handle_podman_service.yml
  tags: ['systemd_watcher_config']
