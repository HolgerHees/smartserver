---
- name: backup all certificates
  hosts: all
  become: yes
  become_user: root
  tasks:
    # load shared variables
    - name: load shared vars
      include_vars: "{{playbook_dir}}/../config/shared.yml"
      tags: always
  
    - name: set config path
      set_fact:
        config_path: "{{playbook_dir}}/../config/{{inventory_hostname}}/"

    - name: check config path
      stat:
        path: "{{config_path}}"
      register: config_directory

    - assert:
        that: config_directory.stat.exists
        msg: "No valid config path. Config directory '{{config_path}}' does not exists"

    - name: prepare backup directories
      file:
        path: "{{config_path}}vault_backup/{{item}}"
        state: directory
      with_items:
        - easy-rsa
        - easy-rsa/issued
        - easy-rsa/private
        - easy-rsa/reqs
        - openvpn
        - letsencrypt

    - name: backup letsencrypt certificate
      archive:
        path: "/etc/letsencrypt/"
        dest: "{{config_path}}vault_backup/letsencrypt/letsencrypt.tgz"
        format: "gz"
      tags: [vault_certificates]

    - name: backup easy-rsa certificates
      copy:
        src: "/etc/easy-rsa/pki/{{item}}"
        dest: "{{config_path}}vault_backup/easy-rsa/{{item}}"
      with_items:
        - "issued/server.crt"
        - "issued/mobile.crt"
        - "private/ca.key"
        - "private/server.key"
        - "private/mobile.key"
        - "reqs/server.req"
        - "reqs/mobile.req"
        - "ca.crt"
        - "dh.pem"
    #    - "certs_by_serial/76C34AF12707764CFBBE86AA4BB64751.pem"  // server.crt
    #    - "certs_by_serial/B0C6214224191008AE8BF1D26F09D2B1.pem"  // mobile.crt
    #    - "private/server.pass"
    #    - "serial"
    #    - "index.txt.attr"
    #    - "index.txt"
      tags: [vault_certificates]
      
    - name: backup openvpn shared key
      copy:
        src: "/etc/openvpn/cloud_shared.key"
        dest: "{{config_path}}vault_backup/openvpn/cloud_shared.key"
      failed_when: false
      tags: [vault_certificates]

    - name: backup wireguard mobile key
      copy:
        src: "{{global_etc}}/wireguard_mobile/keys/"
        dest: "{{config_path}}vault_backup/wireguard_mobile/"
      tags: [vault_certificates]

    #- name: backup wireguard mobile key
    #  copy:
    #    src: "{{global_etc}}/wireguard_mobile/keys/"
    #    dest: "{{config_path}}vault_backup/{{item | regex_replace() }}"
    #  with_fileglob: "{{global_etc}}wireguard_*/keys"
    #  tags: [vault_certificates]
